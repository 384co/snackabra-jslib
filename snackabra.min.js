!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.SB=t():e.SB=t()}(self,(()=>(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{Channel:()=>ce,ChannelApi:()=>ue,ChannelEndpoint:()=>he,ChannelSocket:()=>de,MessageBus:()=>a,SB:()=>fe,SB384:()=>te,SBCrypto:()=>Z,SBFile:()=>ie,SBMessage:()=>ae,SBObjectHandleClass:()=>ye,Snackabra:()=>pe,_appendBuffer:()=>L,_assertBase64:()=>f,_sb_assert:()=>d,_sb_exception:()=>l,_sb_resolve:()=>h,arrayBuffer32ToBase62:()=>M,arrayBufferToBase64:()=>I,assemblePayload:()=>V,base62ToArrayBuffer32:()=>R,base62ToBase64:()=>D,base64ToArrayBuffer:()=>A,base64ToBase62:()=>T,cleanBase32mi:()=>J,compareBuffers:()=>j,decodeB64Url:()=>X,encodeB64Url:()=>W,encryptedContentsMakeBinary:()=>s,extractPayload:()=>q,extractPayloadV1:()=>z,getRandomValues:()=>g,isBase62Encoded:()=>N,jsonParseWrapper:()=>G,partition:()=>F,simpleRand256:()=>$,simpleRandomString:()=>H});var n=function(e,t,n,r){var o,s=arguments.length,a=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(o=e[i])&&(a=(s<3?o(a):s>3?o(t,n,a):o(t,n))||a);return s>3&&a&&Object.defineProperty(t,n,a),a};const r=[{channel_server:"https://channel.384co.workers.dev",channel_ws:"wss://channel.384co.workers.dev",storage_server:"https://storage.384co.workers.dev",shard_server:"https://shard.3.8.4.land"},{channel_server:"https://r.384co.workers.dev",channel_ws:"wss://r.384co.workers.dev",storage_server:"https://s.384co.workers.dev"}];var o=!1;function s(e){try{let t,n;if(o&&(console.log("=+=+=+=+ processing content"),console.log(e.content.constructor.name)),"string"==typeof e.content)try{t=A(decodeURIComponent(e.content))}catch(e){throw new Error("EncryptedContents is string format but not base64 (?)")}else{const n=e.content.constructor.name;d("ArrayBuffer"===n||"Uint8Array"===n,"undetermined content type in EncryptedContents object"),t=e.content}if(o&&console.log("=+=+=+=+ processing nonce"),"string"==typeof e.iv)o&&(console.log("got iv as string:"),console.log(structuredClone(e.iv))),n=A(decodeURIComponent(e.iv)),o&&(console.log("this was turned into array:"),console.log(structuredClone(n)));else if("Uint8Array"===e.iv.constructor.name||"ArrayBuffer"===e.iv.constructor.name)o&&console.log("it's an array already"),n=new Uint8Array(e.iv);else{o&&console.log("probably a dictionary");try{n=new Uint8Array(Object.values(e.iv))}catch(t){o&&(console.error("ERROR: cannot figure out format of iv (nonce), here's the input object:"),console.error(e.iv)),d(!1,"undetermined iv (nonce) type, see console")}}return o&&(console.log("decided on nonce as:"),console.log(n)),d(12==n.length,`unwrap(): nonce should be 12 bytes but is not (${n.length})`),{content:t,iv:n}}catch(e){throw console.error("encryptedContentsMakeBinary() failed:"),console.error(e),console.trace(),console.log(e.stack),e}}class a{bus={};#e(e){return this.bus[e]||(this.bus[e]=[])}subscribe(e,t){this.#e(e).push(t)}unsubscribe(e,t){let n=-1;this.bus[e]?-1!=(n=this.bus[e].findLastIndex((e=>e==t)))?this.bus[e].splice(n,1):console.info("fyi: asked to remove a handler but it's not there"):console.info("fyi: asked to remove a handler but the event is not there")}publish(e,...t){for(const n of this.#e("*"))n(e,...t);for(const n of this.#e(e))n(...t)}}function i(e,t){return!1===navigator.onLine&&console.info("Note: you are offline, according to the browser"),t?fetch(e,t):fetch(e,{method:"GET"})}function c(e){return e instanceof Error?e:new Error(String(e))}function l(e,t){throw new Error("<< SB lib error ("+e+": "+t+") >>")}function h(e){return e.then?e:new Promise((t=>t(e)))}function d(e,t){if(!e)throw new Error(`<< SB assertion error: ${t} >>`)}async function y(e){const t=new te(e),n=await t.ready.then((e=>e.keyPair)),r=await crypto.subtle.exportKey("jwk",n.privateKey),o=await crypto.subtle.exportKey("jwk",n.publicKey),s=t.ownerChannelId,a=await crypto.subtle.generateKey({name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),i=await crypto.subtle.exportKey("jwk",a),c=await crypto.subtle.generateKey({name:"ECDH",namedCurve:"P-384"},!0,["deriveKey"]),l=await crypto.subtle.exportKey("jwk",c.privateKey);return{channelData:{roomId:s,ownerKey:JSON.stringify(o),encryptionKey:JSON.stringify(i),signKey:JSON.stringify(l)},exportable_privateKey:r}}function g(e){if(e.byteLength<4096)return crypto.getRandomValues(e);{d(!(e.byteLength%1024),"getRandomValues(): large requested blocks must be multiple of 1024 in size");let t=0;try{for(t=0;t<e.byteLength;t+=1024){let n=new Uint8Array(1024);crypto.getRandomValues(n),e.set(n,t)}}catch(e){console.log(`got an error on index i=${t}`),console.log(e),console.trace()}return e}}const u=/([A-Za-z0-9+/_\-=]{64})([01]{42})/,p=/^([A-Za-z0-9+/_\-=]*)$/;function f(e){const t=p.exec(e);return!!t&&t[0]===e}function w(e){const t=p.exec(e);return d(t&&t[0]===e,"ensureSafe() tripped: something is not URI safe"),e}const m=[],b=[],v=[],k="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",S=k+"+/",K=k+"-_",C="=",O=16383;for(let e=0,t=S.length;e<t;++e)m[e]=S[e],b[e]=K[e],v[S.charCodeAt(e)]=e;function A(e){if(!f(e))throw new Error(`invalid character in string '${e}'`);let t;switch(e.length%4){case 2:e+="==";break;case 3:e+="="}const[n,r]=function(e){const t=e.length;let n=e.indexOf(C);return-1===n&&(n=t),[n,n===t?0:4-n%4]}(e),o=new Uint8Array(function(e,t){return 3*(e+t)/4-t}(n,r));let s=0;const a=r>0?n-4:n;let i;for(i=0;i<a;i+=4)t=v[e.charCodeAt(i)]<<18|v[e.charCodeAt(i+1)]<<12|v[e.charCodeAt(i+2)]<<6|v[e.charCodeAt(i+3)],o[s++]=t>>16&255,o[s++]=t>>8&255,o[s++]=255&t;return 2===r&&(t=v[e.charCodeAt(i)]<<2|v[e.charCodeAt(i+1)]>>4,o[s++]=255&t),1===r&&(t=v[e.charCodeAt(i)]<<10|v[e.charCodeAt(i+1)]<<4|v[e.charCodeAt(i+2)]>>2,o[s++]=t>>8&255,o[s++]=255&t),o}function _(e,t){return e[t>>18&63]+e[t>>12&63]+e[t>>6&63]+e[63&t]}function E(e,t,n,r){let o;const s=new Array((r-n)/3);for(let a=n,i=0;a<r;a+=3,i++)o=(t.getUint8(a)<<16&16711680)+(t.getUint8(a+1)<<8&65280)+(255&t.getUint8(a+2)),s[i]=_(e,o);return s.join("")}v["-".charCodeAt(0)]=62,v["_".charCodeAt(0)]=63;const P=e=>e instanceof ArrayBuffer?new DataView(e):new DataView(e.buffer,e.byteOffset,e.byteLength);function j(e,t){if(typeof e!=typeof t)return!1;if(null==e||null==t)return!1;const n=P(e),r=P(t);if(n.byteLength!==r.byteLength)return!1;for(let e=0;e<n.byteLength;e++)if(n.getUint8(e)!==r.getUint8(e))return!1;return!0}function I(e,t="url"){if(null==e)return l("L509","arrayBufferToBase64() -> null paramater"),"";{const n=P(e),r=n.byteLength,o=r%3,s=r-o,a=new Array(Math.floor(s/O)+Math.sign(o)),i="url"==t?b:m,c="";let l=0;for(let e=0;e<s;e+=O)a[l++]=E(i,n,e,e+O>s?s:e+O);if(1===o){const e=n.getUint8(r-1);a[l]=i[e>>2]+i[e<<4&63]+c+c}else if(2===o){const e=(n.getUint8(r-2)<<8)+n.getUint8(r-1);a[l]=i[e>>10]+i[e>>4&63]+i[e<<2&63]+c}return a.join("")}}const B="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",x=/^(a32\.)?[0-9A-Za-z]{43}$/;function R(e){if(!x.test(e))throw new Error(`base62ToArrayBuffer32: string must match: ${x}`);e=e.slice(4);let t=0n;for(let n=0;n<e.length;n++)t=62n*t+BigInt(B.indexOf(e[n]));if(t>2n**256n-1n)throw new Error("base62ToArrayBuffer32: value exceeds 256 bits.");const n=new ArrayBuffer(32),r=new DataView(n);for(let e=0;e<8;e++){const n=Number(BigInt.asUintN(32,t));r.setUint32(4*(8-e-1),n),t>>=32n}return n}function M(e){if(32!==e.byteLength)throw new Error("arrayBuffer32ToBase62: buffer must be exactly 32 bytes (256 bits).");let t="";for(let n=BigInt("0x"+Array.from(new Uint8Array(e)).map((e=>e.toString(16).padStart(2,"0"))).join(""));n>0n;n/=62n)t=B[Number(n%62n)]+t;return"a32."+t.padStart(43,"0")}function D(e){return I(R(e))}function T(e){return M(A(e))}function N(e){return x.test(e)}function L(e,t){const n=new Uint8Array(e.byteLength+t.byteLength);return n.set(new Uint8Array(e),0),n.set(new Uint8Array(t),e.byteLength),n.buffer}function $(){return crypto.getRandomValues(new Uint8Array(1))[0]}const U="0123456789abcdefyhEjkLmNHpFrRTUW";function H(e,t){if("base32mi"==t){const t=crypto.getRandomValues(new Uint8Array(e));let n="";for(let r=0;r<e;r++)n+=U[31&t[r]];return n}return l("simpleRandomString","code "+t+" not supported"),""}function J(e){return e.replace(/[OoQD]/g,"0").replace(/[lIiJ]/g,"1").replace(/[Zz]/g,"2").replace(/[A]/g,"4").replace(/[Ss]/g,"5").replace(/[G]/g,"6").replace(/[t]/g,"7").replace(/[B]/g,"8").replace(/[gq]/g,"9").replace(/[C]/g,"c").replace(/[Y]/g,"y").replace(/[KxX]/g,"k").replace(/[M]/g,"m").replace(/[n]/g,"N").replace(/[P]/g,"p").replace(/[uvV]/g,"U").replace(/[w]/g,"w")}function F(e,t){throw`partition() not tested on TS yet - (${e}, ${t})`}function G(e,t){if(null==e)return null;try{return JSON.parse(e)}catch(n){try{let t="",n="",r=e;for(;r!=(n=t,t=r,r=r?.match(/^(['"])(.*)\1$/m)?.[2]);)return JSON.parse(`'${n}'`)}catch{try{return JSON.parse(e.slice(1,-1))}catch{throw new Error(`JSON.parse() error at ${t} (tried eval and slice)\nString was: ${e}`)}}}}function z(e){try{const t=new Uint32Array(e.slice(0,4))[0],n=G((new TextDecoder).decode(e.slice(4,4+t)),"L476");let r=4+t;const o={};for(const t in n)o.key&&(o[t]=e.slice(r,r+n[t]),r+=n[t]);return o}catch(e){return console.error(e),{}}}function V(e){try{const t={version:"002"};let n=0,r=0;for(const o in e)n++,t[n.toString()]={name:o,start:r,size:e[o].byteLength},r+=e[o].byteLength;const o=(new TextEncoder).encode(JSON.stringify(t)),s=new Uint32Array([o.byteLength]);let a=L(new Uint8Array(s.buffer),new Uint8Array(o));for(const t in e)a=L(new Uint8Array(a),e[t]);return a}catch(e){return console.error(e),null}}function q(e){try{const t=new Uint32Array(e.slice(0,4))[0],n=G((new TextDecoder).decode(e.slice(4,4+t)),"L533"),r=4+t;switch(n.version||(n.version="001"),n.version){case"001":return z(e);case"002":{const t=[];for(let o=1;o<Object.keys(n).length;o++){const s=o.toString();if(n[s]){const o=n[s].start,a=n[s].size;t[n[s].name]=e.slice(r+o,r+o+a)}else console.log(`found nothing for index ${o}`)}return t}default:throw new Error("Unsupported payload version ("+n.version+") - fatal")}}catch(e){throw new Error("extractPayload() exception ("+e+")")}}function W(e){return e.replaceAll("+","-").replaceAll("/","_")}function X(e){const t=(e=e.replaceAll("-","+").replaceAll("_","/")).length%4;if(t){if(1===t)throw new Error("InvalidLengthError: Input base64url string is the wrong length to determine padding");e+=new Array(5-t).join("=")}return e}class Z{generateIdKey(e){return new Promise(((t,n)=>{try{crypto.subtle.digest("SHA-512",e).then((e=>{const n=e.slice(0,32),r=e.slice(32);t({id:I(n),key:I(r)})}))}catch(e){n(e)}}))}extractPubKey(e){try{const t={...e};return delete t.d,delete t.dp,delete t.dq,delete t.q,delete t.qi,t.key_ops=[],t}catch(e){return console.error(e),null}}generateKeys(){return new Promise((async(e,t)=>{try{e(await crypto.subtle.generateKey({name:"ECDH",namedCurve:"P-384"},!0,["deriveKey"]))}catch(e){t(e)}}))}importKey(e,t,n,r,o){const s={ECDH:{name:"ECDH",namedCurve:"P-384"},AES:{name:"AES-GCM"},PBKDF2:"PBKDF2"};return"jwk"===e?crypto.subtle.importKey("jwk",t,s[n],r,o):crypto.subtle.importKey(e,t,s[n],r,o)}deriveKey(e,t,n,r,o){return new Promise((async(s,a)=>{const i={AES:{name:"AES-GCM",length:256},HMAC:{name:"HMAC",hash:"SHA-256",length:256}};try{s(await crypto.subtle.deriveKey({name:"ECDH",public:t},e,i[n],r,o))}catch(s){console.error(s,e,t,n,r,o),a(s)}}))}encrypt(e,t,n,r="encryptedContents"){return new Promise((async(o,s)=>{try{null===e&&s(new Error("no contents"));const a=n&&null!==n?n:crypto.getRandomValues(new Uint8Array(12));"string"==typeof e&&(e=(new TextEncoder).encode(e)),crypto.subtle.encrypt({name:"AES-GCM",iv:a},t,e).then((e=>{o("encryptedContents"===r?{content:w(I(e)),iv:w(I(a))}:e)}))}catch(e){s(e)}}))}wrap(e,t,n){return new Promise((r=>{let o;o="string"===n?Y.str2ab(t):t,Y.encrypt(o,e).then((e=>{r(e)}))}))}unwrap(e,t,n){return o&&(console.log("SBCrypto.unwrap(), got k/o:"),console.log(e),console.log(t)),new Promise((async(r,a)=>{try{const{content:i,iv:c}=s(t);o&&(console.log("======== calling subtle.decrypt with iv, k, t (AES-GCM):"),console.log(c),console.log(e),console.log(i),console.log("======== (end of subtle.decrypt parameters)")),crypto.subtle.decrypt({name:"AES-GCM",iv:c},e,i).then((e=>{"string"===n?r((new TextDecoder).decode(e)):"arrayBuffer"===n&&r(e)})).catch((e=>{console.error(`unwrap(): failed to decrypt - rejecting: ${e}`),console.trace(),a(e)}))}catch(e){console.error(`unwrap(): unknown issue - rejecting: ${e}`),console.trace(),a(e)}}))}sign(e,t){return new Promise((async(n,r)=>{try{const o=(new TextEncoder).encode(t);let s;try{s=await crypto.subtle.sign("HMAC",e,o),n(w(I(s)))}catch(e){r(e)}}catch(e){r(e)}}))}verify(e,t,n){return new Promise(((r,o)=>{try{crypto.subtle.verify("HMAC",e,A(t),Y.str2ab(n)).then((e=>{r(e)}))}catch(e){o(c(e))}}))}str2ab(e){return(new TextEncoder).encode(e)}ab2str(e){return new TextDecoder("utf-8").decode(e)}compareKeys(e,t){return null!=e&&null!=t&&"object"==typeof e&&"object"==typeof t&&e.x===t.x&&e.y===t.y}async channelKeyStringsToCryptoKeys(e){return new Promise((async(t,n)=>{let r=G(e.ownerKey,"L1513");Promise.all([Y.importKey("jwk",r,"ECDH",!1,[]),Y.importKey("jwk",G(e.encryptionKey,"L2250"),"AES",!1,["encrypt","decrypt"]),Y.importKey("jwk",G(e.signKey,"L2251"),"ECDH",!0,["deriveKey"]),Y.importKey("jwk",Y.extractPubKey(G(e.signKey,"L2252")),"ECDH",!0,[])]).then((async e=>{o&&console.log("++++++++ readyPromise() processed first batch of keys");const n=e[0],s=e[1],a=e[2],i=e[3];t({ownerKey:n,ownerPubKeyX:r.x,encryptionKey:s,signKey:a,channelSignKey:a,publicSignKey:i})})).catch((e=>{console.error(`readyPromise(): failed to import keys: ${e}`),n(e)}))}))}}const Y=new Z;function Q(e,t,n){if(n.get){let r=n.get;n.get=function(){const n=`__${e.constructor.name}__${t}__`;if(this.hasOwnProperty(n))return this[n];{const e=r.call(this);return Object.defineProperty(this,n,{configurable:!1,enumerable:!1,writable:!1,value:e}),e}}}}function ee(e,t,n){if(n.get){let r=n.get;n.get=function(){const n=e.constructor.name;`${n}ReadyFlag`in this&&d(this.readyFlag,`${t} getter accessed but object ${n} not ready (fatal)`);const o=r.call(this);return d(null!=o,`${t} getter accessed in object type ${n} but returns NULL (fatal)`),o}}}class te{ready;sb384Ready;#t=!1;#n=null;#r=null;#o=null;#s=null;#a=null;constructor(e){this.ready=new Promise(((t,n)=>{try{if(e){this.#r=e;const n=Y.extractPubKey(e);d(n,"unable to extract public key"),this.#n=n,Y.importKey("jwk",e,"ECDH",!0,["deriveKey"]).then((e=>{this.#o=e,this.#i(this.#n.x,this.#n.y).then((e=>{this.#s=e,this.#t=!0,t(this)}))}))}else Y.generateKeys().then((e=>{this.#o=e.privateKey,this.#a=e,Promise.all([crypto.subtle.exportKey("jwk",e.publicKey),crypto.subtle.exportKey("jwk",e.privateKey)]).then((e=>{this.#n=e[0],this.#r=e[1],this.#i(this.#n.x,this.#n.y).then((e=>{this.#s=e,this.#t=!0,t(this)}))}))}))}catch(e){n(`failed to create Identity(): ${e}`)}})),this.sb384Ready=this.ready}#c(e){return new Promise(((t,n)=>{crypto.subtle.digest("SHA-384",e).then((e=>{const n=W(I(e));n.includes("-")?t(this.#c(e)):t(n)}))}))}#i(e,t){return new Promise(((n,r)=>{const o=L(A(X(e)),A(X(t)));n(this.#c(o))}))}get readyFlag(){return this.#t}get exportable_pubKey(){return this.#n}get exportable_privateKey(){return this.#r}get privateKey(){return this.#o}get keyPair(){return this.#a}get _id(){return JSON.stringify(this.exportable_pubKey)}get ownerChannelId(){return this.#s}}n([Q],te.prototype,"readyFlag",null),n([Q,ee],te.prototype,"exportable_pubKey",null),n([Q,ee],te.prototype,"exportable_privateKey",null),n([Q,ee],te.prototype,"privateKey",null),n([Q,ee],te.prototype,"keyPair",null),n([Q,ee],te.prototype,"_id",null),n([Q,ee],te.prototype,"ownerChannelId",null);const ne=["SBMessage","SBObjectHandle"],re=Symbol.for("SBMessage"),oe=Symbol.for("SBObjectHandle");function se(e,t){switch(t){case"SBMessage":return re in e;case"SBObjectHandle":return oe in e}}class ae{ready;channel;contents;[re]=!0;MAX_SB_BODY_SIZE=65536;constructor(e,t=""){d(t.length<this.MAX_SB_BODY_SIZE,"SBMessage(): body must be smaller than 64 KiB"),this.channel=e,this.contents={encrypted:!1,isVerfied:!1,contents:t,sign:"",image:"",imageMetaData:{}},this.ready=new Promise((n=>{e.ready.then((()=>{this.contents.sender_pubKey=this.channel.exportable_pubKey,e.userName&&(this.contents.sender_username=e.userName);const r=this.channel.keys.channelSignKey,o=Y.sign(r,t),s=Y.sign(r,this.contents.image),a=Y.sign(r,JSON.stringify(this.contents.imageMetaData));Promise.all([o,s,a]).then((e=>{this.contents.sign=e[0],this.contents.image_sign=e[1],this.contents.imageMetadata_sign=e[2],n(this)}))}))}))}send(){return new Promise(((e,t)=>{this.ready.then((()=>{this.channel.send(this).then((n=>{"success"===n?e(n):t(n)}))}))}))}}class ie extends ae{data={previewImage:"",fullImage:""};image="";image_sign="";imageMetaData={};constructor(e,t){throw new Error("working on SBFile()!")}async#l(e,t){throw new Error(`#asImage() needs carryover from SBImage etc (${e}, ${t})`)}}class ce extends te{ready;channelReady;#h=!1;#d;motd="";locked=!1;owner=!1;admin=!1;verifiedGuest=!1;userName="";#y;#g;#u;constructor(e,t,n){super(t),this.#d=e,this.#u=new ue(this),this.ready=new Promise((e=>{n?(this.#g=n,this.#h=!0,e(this)):this.sb384Ready.then((t=>{this.#g=this.ownerChannelId,this.#h=!0,e(this)}))})),this.channelReady=this.ready}async importKeys(e){const t=await Y.channelKeyStringsToCryptoKeys(e);t.channelSignKey=await Y.deriveKey(this.privateKey,t.publicSignKey,"HMAC",!1,["sign","verify"]),this.#y=t}get keys(){return this.#y||d(!1,"Channel.keys: not initialized (?)"),this.#y}get api(){return this.#u}get sbServer(){return this.#d}get channelId(){return this.#g}get readyFlag(){return this.#h}}function le(e,t,n){return new Promise(((r,o)=>{const a=u.exec(e),i=n.encryptionKey;if(a){let e={type:"encrypted",channelID:a[1],timestampPrefix:a[2],_id:a[1]+a[2],encrypted_contents:s(t)};Y.unwrap(i,e.encrypted_contents,"string").then((t=>{let s={...e,...G(t,"L1977")};s.contents&&(s.text=s.contents),s.user={name:s.sender_username?s.sender_username:"Unknown",_id:s.sender_pubKey},s.verificationToken&&!s.sender_pubKey?console.info("WARNING: message with verification token is lacking sender identity.\n         This may not be allowed in the future."):Y.importKey("jwk",s.sender_pubKey,"ECDH",!0,[]).then((e=>{Y.deriveKey(n.signKey,e,"HMAC",!1,["sign","verify"]).then((e=>{Y.verify(e,s.sign,s.contents).then((t=>{t||(console.log("***** signature is NOT correct message (rejecting)"),console.log("verifyKey:"),console.log(Object.assign({},e)),console.log("m2.sign"),console.log(Object.assign({},s.sign)),console.log("m2.contents"),console.log(structuredClone(s.contents)),console.log("Message:"),console.log(Object.assign({},s)),console.trace(),o(null)),r(s)}))}))}))}))}else console.log("++++++++ #processMessage: ERROR - cannot parse channel ID / timestamp, invalid message"),console.log(Object.assign({},e)),console.log(Object.assign({},t)),o(null)}))}n([Q,ee],ce.prototype,"channelId",null);class he extends ce{#p;adminData;constructor(e,t,n){super(e,t,n)}get keys(){return this.#p||d(!1,"ChannelEndpoint.keys: not initialized (?)"),this.#p}send(e,t){return new Promise(((e,t)=>{t("ChannelEndpoint.send(): not implemented")}))}set onMessage(e){d(!1,"ChannelEndpoint.onMessage: not implemented")}}class de extends ce{ready;#f=!1;#w;#m=null;#d;adminData;#b;#v=[];#k=!1;constructor(e,t,n,r){super(e,n,r),d(e.channel_ws,"ChannelSocket(): no websocket server name provided");const o=e.channel_ws+"/api/room/"+r+"/websocket";this.#b=t,this.#d=e,this.#w={url:o,ready:!1,closed:!1,timeout:2e3},this.ready=this.#S()}close=()=>{if(this.#w.websocket)return this.#w.websocket.close()};#K(e){this.#k&&(console.log("got raw message (string):"),console.log(structuredClone(e)));const t=G(e,"L1489");if(this.#k&&(console.log("... json unwrapped version of raw message:"),console.log(Object.assign({},t))),t.ack){const e=this.#v[t._id];e&&(console.log(`++++++++ found matching ack for id ${t._id} (on first check?)`),delete this.#v[t._id],e("success"))}else if(t.nack)console.error("Nack received"),this.#w.closed=!0;else if("function"==typeof this.#b){const e=t;try{let n=Object.entries(e)[0][1];if("encrypted_contents"===Object.keys(n)[0]){const e=Object.entries(t)[0][0],r=n.encrypted_contents.iv;r&&f(r)&&16==r.length?n.encrypted_contents.iv=A(r):console.error("processMessage() - iv is malformed, should be 16-char b64 string (ignoring)"),this.#k&&(console.log("vvvvvv - calling deCryptChannelMessage() with arg1, arg2, arg3:"),console.log(structuredClone(e)),console.log(structuredClone(n.encrypted_contents)),console.log(structuredClone(this.keys)),console.log("^^^^^^ - (end parameter list)")),le(e,n.encrypted_contents,this.keys).then((e=>{this.#k&&console.log(Object.assign({},e)),this.#b(e)})).catch((()=>{console.log("Error processing message, dropping it")}))}else if("ack"===n.type){this.#k&&console.log("++++++++ Received 'ack'");const e=n._id,t=this.#v[e];t?(this.#k&&console.log(`++++++++ found matching ack for id ${e}`),delete this.#v[e],t("success")):console.info(`WARNING: did not find matching ack for id ${e}`)}else console.log("++++++++ #processMessage: can't decipher message, passing along unchanged:"),console.log(Object.assign({},e)),this.#b(e)}catch(t){console.log(`++++++++ #processMessage: caught exception while decyphering (${t}), passing it along unchanged`),this.#b(e)}}else l("ChannelSocket","received message but there is no handler")}checkServerStatus(e,t,n){const r=new XMLHttpRequest;r.onreadystatechange=()=>{r.readyState===XMLHttpRequest.DONE&&(200===r.status?n(!0):n(!1))},r.open("HEAD",e),r.timeout=t,r.send()}#S(){const e=this.#w.url;let t=[],n=!1;return new Promise(((r,s)=>{o&&(console.log("++++++++ readyPromise() has url:"),console.log(e)),this.#w.websocket||(this.#w.websocket=new WebSocket(this.#w.url)),3===this.#w.websocket.readyState?this.#w.websocket=new WebSocket(e):2===this.#w.websocket.readyState&&(console.log("STRANGE - trying to use a ChannelSocket that is in the process of closing ..."),this.#w.websocket=new WebSocket(e)),this.#w.websocket.addEventListener("open",(()=>{this.#w.closed=!1,this.channelReady.then((()=>{this.#w.init={name:JSON.stringify(this.exportable_pubKey)},o&&(console.log("++++++++ readyPromise() constructed init:"),console.log(this.#w.init)),this.#w.websocket.send(JSON.stringify(this.#w.init))}))})),this.#w.websocket.addEventListener("message",(async e=>{if(o&&(console.log("++++++++ readyPromise() received ChannelKeysMessage:"),console.log(e)),n)return t.push(e.data),void(o&&(console.log("++++++++ readyPromise() pushing message to backlog:"),console.log(e)));n=!0;const s=G(e.data,"L2239");o&&console.log(s),d(s.ready,"got roomKeys but channel reports it is not ready (?)"),this.motd=s.motd,this.locked=s.roomLocked;const a=G(s.keys.ownerKey,"L2246");this.#m=a,o&&console.log(this.#m),await this.importKeys(s.keys),this.adminData=await this.api.getAdminData(),this.owner=Y.compareKeys(a,this.exportable_pubKey),o&&(console.log("++++++++ readyPromise() getting adminData:"),console.log(this.adminData)),this.admin=this.owner,t.length>0?queueMicrotask((()=>{o&&console.log("++++++++ readyPromise() inside micro task");for(let n in t)o&&(console.log("++++++++ pulling this message from the backlog:"),console.log(e)),this.#K(n)})):o&&console.log("++++++++ readyPromise() there were NO messages queued up"),this.#w.websocket.addEventListener("message",(e=>{this.#K(e.data)})),this.#f=!0,r(this)})),this.#w.websocket.addEventListener("close",(e=>{this.#w.closed=!0,e.wasClean?e.reason.includes("does not have an owner")?s(`No such channel on this server (${this.#d.channel_server})`):console.log("ChannelSocket() was closed (cleanly): ",e.reason):console.log(`ChannelSocket() was closed (and NOT cleanly: ${e.reason} from ${this.#d.channel_server}`),s("wbSocket() closed before it was opened (?)")})),this.#w.websocket.addEventListener("error",(e=>{this.#w.closed=!0,console.log("ChannelSocket() error: ",e),s("ChannelSocket creation error (see log)")}))}))}get status(){if(!this.#w.websocket)return"CLOSED";switch(this.#w.websocket.readyState){case 0:return"CONNECTING";case 1:return"OPEN";case 2:return"CLOSING";default:return"CLOSED"}}set onMessage(e){this.#b=e}get onMessage(){return this.#b}set enableTrace(e){this.#k=e,console.log(`Tracing ${e?"en":"dis"}abled`)}async sendSbObject(e){return this.send(e)}send(e){let t="string"==typeof e?new ae(this,e):e;return d(this.#w.websocket,"ChannelSocket.send() called before ready"),this.#w.closed&&(this.#k&&console.info("send() triggered reset of #readyPromise() (normal)"),this.ready=this.#S()),new Promise(((e,n)=>{t.ready.then((t=>{this.ready.then((()=>{switch(this.#k&&(console.log("++++++++ ChannelSocket.send() this message (cloned): "),console.log(Object.assign({},t))),this.#f||n("ChannelSocket.send() is confused - ready or not?"),this.#w.websocket.readyState){case 1:this.#k&&(console.log("Wrapping message contents:"),console.log(Object.assign({},t.contents))),Y.wrap(this.keys.encryptionKey,JSON.stringify(t.contents),"string").then((t=>{this.#k&&(console.log("ChannelSocket.send():"),console.log(Object.assign({},t)));const r=JSON.stringify({encrypted_contents:t});this.#k&&(console.log("++++++++ ChannelSocket.send() got this from wrap:"),console.log(structuredClone(r)),console.log("++++++++ ChannelSocket.send() then got this from JSON.stringify:"),console.log(Object.assign({},t))),crypto.subtle.digest("SHA-256",(new TextEncoder).encode(r)).then((t=>{const o=I(t),s={timestamp:Date.now(),type:"ack",_id:o};this.#v[o]=e,this.#k&&(console.log("++++++++ ChannelSocket.send() this message:"),console.log(structuredClone(r))),this.#w.websocket.send(r),this.#w.websocket.send(JSON.stringify(s)),setTimeout((()=>{if(this.#v[o]){delete this.#v[o];const e=`Websocket request timed out (no ack) after ${this.#w.timeout}ms (${o})`;console.error(e),n(e)}else this.#k&&console.log("++++++++ ChannelSocket.send() completed sending"),e("success")}),this.#w.timeout)}))}));break;case 3:case 0:case 2:const r="socket not OPEN - either CLOSED or in the state of CONNECTING/CLOSING";l("ChannelSocket",r),n(r)}}))}))}))}get exportable_owner_pubKey(){return this.#m}}n([function(e,t,n){const r=n.value;n.value=function(...e){for(let n of e){const e=n.constructor.name;"string"==typeof(t=e)&&ne.includes(t)&&d(se(n,e),`invalid parameter: ${n} (expecting ${e})`)}var t;return r.call(this,...e)}}],de.prototype,"send",null),n([Q,ee],de.prototype,"exportable_owner_pubKey",null);class ye{version="1";#C="b";#O;#A;#_;#E;#P;iv;salt;fileName;dateAndTime;shardServer;fileType;lastModified;actualSize;savedSize;constructor(e){const{version:t,type:n,id:r,key:o,id32:s,key32:a,verification:i,iv:c,salt:l,fileName:h,dateAndTime:d,shardServer:y,fileType:g,lastModified:u,actualSize:p,savedSize:f}=e;t&&(this.version=t),n&&(this.#C=n),this.id=r,this.key=o,s&&(this.id32=s),a&&(this.key32=a),i&&(this.#P=i),this.iv=c,this.salt=l,this.fileName=h,this.dateAndTime=d,this.shardServer=y,this.fileType=g,this.lastModified=u,this.actualSize=p,this.savedSize=f}#j(){this.#O&&this.#O}set id(e){f(e),this.#O=e,this.#_=T(e)}get id(){return d(this.#O,"object handle identifier is undefined"),this.#O}set key(e){f(e),this.#A=e,this.#E=T(e)}get key(){return d(this.#A,"object handle identifier is undefined"),this.#A}set id32(e){if(!N(e))throw new Error("Invalid base62 encoded ID");this.#_=e,this.#O=D(e)}set key32(e){if(!N(e))throw new Error("Invalid base62 encoded Key");this.#E=e,this.#A=D(e)}get id32(){return d(this.#_,"object handle id (32) is undefined"),this.#_}get key32(){return d(this.#E,"object handle key (32) is undefined"),this.#E}set verification(e){this.#P=e,this.#j()}get verification(){return d(this.#P,"object handle verification is undefined"),this.#P}get type(){return this.#C}}class ge{server;shardServer;channelServer;constructor(e,t,n){this.server=e+"/api/v1",this.channelServer=t+"/api/room/",this.shardServer=n?n+"/api/v1":"https://shard.3.8.4.land/api/v1"}#I(e){const t=e.byteLength;let n;n=t+4<4096?4096:t+4<1048576?2**Math.ceil(Math.log2(t+4)):1048576*Math.ceil((t+4)/1048576);let r=L(e,new Uint8Array(n-t).buffer);return new DataView(r).setUint32(n-4,t),o&&(console.log("#padBuf bytes:"),console.log(r.slice(-4))),r}#B(e){const t=e.slice(-4);var n=new DataView(t).getUint32(0);const r=new DataView(t).getUint32(0,!0);return r<n&&(o&&console.warn("#unpadData - size of shard encoded as little endian (fixed upon read)"),n=r),o&&console.log(`#unpadData - size of object is ${n}`),e.slice(0,n)}#x(e,t){return new Promise(((n,r)=>{try{Y.importKey("raw",A(decodeURIComponent(e)),"PBKDF2",!1,["deriveBits","deriveKey"]).then((e=>{crypto.subtle.deriveKey({name:"PBKDF2",salt:t,iterations:1e5,hash:"SHA-256"},e,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]).then((e=>{n(e)}))}))}catch(e){r(e)}}))}#R(e,t){return new Promise(((n,r)=>{i(this.server+"/storeRequest?name="+e+"&type="+t).then((e=>e.arrayBuffer())).then((e=>{const t=q(e);n({salt:new Uint8Array(t.salt),iv:new Uint8Array(t.iv)})})).catch((e=>{console.log(`ERROR: ${e}`),r(e)}))}))}#M(e,t,n,r,o,s,a){return new Promise(((c,l)=>{this.#x(n,a).then((n=>{Y.encrypt(e,n,s,"arrayBuffer").then((e=>{i(this.channelServer+o+"/storageRequest?size="+e.byteLength).then((e=>e.json())).then((n=>{n.hasOwnProperty("error")&&l("storage token request error");let o=JSON.stringify(n);this.storeData(r,t,s,a,o,e).then((e=>{e.error&&l(`storeObject() failed: ${e.error}`),e.image_id!=t&&l(`received imageId ${e.image_id} but expected ${t}`),c(e.verification_token)})).catch((e=>{console.log("ERROR in _storeObject(): ${e}"),l(e)}))}))}))}))}))}getObjectMetadata(e,t){return new Promise(((n,r)=>{const o=this.#I(e);Y.generateIdKey(o).then((e=>{this.#R(e.id,t).then((r=>{const s={[oe]:!0,version:"1",type:t,id:e.id,key:e.key,iv:r.iv,salt:r.salt,paddedBuffer:o};n(s)})).catch((e=>r(e)))}))}))}storeObject(e,t,n,r){return new Promise(((s,a)=>{e instanceof Uint8Array&&(o&&console.log("converting Uint8Array to ArrayBuffer"),e=new Uint8Array(e).buffer),e instanceof ArrayBuffer||"ArrayBuffer"==e.constructor.name||(o&&console.log("buf must be an ArrayBuffer:"),console.log(e),a("buf must be an ArrayBuffer"));const i=e.byteLength;if(r){const e={[oe]:!0,version:"1",type:t,id:r.id,key:r.key,iv:r.iv,salt:r.salt,actualSize:i,verification:this.#M(r.paddedBuffer,r.id,r.key,t,n,r.iv,r.salt)};s(e)}else{const r=this.#I(e);Y.generateIdKey(r).then((e=>{this.#R(e.id,t).then((o=>{const a={[oe]:!0,version:"1",type:t,id:e.id,key:e.key,iv:o.iv,salt:o.salt,actualSize:i,verification:this.#M(r,e.id,e.key,t,n,o.iv,o.salt)};s(a)})).catch((e=>a(e)))}))}}))}saveFile(e,t){console.log("saveFile()");const n=t.imageMetaData,r=this.storeImage(t.data.fullImage,n.imageId,n.imageKey,"f"),o=this.storeImage(t.data.previewImage,n.previewId,n.previewKey,"p");Promise.all([r,o]).then((n=>{n.forEach((t=>{e.sendSbObject({...t,control:!0})})),e.send(t)}))}storeRequest(e){return new Promise(((t,n)=>{i(this.server+"/storeRequest?name="+e).then((e=>(e.ok||n(new Error("Network response was not OK")),e.arrayBuffer()))).then((e=>{t(e)})).catch((e=>{n(e)}))}))}storeData(e,t,n,r,o,s){return new Promise(((a,c)=>{i(this.server+"/storeData?type="+e+"&key="+w(t),{method:"POST",body:V({iv:n,salt:r,image:s,storageToken:(new TextEncoder).encode(o),vid:crypto.getRandomValues(new Uint8Array(48))})}).then((e=>(e.ok||c("response from storage server was not OK"),e.json()))).then((e=>{a(e)})).catch((e=>{c(e)}))}))}storeImage(e,t,n,r){throw new Error("StorageApi.storeImate() needs TS version")}#D(e,t){return new Promise(((n,r)=>{try{let t=G(Y.ab2str(new Uint8Array(e)),"L3062");t.error&&r(`#processData() error: ${t.error}`),o&&(console.log("#processData() JSON.parse() returned:"),console.log(t),console.warn("should this happen?"))}catch(e){}finally{const r=q(e);o&&(console.log("Payload is:"),console.log(r));const s=new Uint8Array(r.iv),a=new Uint8Array(r.salt),i=t.iv?"string"==typeof t.iv?A(t.iv):t.iv:void 0,c=t.salt?"string"==typeof t.salt?A(t.salt):t.salt:void 0;i&&!j(s,i)&&(console.error("WARNING: nonce from server differs from local copy"),console.log(`object ID: ${t.id}`),console.log(` local iv: ${I(i)}`),console.log(`server iv: ${I(r.iv)}`)),c&&!j(a,c)&&(console.error("WARNING: salt from server differs from local copy (will use server)"),console.log(` object ID: ${t.id}`),console.log("server salt:"),console.log("data.salt as b64:"),console.log(I(r.salt)),console.log("data.salt unprocessed:"),console.log(r.salt),console.log("'salt' as b64:"),console.log(I(a)),console.log("salt unprocessed:"),console.log(a),console.log("local salt:"),t.salt?"string"==typeof t.salt?(console.log("h.salt is in string form (unprocessed):"),console.log(t.salt)):(console.log("h.salt is in arrayBuffer or Uint8Array"),console.log("h.salt as b64:"),console.log(I(t.salt)),console.log("h.salt unprocessed:"),console.log(t.salt)):console.log("h.salt is undefined"),console.log("handleSalt as b64:"),console.log(I(c)),console.log("handleSalt unprocessed:"),console.log(c)),o&&(console.log("will use nonce and salt of:"),console.log(`iv: ${I(s)}`),console.log(`salt : ${I(a)}`)),this.#x(t.key,a).then((e=>{const t=r.image;o&&(console.log("data.image:      "),console.log(r.image),console.log("encrypted_image: "),console.log(t)),Y.unwrap(e,{content:t,iv:s},"arrayBuffer").then((e=>{const t=this.#B(e);o&&(console.log(" unwrapped img: "),console.log(t)),n(t)}))}))}}))}fetchData(e,t="arrayBuffer"){return new Promise(((n,r)=>{try{o&&(console.log("Calling fetchData():"),console.log(e),console.log(t)),e||r("SBObjectHandle is null or undefined"),"string"==typeof e.verification&&(e.verification=new Promise((t=>{t(e.verification)}))),e.verification.then((s=>{d(s,"fetchData(): missing verification token (?)");const a=e.shardServer?e.shardServer+"/api/v1":this.shardServer?this.shardServer:this.server;o&&console.log("fetching from server: "+a),i(a+"/fetchData?id="+w(e.id)+"&type="+e.type+"&verification_token="+s,{method:"GET"}).then((e=>(e.ok||r(new Error("Network response was not OK")),e.arrayBuffer()))).then((t=>this.#D(t,e))).then((e=>{n("string"===t?Y.ab2str(new Uint8Array(e)):e)}))}))}catch(e){r(e)}}))}async retrieveImage(e,t,n,r,o){console.trace("retrieveImage()"),console.log(e);const s=n||e.previewId,a=r||e.previewKey,i=o||"p",c=t.find((e=>e.id&&e.id==s));if(console.log(c),c){d(c.verificationToken,"retrieveImage(): verificationToken missing (?)"),d(c.id,"retrieveImage(): id missing (?)");const e={type:i,id:c.id,key:a,verification:new Promise(((e,t)=>{c.verificationToken?e(c.verificationToken):t("retrieveImage(): verificationToken missing (?)")}))},t=await this.fetchData(e);return console.log(t),{url:"data:image/jpeg;base64,"+I(t,"b64")}}return{error:"Failed to fetch data - missing control message for that image"}}}class ue{#d;#T;#N;#L;#$;#U="";constructor(e){this.#N=e,this.#d=this.#N.sbServer,this.#T=this.#d.channel_server,this.#L=this.#T+"/api/",this.#$=this.#T+"/api/room/"}getLastMessageTimes(){return new Promise(((e,t)=>{i(this.#L+"/getLastMessageTimes",{method:"POST",body:JSON.stringify([this.#N.channelId])}).then((e=>(e.ok||t(new Error("Network response was not OK")),e.json()))).then((t=>{e(t[this.#N.channelId])})).catch((e=>{t(e)}))}))}getOldMessages(e=100,t=!1){return new Promise(((n,r)=>{let s="";t&&(s="&cursor="+this.#U),i(this.#$+this.#N.channelId+"/oldMessages?currentMessagesLength="+e+s,{method:"GET"}).then((async e=>(e.ok||r(new Error("Network response was not OK")),e.json()))).then((e=>{o&&(console.log("getOldMessages"),console.log(structuredClone(Object.values(e)))),Promise.all(Object.keys(e).filter((t=>e[t].hasOwnProperty("encrypted_contents"))).map((t=>le(t,e[t].encrypted_contents,this.#N.keys)))).then((e=>{let t=e[e.length-1];this.#U=t._id||t.id||"",o&&(console.log("getOldMessages() is returning:"),console.log(e),console.log("cursor is now:"),console.log(this.#U)),n(e)}))})).catch((e=>{r(e)}))}))}#H(e,t){return o&&console.log(e),o&&t&&console.log(t),new Promise(((n,r)=>{try{i(this.#$+this.#N.channelId+e,t).then((e=>(e.ok||r(new Error("Network response was not OK")),e.json()))).then((e=>{e.error&&r(new Error(e.error)),n(e)})).catch((e=>{r("ChannelApi Error [1]: "+c(e))}))}catch(e){r("ChannelApi Error [2]: "+c(e))}}))}updateCapacity(e){return this.#H("/updateRoomCapacity?capacity="+e)}getCapacity(){return this.#H("/getRoomCapacity")}getStorageLimit(){return this.#H("/getStorageLimit")}getMother(){return this.#H("/getMother")}getJoinRequests(){return this.#H("/getJoinRequests")}isLocked(){return new Promise((e=>this.#H("/roomLocked").then((t=>{console.log(t),e(!0===t.locked)}))))}setMOTD(e){return this.#H("/motd",{method:"POST",body:JSON.stringify({motd:e}),headers:{"Content-Type":"application/json"}})}getAdminData(){return new Promise((async(e,t)=>{const n=(new Date).getTime().toString();Y.sign(this.#N.keys.channelSignKey,n).then((t=>{e(this.#H("/getAdminData",{method:"GET",credentials:"include",headers:{authorization:n+"."+t,"Content-Type":"application/json"}}))})).catch((e=>t(e)))}))}downloadData(){return new Promise(((e,t)=>{i(this.#$+this.#N.channelId+"/downloadData",{method:"GET",headers:{"Content-Type":"application/json"}}).then((e=>(e.ok||t(new Error("Network response was not OK")),e.json()))).then((t=>{Promise.all(Object.keys(t).filter((e=>{const n=new RegExp(this.#N.channelId);if(e.match(n)){const n=G(t[e],"L3318");if(n.hasOwnProperty("encrypted_contents"))return o&&console.log(n),n}})).map((e=>{const n=G(t[e],"L3327");return o&&console.log(e,n.encrypted_contents,this.#N.keys),le(e,n.encrypted_contents,this.#N.keys)}))).then((n=>{let r={};n.forEach((e=>{if(!e.control&&e.imageMetaData.imageId){const t=n.find((t=>t.id&&t.id==e.imageMetaData.imageId)),o=n.find((t=>t.id&&t.id==e.imageMetaData.previewId));r[`${e.imageMetaData.imageId}.f`]=t?.verificationToken,r[`${e.imageMetaData.previewId}.p`]=o?.verificationToken}})),e({storage:r,channel:t})}))})).catch((e=>{t(e)}))}))}uploadChannel(e){return new Promise(((t,n)=>{i(this.#$+this.#N.channelId+"/uploadRoom",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}}).then((e=>(e.ok||n(new Error("Network response was not OK")),e.json()))).then((e=>{t(e)})).catch((e=>{n(e)}))}))}authorize(e,t){return this.#H("/authorizeRoom",{method:"POST",body:JSON.stringify({roomId:this.#N.channelId,SERVER_SECRET:t,ownerKey:e})})}postPubKey(e){throw new Error("postPubKey() deprecated")}storageRequest(e){return this.#H("/storageRequest?size="+e,{method:"GET",credentials:"include",headers:{"Content-Type":"application/json"}})}lock(){return console.trace("WARNING: lock() on channel api has not been tested/debugged fully .."),new Promise((async(e,t)=>{if(null==this.#N.keys.lockedKey&&this.#N.admin){const n=await crypto.subtle.generateKey({name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),r=await crypto.subtle.exportKey("jwk",n);this.#H("lockRoom").then((t=>{t.locked&&this.acceptVisitor(JSON.stringify(this.#N.exportable_pubKey)).then((()=>{e({locked:t.locked,lockedKey:r})}))})).catch((e=>{t(e)}))}else t(new Error("no lock key or not admin"))}))}acceptVisitor(e){return console.warn("WARNING: acceptVisitor() on channel api has not been tested/debugged fully .."),new Promise((async(t,n)=>{d(this.#N.keys.privateKey,"acceptVisitor(): no private key");const r=await Y.deriveKey(this.#N.keys.privateKey,await Y.importKey("jwk",G(e,"L2276"),"ECDH",!1,[]),"AES",!1,["encrypt","decrypt"]),o=await Y.encrypt(Y.str2ab(JSON.stringify(this.#N.keys.lockedKey)),r);i(this.#$+this.#N.channelId+"/acceptVisitor",{method:"POST",body:JSON.stringify({pubKey:e,lockedKey:JSON.stringify(o)}),headers:{"Content-Type":"application/json"}}).then((e=>(e.ok||n(new Error("Network response was not OK")),e.json()))).then((e=>{t(e)})).catch((e=>{n(e)}))}))}ownerKeyRotation(){throw new Error("ownerKeyRotation() replaced by new budd() approach")}budd(e){let{keys:t,storage:n,targetChannel:r}=e??{};return new Promise((async(e,o)=>{try{if(n||(n=1/0),r){if(t)throw new Error("[budd()]: You can't specify both a target channel and keys");return this.#H(`/budd?targetChannel=${r}&transferBudget=${n}`)}{const{channelData:r,exportable_privateKey:s}=await y(t),a=(new TextEncoder).encode(JSON.stringify(r));let c=await i(this.#$+this.#N.channelId+`/budd?targetChannel=${r.roomId}&transferBudget=${n}`,{method:"POST",body:a});c=await c.json(),c.success?e({channelId:r.roomId,key:s}):o(JSON.stringify(c))}}catch(e){o(e)}}))}}n([function(e,t,n){const r=n.value;n.value=function(...o){try{return r.call(this,...o)}catch(r){return console.log(`ExceptionReject: ${c(r)}`),console.log(e),console.log(t),console.log(n),new Promise(((e,t)=>t(`Reject: ${c(r)}`)))}}}],ue.prototype,"isLocked",null);class pe{#J;#N;#F;constructor(e,t=!1){e&&(this.#F=Object.assign({},e),this.#J=new ge(e.storage_server,e.channel_server,e.shard_server?e.shard_server:void 0),t&&(o=!0),t&&console.log("++++ Snackabra constructor ++++ setting DBG to TRUE ++++"))}connect(e,t,n){return o&&t&&console.log(t),o&&n&&console.log(n),new Promise(((o,s)=>{if(!this.#F)return Promise.any(r.map((r=>new de(r,e,t,n).ready)));o(new de(this.#F,e,t,n))}))}create(e,t,n){return new Promise((async(r,o)=>{try{const{channelData:s,exportable_privateKey:a}=await y(n);s.SERVER_SECRET=t;const c=(new TextEncoder).encode(JSON.stringify(s));let l=await i(e.channel_server+"/api/room/"+s.roomId+"/uploadRoom",{method:"POST",body:c});l=await l.json(),l.success?r({channelId:s.roomId,key:a}):o(JSON.stringify(l))}catch(e){o(e)}}))}get channel(){return this.#N}get storage(){return this.#J}get crypto(){return Y}sendFile(e){this.storage.saveFile(this.#N,e)}}var fe={Snackabra:pe,SBMessage:ae,Channel:ce,SBCrypto:Z,SB384:te,arrayBufferToBase64:I};return t})()));