!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.SB=t():e.SB=t()}(self,(()=>(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{Channel:()=>ee,ChannelSocket:()=>ne,MessageBus:()=>s,SB:()=>ie,SB384:()=>q,SBCrypto:()=>J,SBFile:()=>Q,SBMessage:()=>Y,Snackabra:()=>ae,_appendBuffer:()=>E,_assertBase64:()=>u,_sb_assert:()=>h,_sb_exception:()=>c,_sb_resolve:()=>l,arrayBufferToBase64:()=>P,assemblePayload:()=>T,base64ToArrayBuffer:()=>O,cleanBase32mi:()=>x,compareBuffers:()=>j,decodeB64Url:()=>L,encodeB64Url:()=>U,encryptedContentsMakeBinary:()=>r,extractPayload:()=>$,extractPayloadV1:()=>M,getRandomValues:()=>d,jsonParseWrapper:()=>B,partition:()=>D,simpleRand256:()=>R,simpleRandomString:()=>N});var n=function(e,t,n,o){var r,s=arguments.length,a=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var i=e.length-1;i>=0;i--)(r=e[i])&&(a=(s<3?r(a):s>3?r(t,n,a):r(t,n))||a);return s>3&&a&&Object.defineProperty(t,n,a),a};const o=[{channel_server:"https://channel.384co.workers.dev",channel_ws:"wss://channel.384co.workers.dev",storage_server:"https://storage.384co.workers.dev"},{channel_server:"https://r.384co.workers.dev",channel_ws:"wss://r.384co.workers.dev",storage_server:"https://s.384co.workers.dev"}];function r(e){try{let t,n;if(se&&(console.log("=+=+=+=+ processing content"),console.log(e.content.constructor.name)),"string"==typeof e.content)try{t=O(decodeURIComponent(e.content))}catch(e){throw new Error("EncryptedContents is string format but not base64 (?)")}else{const n=e.content.constructor.name;h("ArrayBuffer"===n||"Uint8Array"===n,"undetermined content type in EncryptedContents object"),t=e.content}if(se&&console.log("=+=+=+=+ processing nonce"),"string"==typeof e.iv)se&&(console.log("got iv as string:"),console.log(structuredClone(e.iv))),n=O(decodeURIComponent(e.iv)),se&&(console.log("this was turned into array:"),console.log(structuredClone(n)));else if("Uint8Array"===e.iv.constructor.name||"ArrayBuffer"===e.iv.constructor.name)se&&console.log("it's an array already"),n=new Uint8Array(e.iv);else{se&&console.log("probably a dictionary");try{n=new Uint8Array(Object.values(e.iv))}catch(t){se&&(console.error("ERROR: cannot figure out format of iv (nonce), here's the input object:"),console.error(e.iv)),h(!1,"undetermined iv (nonce) type, see console")}}return se&&(console.log("decided on nonce as:"),console.log(n)),h(12==n.length,`unwrap(): nonce should be 12 bytes but is not (${n.length})`),{content:t,iv:n}}catch(e){throw console.error("encryptedContentsMakeBinary() failed:"),console.error(e),console.trace(),console.log(e.stack),e}}class s{bus={};#e(e){return this.bus[e]||(this.bus[e]=[])}subscribe(e,t){this.#e(e).push(t)}unsubscribe(e,t){let n=-1;this.bus[e]?-1!=(n=this.bus[e].findLastIndex((e=>e==t)))?this.bus[e].splice(n,1):console.info("fyi: asked to remove a handler but it's not there"):console.info("fyi: asked to remove a handler but the event is not there")}publish(e,...t){for(const n of this.#e("*"))n(e,...t);for(const n of this.#e(e))n(...t)}}function a(e,t){return!1===navigator.onLine&&console.info("Note: you are offline, according to the browser"),t?fetch(e,t):fetch(e,{method:"GET"})}function i(e){return e instanceof Error?e:new Error(String(e))}function c(e,t){throw new Error("<< SB lib error ("+e+": "+t+") >>")}function l(e){return e.then?e:new Promise((t=>t(e)))}function h(e,t){if(!e)throw new Error(`<< SB assertion error: ${t} >>`)}function d(e){if(e.byteLength<4096)return crypto.getRandomValues(e);{h(!(e.byteLength%1024),"getRandomValues(): large requested blocks must be multiple of 1024 in size");let t=0;try{for(t=0;t<e.byteLength;t+=1024){let n=new Uint8Array(1024);crypto.getRandomValues(n),e.set(n,t)}}catch(e){console.log(`got an error on index i=${t}`),console.log(e),console.trace()}return e}}const y=/([A-Za-z0-9+/_\-=]{64})([01]{42})/,g=/^([A-Za-z0-9+/_\-=]*)$/;function u(e){const t=g.exec(e);return!!t&&t[0]===e}function p(e){const t=g.exec(e);return h(t&&t[0]===e,"ensureSafe() tripped: something is not URI safe"),e}const f=[],w=[],m=[],b="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",v=b+"+/",k=b+"-_",S="=",K=16383;for(let e=0,t=v.length;e<t;++e)f[e]=v[e],w[e]=k[e],m[v.charCodeAt(e)]=e;function O(e){if(!u(e))throw new Error(`invalid character in string '${e}'`);let t;switch(e.length%4){case 2:e+="==";break;case 3:e+="="}const[n,o]=function(e){const t=e.length;let n=e.indexOf(S);return-1===n&&(n=t),[n,n===t?0:4-n%4]}(e),r=new Uint8Array(function(e,t){return 3*(e+t)/4-t}(n,o));let s=0;const a=o>0?n-4:n;let i;for(i=0;i<a;i+=4)t=m[e.charCodeAt(i)]<<18|m[e.charCodeAt(i+1)]<<12|m[e.charCodeAt(i+2)]<<6|m[e.charCodeAt(i+3)],r[s++]=t>>16&255,r[s++]=t>>8&255,r[s++]=255&t;return 2===o&&(t=m[e.charCodeAt(i)]<<2|m[e.charCodeAt(i+1)]>>4,r[s++]=255&t),1===o&&(t=m[e.charCodeAt(i)]<<10|m[e.charCodeAt(i+1)]<<4|m[e.charCodeAt(i+2)]>>2,r[s++]=t>>8&255,r[s++]=255&t),r}function C(e,t){return e[t>>18&63]+e[t>>12&63]+e[t>>6&63]+e[63&t]}function _(e,t,n,o){let r;const s=new Array((o-n)/3);for(let a=n,i=0;a<o;a+=3,i++)r=(t.getUint8(a)<<16&16711680)+(t.getUint8(a+1)<<8&65280)+(255&t.getUint8(a+2)),s[i]=C(e,r);return s.join("")}m["-".charCodeAt(0)]=62,m["_".charCodeAt(0)]=63;const A=e=>e instanceof ArrayBuffer?new DataView(e):new DataView(e.buffer,e.byteOffset,e.byteLength);function j(e,t){if(typeof e!=typeof t)return!1;if(null==e||null==t)return!1;const n=A(e),o=A(t);if(n.byteLength!==o.byteLength)return!1;for(let e=0;e<n.byteLength;e++)if(n.getUint8(e)!==o.getUint8(e))return!1;return!0}function P(e,t="url"){if(null==e)return c("L509","arrayBufferToBase64() -> null paramater"),"";{const n=A(e),o=n.byteLength,r=o%3,s=o-r,a=new Array(Math.floor(s/K)+Math.sign(r)),i="url"==t?w:f,c="";let l=0;for(let e=0;e<s;e+=K)a[l++]=_(i,n,e,e+K>s?s:e+K);if(1===r){const e=n.getUint8(o-1);a[l]=i[e>>2]+i[e<<4&63]+c+c}else if(2===r){const e=(n.getUint8(o-2)<<8)+n.getUint8(o-1);a[l]=i[e>>10]+i[e>>4&63]+i[e<<2&63]+c}return a.join("")}}function E(e,t){const n=new Uint8Array(e.byteLength+t.byteLength);return n.set(new Uint8Array(e),0),n.set(new Uint8Array(t),e.byteLength),n.buffer}function R(){return crypto.getRandomValues(new Uint8Array(1))[0]}const I="0123456789abcdefyhEjkLmNHpFrRTUW";function N(e,t){if("base32mi"==t){const t=crypto.getRandomValues(new Uint8Array(e));let n="";for(let o=0;o<e;o++)n+=I[31&t[o]];return n}return c("simpleRandomString","code "+t+" not supported"),""}function x(e){return e.replace(/[OoQD]/g,"0").replace(/[lIiJ]/g,"1").replace(/[Zz]/g,"2").replace(/[A]/g,"4").replace(/[Ss]/g,"5").replace(/[G]/g,"6").replace(/[t]/g,"7").replace(/[B]/g,"8").replace(/[gq]/g,"9").replace(/[C]/g,"c").replace(/[Y]/g,"y").replace(/[KxX]/g,"k").replace(/[M]/g,"m").replace(/[n]/g,"N").replace(/[P]/g,"p").replace(/[uvV]/g,"U").replace(/[w]/g,"w")}function D(e,t){throw`partition() not tested on TS yet - (${e}, ${t})`}function B(e,t){try{return JSON.parse(e)}catch(n){try{let t="",n="",o=e;for(;o!=(n=t,t=o,o=o?.match(/^(['"])(.*)\1$/m)?.[2]);)return JSON.parse(`'${n}'`)}catch{try{return JSON.parse(e.slice(1,-1))}catch{throw new Error(`JSON.parse() error at ${t} (tried eval and slice)\nString was: ${e}`)}}}}function M(e){try{const t=new Uint32Array(e.slice(0,4))[0],n=B((new TextDecoder).decode(e.slice(4,4+t)),"L476");let o=4+t;const r={};for(const t in n)r.key&&(r[t]=e.slice(o,o+n[t]),o+=n[t]);return r}catch(e){return console.error(e),{}}}function T(e){try{const t={version:"002"};let n=0,o=0;for(const r in e)n++,t[n.toString()]={name:r,start:o,size:e[r].byteLength},o+=e[r].byteLength;const r=(new TextEncoder).encode(JSON.stringify(t)),s=new Uint32Array([r.byteLength]);let a=E(new Uint8Array(s.buffer),new Uint8Array(r));for(const t in e)a=E(new Uint8Array(a),e[t]);return a}catch(e){return console.error(e),null}}function $(e){try{const t=new Uint32Array(e.slice(0,4))[0],n=B((new TextDecoder).decode(e.slice(4,4+t)),"L533"),o=4+t;switch(n.version||(n.version="001"),n.version){case"001":return M(e);case"002":{const t=[];for(let r=1;r<Object.keys(n).length;r++){const s=r.toString();if(n[s]){const r=n[s].start,a=n[s].size;t[n[s].name]=e.slice(o+r,o+r+a)}else console.log(`found nothing for index ${r}`)}return t}default:throw new Error("Unsupported payload version ("+n.version+") - fatal")}}catch(e){throw new Error("extractPayload() exception ("+e+")")}}function U(e){return e.replaceAll("+","-").replaceAll("/","_")}function L(e){const t=(e=e.replaceAll("-","+").replaceAll("_","/")).length%4;if(t){if(1===t)throw new Error("InvalidLengthError: Input base64url string is the wrong length to determine padding");e+=new Array(5-t).join("=")}return e}class J{extractPubKey(e){try{const t={...e};return delete t.d,delete t.dp,delete t.dq,delete t.q,delete t.qi,t.key_ops=[],t}catch(e){return console.error(e),null}}generateKeys(){return new Promise((async(e,t)=>{try{e(await crypto.subtle.generateKey({name:"ECDH",namedCurve:"P-384"},!0,["deriveKey"]))}catch(e){t(e)}}))}importKey(e,t,n,o,r){const s={ECDH:{name:"ECDH",namedCurve:"P-384"},AES:{name:"AES-GCM"},PBKDF2:"PBKDF2"};return"jwk"===e?window.crypto.subtle.importKey("jwk",t,s[n],o,r):window.crypto.subtle.importKey(e,t,s[n],o,r)}deriveKey(e,t,n,o,r){return new Promise((async(s,a)=>{const i={AES:{name:"AES-GCM",length:256},HMAC:{name:"HMAC",hash:"SHA-256",length:256}};try{s(await crypto.subtle.deriveKey({name:"ECDH",public:t},e,i[n],o,r))}catch(s){console.error(s,e,t,n,o,r),a(s)}}))}encrypt(e,t,n,o="encryptedContents"){return new Promise((async(r,s)=>{try{null===e&&s(new Error("no contents"));const a=n&&null!==n?n:crypto.getRandomValues(new Uint8Array(12));"string"==typeof e&&(e=(new TextEncoder).encode(e)),crypto.subtle.encrypt({name:"AES-GCM",iv:a},t,e).then((e=>{r("encryptedContents"===o?{content:p(P(e)),iv:p(P(a))}:e)}))}catch(e){s(e)}}))}wrap(e,t,n){return new Promise((o=>{let r;r="string"===n?H.str2ab(t):t,H.encrypt(r,e).then((e=>{o(e)}))}))}unwrap(e,t,n){return se&&(console.log("SBCrypto.unwrap(), got k/o:"),console.log(e),console.log(t)),new Promise((async(o,s)=>{try{const{content:a,iv:i}=r(t);se&&(console.log("======== calling subtle.decrypt with iv, k, t (AES-GCM):"),console.log(i),console.log(e),console.log(a),console.log("======== (end of subtle.decrypt parameters)")),crypto.subtle.decrypt({name:"AES-GCM",iv:i},e,a).then((e=>{"string"===n?o((new TextDecoder).decode(e)):"arrayBuffer"===n&&o(e)})).catch((e=>{console.error(`unwrap(): failed to decrypt - rejecting: ${e}`),console.trace(),s(e)}))}catch(e){console.error(`unwrap(): unknown issue - rejecting: ${e}`),console.trace(),s(e)}}))}sign(e,t){return new Promise((async(n,o)=>{try{const r=(new TextEncoder).encode(t);let s;try{s=await crypto.subtle.sign("HMAC",e,r),n(p(P(s)))}catch(e){o(e)}}catch(e){o(e)}}))}verify(e,t,n){return new Promise(((o,r)=>{try{crypto.subtle.verify("HMAC",e,O(t),H.str2ab(n)).then((e=>{o(e)}))}catch(e){r(i(e))}}))}str2ab(e){return(new TextEncoder).encode(e)}ab2str(e){return new TextDecoder("utf-8").decode(e)}compareKeys(e,t){return null!=e&&null!=t&&"object"==typeof e&&"object"==typeof t&&e.x===t.x&&e.y===t.y}}const H=new J;function G(e,t,n){if(n.get){let o=n.get;n.get=function(){const n=`__${e.constructor.name}__${t}__`;if(this.hasOwnProperty(n))return this[n];{const e=o.call(this);return Object.defineProperty(this,n,{configurable:!1,enumerable:!1,writable:!1,value:e}),e}}}}function F(e,t,n){if(n.get){let o=n.get;n.get=function(){const n=e.constructor.name;`${n}ReadyFlag`in this&&h(this.readyFlag,`${t} getter accessed but object ${n} not ready (fatal)`);const r=o.call(this);return h(null!=r,`${t} getter accessed in object type ${n} but returns NULL (fatal)`),r}}}function V(e,t,n){const o=n.value;n.value=function(...e){for(let n of e){const e=n.constructor.name;"string"==typeof(t=e)&&z.includes(t)&&h(Z(n,e),`invalid parameter: ${n} (expecting ${e})`)}var t;return o.call(this,...e)}}class q{ready;sb384Ready;#t=!1;#n=null;#o=null;#r=null;#s=null;#a=null;constructor(e){this.ready=new Promise(((t,n)=>{try{if(e){this.#o=e;const n=H.extractPubKey(e);h(n,"unable to extract public key"),this.#n=n,H.importKey("jwk",e,"ECDH",!0,["deriveKey"]).then((e=>{this.#r=e,this.#i(this.#n.x,this.#n.y).then((e=>{this.#s=e,this.#t=!0,t(this)}))}))}else H.generateKeys().then((e=>{this.#r=e.privateKey,this.#a=e,Promise.all([crypto.subtle.exportKey("jwk",e.publicKey),crypto.subtle.exportKey("jwk",e.privateKey)]).then((e=>{this.#n=e[0],this.#o=e[1],this.#i(this.#n.x,this.#n.y).then((e=>{this.#s=e,this.#t=!0,t(this)}))}))}))}catch(e){n(`failed to create Identity(): ${e}`)}})),this.sb384Ready=this.ready}#c(e){return new Promise(((t,n)=>{crypto.subtle.digest("SHA-384",e).then((e=>{const n=U(P(e));n.includes("-")?t(this.#c(e)):t(n)}))}))}#i(e,t){return new Promise(((n,o)=>{const r=E(O(L(e)),O(L(t)));n(this.#c(r))}))}get readyFlag(){return this.#t}get exportable_pubKey(){return this.#n}get exportable_privateKey(){return this.#o}get privateKey(){return this.#r}get keyPair(){return this.#a}get _id(){return JSON.stringify(this.exportable_pubKey)}get ownerChannelId(){return this.#s}}n([G],q.prototype,"readyFlag",null),n([G,F],q.prototype,"exportable_pubKey",null),n([G,F],q.prototype,"exportable_privateKey",null),n([G,F],q.prototype,"privateKey",null),n([G,F],q.prototype,"keyPair",null),n([G,F],q.prototype,"_id",null),n([G,F],q.prototype,"ownerChannelId",null);const z=["SBMessage","SBObjectHandle"],W=Symbol.for("SBMessage"),X=Symbol.for("SBObjectHandle");function Z(e,t){switch(t){case"SBMessage":return W in e;case"SBObjectHandle":return X in e}}class Y{ready;channel;contents;[W]=!0;MAX_SB_BODY_SIZE=65536;constructor(e,t=""){h(t.length<this.MAX_SB_BODY_SIZE,"SBMessage(): body must be smaller than 64 KiB"),this.channel=e,this.contents={encrypted:!1,isVerfied:!1,contents:t,sign:"",image:"",imageMetaData:{}},this.ready=new Promise((n=>{e.ready.then((()=>{this.contents.sender_pubKey=this.channel.exportable_pubKey,e.userName&&(this.contents.sender_username=e.userName);const o=this.channel.keys.channelSignKey,r=H.sign(o,t),s=H.sign(o,this.contents.image),a=H.sign(o,JSON.stringify(this.contents.imageMetaData));Promise.all([r,s,a]).then((e=>{this.contents.sign=e[0],this.contents.image_sign=e[1],this.contents.imageMetadata_sign=e[2],n(this)}))}))}))}send(){return new Promise(((e,t)=>{this.ready.then((()=>{this.channel.send(this).then((n=>{"success"===n?e(n):t(n)}))}))}))}}class Q extends Y{data={previewImage:"",fullImage:""};image="";image_sign="";imageMetaData={};constructor(e,t){throw new Error("working on SBFile()!")}async#l(e,t){throw new Error(`#asImage() needs carryover from SBImage etc (${e}, ${t})`)}}class ee extends q{ready;channelReady;#h=!1;#d;motd="";locked=!1;owner=!1;admin=!1;verifiedGuest=!1;userName="";#y;#g;constructor(e,t,n){super(t),this.#d=e,this.#g=new re(this),this.ready=new Promise((e=>{n?(this.#y=n,this.#h=!0,e(this)):this.sb384Ready.then((t=>{this.#y=this.ownerChannelId,this.#h=!0,e(this)}))})),this.channelReady=this.ready}get api(){return this.#g}get sbServer(){return this.#d}get channelId(){return this.#y}get readyFlag(){return this.#h}}function te(e,t,n){return new Promise(((o,s)=>{const a=y.exec(e),i=n.encryptionKey;if(a){let e={type:"encrypted",channelID:a[1],timestampPrefix:a[2],_id:a[1]+a[2],encrypted_contents:r(t)};H.unwrap(i,e.encrypted_contents,"string").then((t=>{let r={...e,...JSON.parse(t)};r.contents&&(r.text=r.contents),r.user={name:r.sender_username?r.sender_username:"Unknown",_id:r.sender_pubKey},r.verificationToken&&!r.sender_pubKey?console.info("WARNING: message with verification token is lacking sender identity.\n         This may not be allowed in the future."):H.importKey("jwk",r.sender_pubKey,"ECDH",!0,[]).then((e=>{H.deriveKey(n.signKey,e,"HMAC",!1,["sign","verify"]).then((e=>{H.verify(e,r.sign,r.contents).then((t=>{t||(console.log("***** signature is NOT correct message (rejecting)"),console.log("verifyKey:"),console.log(Object.assign({},e)),console.log("m2.sign"),console.log(Object.assign({},r.sign)),console.log("m2.contents"),console.log(structuredClone(r.contents)),console.log("Message:"),console.log(Object.assign({},r)),console.trace(),s(null)),o(r)}))}))}))}))}else console.log("++++++++ #processMessage: ERROR - cannot parse channel ID / timestamp, invalid message"),console.log(Object.assign({},e)),console.log(Object.assign({},t)),s(null)}))}n([G,F],ee.prototype,"channelId",null);class ne extends ee{ready;#u=!1;#p;#f;#w=null;#d;adminData;#m;#b=[];#v=!1;constructor(e,t,n,o){super(e,n,o),h(e.channel_ws,"ChannelSocket(): no websocket server name provided");const r=e.channel_ws+"/api/room/"+o+"/websocket";this.#m=t,this.#d=e,this.#p={url:r,ready:!1,closed:!1,timeout:2e3},this.ready=this.#k()}close=()=>{if(this.#p.websocket)return this.#p.websocket.close()};#S(e){this.#v&&(console.log("got raw message (string):"),console.log(structuredClone(e)));const t=B(e,"L1489");if(this.#v&&(console.log("... json unwrapped version of raw message:"),console.log(Object.assign({},t))),t.ack){const e=this.#b[t._id];e&&(console.log(`++++++++ found matching ack for id ${t._id} (on first check?)`),delete this.#b[t._id],e("success"))}else if(t.nack)console.error("Nack received"),this.#p.closed=!0;else if("function"==typeof this.#m){const e=t;try{let n=Object.entries(e)[0][1];if("encrypted_contents"===Object.keys(n)[0]){const e=Object.entries(t)[0][0],o=n.encrypted_contents.iv;o&&u(o)&&16==o.length?n.encrypted_contents.iv=O(o):console.error("processMessage() - iv is malformed, should be 16-char b64 string (ignoring)"),this.#v&&(console.log("vvvvvv - calling deCryptChannelMessage() with arg1, arg2, arg3:"),console.log(structuredClone(e)),console.log(structuredClone(n.encrypted_contents)),console.log(structuredClone(this.keys)),console.log("^^^^^^ - (end parameter list)")),te(e,n.encrypted_contents,this.keys).then((e=>{this.#v&&console.log(Object.assign({},e)),this.#m(e)})).catch((()=>{console.log("Error processing message, dropping it")}))}else if("ack"===n.type){this.#v&&console.log("++++++++ Received 'ack'");const e=n._id,t=this.#b[e];t?(this.#v&&console.log(`++++++++ found matching ack for id ${e}`),delete this.#b[e],t("success")):console.info(`WARNING: did not find matching ack for id ${e}`)}else console.log("++++++++ #processMessage: can't decipher message, passing along unchanged:"),console.log(Object.assign({},e)),this.#m(e)}catch(t){console.log(`++++++++ #processMessage: caught exception while decyphering (${t}), passing it along unchanged`),this.#m(e)}}else c("ChannelSocket","received message but there is no handler")}checkServerStatus(e,t,n){const o=new XMLHttpRequest;o.onreadystatechange=()=>{o.readyState===XMLHttpRequest.DONE&&(200===o.status?n(!0):n(!1))},o.open("HEAD",e),o.timeout=t,o.send()}#k(){const e=this.#p.url;let t=[],n=!1;return new Promise(((o,r)=>{try{console.log("++++++++ readyPromise() has url:"),console.log(e),this.#p.websocket||(this.#p.websocket=new WebSocket(this.#p.url)),3===this.#p.websocket.readyState?this.#p.websocket=new WebSocket(e):2===this.#p.websocket.readyState&&(console.log("STRANGE - trying to use a ChannelSocket that is in the process of closing ..."),this.#p.websocket=new WebSocket(e)),this.#p.websocket.addEventListener("open",(()=>{this.#p.closed=!1,this.channelReady.then((()=>{this.#p.init={name:JSON.stringify(this.exportable_pubKey)},this.#p.websocket.send(JSON.stringify(this.#p.init))}))})),this.#p.websocket.addEventListener("message",(e=>{if(n)return void t.push(e.data);n=!0;const r=JSON.parse(e.data);h(r.ready,"got roomKeys but channel reports it is not ready (?)"),this.motd=r.motd,this.locked=r.roomLocked;const s=JSON.parse(r.keys.ownerKey);this.#w=s,Promise.all([H.importKey("jwk",JSON.parse(r.keys.ownerKey),"ECDH",!1,[]),H.importKey("jwk",JSON.parse(r.keys.encryptionKey),"AES",!1,["encrypt","decrypt"]),H.importKey("jwk",JSON.parse(r.keys.signKey),"ECDH",!0,["deriveKey"]),H.importKey("jwk",H.extractPubKey(JSON.parse(r.keys.signKey)),"ECDH",!0,[])]).then((e=>{const n=e[0],r=e[1],a=e[2],i=e[3],c=this.privateKey;Promise.all([H.deriveKey(c,i,"HMAC",!1,["sign","verify"])]).then((e=>{const i=e[0];this.#f={ownerKey:n,encryptionKey:r,signKey:a,channelSignKey:i,privateKey:this.privateKey};const c=this.api.getAdminData();this.owner=H.compareKeys(s,this.exportable_pubKey),Promise.all([c]).then((e=>{this.adminData=e[0],this.admin=this.owner,t.length>0&&queueMicrotask((()=>{console.log("++++++++ readyPromise() inside micro task");for(let e in t)this.#S(e)})),this.#p.websocket.addEventListener("message",(e=>{this.#S(e.data)})),this.#u=!0,o(this)}))}))}))})),this.#p.websocket.addEventListener("close",(e=>{this.#p.closed=!0,e.wasClean?e.reason.includes("does not have an owner")?r(`No such channel on this server (${this.#d.channel_server})`):console.log("ChannelSocket() was closed (cleanly): ",e.reason):console.log(`ChannelSocket() was closed (and NOT cleanly: ${e.reason} from ${this.#d.channel_server}`),r("wbSocket() closed before it was opened (?)")})),this.#p.websocket.addEventListener("error",(e=>{this.#p.closed=!0,console.log("ChannelSocket() error: ",e),r("ChannelSocket creation error (see log)")}))}catch(e){this.#p.closed=!0,r(`failed to create ChannelSocket, see log ${i(e)}`)}}))}get status(){if(!this.#p.websocket)return"CLOSED";switch(this.#p.websocket.readyState){case 0:return"CONNECTING";case 1:return"OPEN";case 2:return"CLOSING";default:return"CLOSED"}}set onMessage(e){this.#m=e}get onMessage(){return this.#m}set enableTrace(e){this.#v=e,console.log(`Tracing ${e?"en":"dis"}abled`)}get keys(){return this.#f||h(!1,"ChannelSocket.keys: not initialized (?)"),this.#f}async sendSbObject(e){return this.send(e)}send(e){let t="string"==typeof e?new Y(this,e):e;return h(this.#p.websocket,"ChannelSocket.send() called before ready"),this.#p.closed&&(this.#v&&console.info("send() triggered reset of #readyPromise() (normal)"),this.ready=this.#k()),new Promise(((e,n)=>{t.ready.then((t=>{this.ready.then((()=>{switch(this.#v&&(console.log("++++++++ ChannelSocket.send() this message (cloned): "),console.log(Object.assign({},t))),this.#u||n("ChannelSocket.send() is confused - ready or not?"),this.#p.websocket.readyState){case 1:this.#v&&(console.log("Wrapping message contents:"),console.log(Object.assign({},t.contents))),H.wrap(this.keys.encryptionKey,JSON.stringify(t.contents),"string").then((t=>{this.#v&&(console.log("ChannelSocket.send():"),console.log(Object.assign({},t)));const o=JSON.stringify({encrypted_contents:t});this.#v&&(console.log("++++++++ ChannelSocket.send() got this from wrap:"),console.log(structuredClone(o)),console.log("++++++++ ChannelSocket.send() then got this from JSON.stringify:"),console.log(Object.assign({},t))),crypto.subtle.digest("SHA-256",(new TextEncoder).encode(o)).then((t=>{const r=P(t),s={timestamp:Date.now(),type:"ack",_id:r};this.#b[r]=e,this.#v&&(console.log("++++++++ ChannelSocket.send() this message:"),console.log(structuredClone(o))),this.#p.websocket.send(o),this.#p.websocket.send(JSON.stringify(s)),setTimeout((()=>{if(this.#b[r]){delete this.#b[r];const e=`Websocket request timed out (no ack) after ${this.#p.timeout}ms (${r})`;console.error(e),n(e)}else this.#v&&console.log("++++++++ ChannelSocket.send() completed sending"),e("success")}),this.#p.timeout)}))}));break;case 3:case 0:case 2:const o="socket not OPEN - either CLOSED or in the state of CONNECTING/CLOSING";c("ChannelSocket",o),n(o)}}))}))}))}get exportable_owner_pubKey(){return this.#w}}n([V],ne.prototype,"send",null),n([G,F],ne.prototype,"exportable_owner_pubKey",null);class oe{server;channelServer;constructor(e,t){this.server=e+"/api/v1",this.channelServer=t+"/api/room/"}#K(e){return new Promise(((t,n)=>{try{crypto.subtle.digest("SHA-512",e).then((e=>{const n=e.slice(0,32),o=e.slice(32);t({id:p(P(n)),key:p(P(o))})}))}catch(e){n(e)}}))}#O(e){const t=e.byteLength;let n;n=t+4<4096?4096:t+4<1048576?2**Math.ceil(Math.log2(t+4)):1048576*Math.ceil((t+4)/1048576);let o=E(e,new Uint8Array(n-t).buffer);return new DataView(o).setUint32(n-4,t),se&&(console.log("#padBuf bytes:"),console.log(o.slice(-4))),o}#C(e){const t=e.slice(-4);var n=new DataView(t).getUint32(0);const o=new DataView(t).getUint32(0,!0);return o<n&&(se&&console.warn("#unpadData - size of shard encoded as little endian (fixed upon read)"),n=o),se&&console.log(`#unpadData - size of object is ${n}`),e.slice(0,n)}#_(e,t){return new Promise(((n,o)=>{try{H.importKey("raw",O(decodeURIComponent(e)),"PBKDF2",!1,["deriveBits","deriveKey"]).then((e=>{crypto.subtle.deriveKey({name:"PBKDF2",salt:t,iterations:1e5,hash:"SHA-256"},e,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]).then((e=>{n(e)}))}))}catch(e){o(e)}}))}#A(e,t){return new Promise(((n,o)=>{a(this.server+"/storeRequest?name="+e+"&type="+t).then((e=>e.arrayBuffer())).then((e=>{const t=$(e);n({salt:new Uint8Array(t.salt),iv:new Uint8Array(t.iv)})})).catch((e=>{console.log(`ERROR: ${e}`),o(e)}))}))}#j(e,t,n,o,r,s,i){return new Promise(((c,l)=>{this.#_(n,i).then((n=>{H.encrypt(e,n,s,"arrayBuffer").then((e=>{a(this.channelServer+r+"/storageRequest?size="+e.byteLength).then((e=>e.json())).then((n=>{n.hasOwnProperty("error")&&l("storage token request error");let r=JSON.stringify(n);this.storeData(o,t,s,i,r,e).then((e=>{e.error&&l(`storeObject() failed: ${e.error}`),e.image_id!=t&&l(`received imageId ${e.image_id} but expected ${t}`),c(e.verification_token)})).catch((e=>{console.log("ERROR in _storeObject(): ${e}"),l(e)}))}))}))}))}))}getObjectMetadata(e,t){return new Promise(((n,o)=>{const r=this.#O(e);this.#K(r).then((e=>{this.#A(e.id,t).then((o=>{const s={[X]:!0,version:"1",type:t,id:e.id,key:e.key,iv:o.iv,salt:o.salt,paddedBuffer:r};n(s)})).catch((e=>o(e)))}))}))}storeObject(e,t,n,o){return new Promise(((r,s)=>{e instanceof Uint8Array&&(se&&console.log("converting Uint8Array to ArrayBuffer"),e=new Uint8Array(e).buffer),e instanceof ArrayBuffer||(se&&console.log("buf must be an ArrayBuffer:"),console.log(e),s("buf must be an ArrayBuffer"));const a=e.byteLength;if(o){const e={[X]:!0,version:"1",type:t,id:o.id,key:o.key,iv:o.iv,salt:o.salt,actualSize:a,verification:this.#j(o.paddedBuffer,o.id,o.key,t,n,o.iv,o.salt)};r(e)}else{const o=this.#O(e);this.#K(o).then((e=>{this.#A(e.id,t).then((s=>{const i={[X]:!0,version:"1",type:t,id:e.id,key:e.key,iv:s.iv,salt:s.salt,actualSize:a,verification:this.#j(o,e.id,e.key,t,n,s.iv,s.salt)};r(i)})).catch((e=>s(e)))}))}}))}saveFile(e,t){console.log("saveFile()");const n=t.imageMetaData,o=this.storeImage(t.data.fullImage,n.imageId,n.imageKey,"f"),r=this.storeImage(t.data.previewImage,n.previewId,n.previewKey,"p");Promise.all([o,r]).then((n=>{n.forEach((t=>{e.sendSbObject({...t,control:!0})})),e.send(t)}))}storeRequest(e){return new Promise(((t,n)=>{a(this.server+"/storeRequest?name="+e).then((e=>(e.ok||n(new Error("Network response was not OK")),e.arrayBuffer()))).then((e=>{t(e)})).catch((e=>{n(e)}))}))}storeData(e,t,n,o,r,s){return new Promise(((i,c)=>{a(this.server+"/storeData?type="+e+"&key="+p(t),{method:"POST",body:T({iv:n,salt:o,image:s,storageToken:(new TextEncoder).encode(r),vid:crypto.getRandomValues(new Uint8Array(48))})}).then((e=>(e.ok||c("response from storage server was not OK"),e.json()))).then((e=>{i(e)})).catch((e=>{c(e)}))}))}storeImage(e,t,n,o){throw new Error("StorageApi.storeImate() needs TS version")}#P(e,t){return new Promise(((n,o)=>{try{let t=JSON.parse(H.ab2str(new Uint8Array(e)));t.error&&o(`#processData() error: ${t.error}`),se&&(console.log("#processData() JSON.parse() returned:"),console.log(t),console.warn("should this happen?"))}catch(e){}finally{const o=$(e);se&&(console.log("Payload is:"),console.log(o));const r=new Uint8Array(o.iv),s=new Uint8Array(o.salt),a=t.iv?"string"==typeof t.iv?O(t.iv):t.iv:void 0,i=t.salt?"string"==typeof t.salt?O(t.salt):t.salt:void 0;a&&!j(r,a)&&(console.error("WARNING: nonce from server differs from local copy"),console.log(`object ID: ${t.id}`),console.log(` local iv: ${P(a)}`),console.log(`server iv: ${P(o.iv)}`)),i&&!j(s,i)&&(console.error("WARNING: salt from server differs from local copy (will use server)"),console.log(` object ID: ${t.id}`),console.log("server salt:"),console.log("data.salt as b64:"),console.log(P(o.salt)),console.log("data.salt unprocessed:"),console.log(o.salt),console.log("'salt' as b64:"),console.log(P(s)),console.log("salt unprocessed:"),console.log(s),console.log("local salt:"),t.salt?"string"==typeof t.salt?(console.log("h.salt is in string form (unprocessed):"),console.log(t.salt)):(console.log("h.salt is in arrayBuffer or Uint8Array"),console.log("h.salt as b64:"),console.log(P(t.salt)),console.log("h.salt unprocessed:"),console.log(t.salt)):console.log("h.salt is undefined"),console.log("handleSalt as b64:"),console.log(P(i)),console.log("handleSalt unprocessed:"),console.log(i)),se&&(console.log("will use nonce and salt of:"),console.log(`iv: ${P(r)}`),console.log(`salt : ${P(s)}`)),this.#_(t.key,s).then((e=>{const t=o.image;se&&(console.log("data.image:      "),console.log(o.image),console.log("encrypted_image: "),console.log(t)),H.unwrap(e,{content:t,iv:r},"arrayBuffer").then((e=>{const t=this.#C(e);se&&(console.log(" unwrapped img: "),console.log(t)),n(t)}))}))}}))}fetchData(e,t="arrayBuffer"){return new Promise(((n,o)=>{try{se&&(console.log("Calling fetchData():"),console.log(e),console.log(t)),e||o("invalid"),"string"==typeof e.verification&&(e.verification=new Promise((t=>{t(e.verification)}))),e.verification.then((r=>{h(r,"fetchData(): missing verification token (?)"),a(this.server+"/fetchData?id="+p(e.id)+"&type="+e.type+"&verification_token="+r,{method:"GET"}).then((e=>(e.ok||o(new Error("Network response was not OK")),e.arrayBuffer()))).then((t=>this.#P(t,e))).then((e=>{n("string"===t?H.ab2str(new Uint8Array(e)):e)}))}))}catch(e){o(e)}}))}async retrieveImage(e,t,n,o,r){console.trace("retrieveImage()"),console.log(e);const s=n||e.previewId,a=o||e.previewKey,i=r||"p",c=t.find((e=>e.id&&e.id==s));if(console.log(c),c){h(c.verificationToken,"retrieveImage(): verificationToken missing (?)"),h(c.id,"retrieveImage(): id missing (?)");const e={[X]:!0,version:"1",type:i,id:c.id,key:a,verification:new Promise(((e,t)=>{c.verificationToken?e(c.verificationToken):t("retrieveImage(): verificationToken missing (?)")}))},t=await this.fetchData(e);return console.log(t),{url:"data:image/jpeg;base64,"+P(t,"b64")}}return{error:"Failed to fetch data - missing control message for that image"}}}n([V],oe.prototype,"fetchData",null);class re{#d;#E;#R;#I;#N;constructor(e){this.#R=e,this.#d=this.#R.sbServer,this.#E=this.#d.channel_server,this.#I=this.#E+"/api/",this.#N=this.#E+"/api/room/"}getLastMessageTimes(){return new Promise(((e,t)=>{a(this.#I+"/getLastMessageTimes",{method:"POST",body:JSON.stringify([this.#R.channelId])}).then((e=>(e.ok||t(new Error("Network response was not OK")),e.json()))).then((t=>{e(t[this.#R.channelId])})).catch((e=>{t(e)}))}))}getOldMessages(e){return new Promise(((t,n)=>{a(this.#N+this.#R.channelId+"/oldMessages?currentMessagesLength="+e,{method:"GET"}).then((e=>(e.ok||n(new Error("Network response was not OK")),e.json()))).then((e=>{Promise.all(Object.keys(e).filter((t=>e[t].hasOwnProperty("encrypted_contents"))).map((t=>te(t,e[t].encrypted_contents,this.#R.keys)))).then((e=>{t(e)}))})).catch((e=>{n(e)}))}))}#x(e,t){return console.log(e),t&&console.log(t),new Promise(((n,o)=>{try{a(this.#N+this.#R.channelId+e,t).then((e=>(e.ok||o(new Error("Network response was not OK")),e.json()))).then((e=>{e.error&&o(new Error(e.error)),n(e)})).catch((e=>{o("ChannelApi Error [1]: "+i(e))}))}catch(e){o("ChannelApi Error [2]: "+i(e))}}))}updateCapacity(e){return this.#x("/updateRoomCapacity?capacity="+e)}getCapacity(){return this.#x("/getRoomCapacity")}getJoinRequests(){return this.#x("/getJoinRequests")}isLocked(){return new Promise((e=>this.#x("/roomLocked").then((t=>{console.log(t),e(!0===t.locked)}))))}setMOTD(e){return this.#x("/motd",{method:"POST",body:JSON.stringify({motd:e}),headers:{"Content-Type":"application/json"}})}getAdminData(){return new Promise((async(e,t)=>{const n=(new Date).getTime().toString();H.sign(this.#R.keys.channelSignKey,n).then((e=>this.#x("/getAdminData",{method:"GET",credentials:"include",headers:{authorization:n+"."+e,"Content-Type":"application/json"}})))}))}downloadData(){return new Promise(((e,t)=>{a(this.#N+this.#R.channelId+"/downloadData",{method:"GET",headers:{"Content-Type":"application/json"}}).then((e=>(e.ok||t(new Error("Network response was not OK")),e.json()))).then((t=>{Promise.all(Object.keys(t).filter((e=>{const n=new RegExp(this.#R.channelId);if(e.match(n)){const n=B(t[e],"L3318");if(n.hasOwnProperty("encrypted_contents"))return console.log(n),n}})).map((e=>{const n=B(t[e],"L3327");return console.log(e,n.encrypted_contents,this.#R.keys),te(e,n.encrypted_contents,this.#R.keys)}))).then((n=>{let o={};n.forEach((e=>{if(!e.control&&e.imageMetaData.imageId){const t=n.find((t=>t.id&&t.id==e.imageMetaData.imageId)),r=n.find((t=>t.id&&t.id==e.imageMetaData.previewId));o[`${e.imageMetaData.imageId}.f`]=t?.verificationToken,o[`${e.imageMetaData.previewId}.p`]=r?.verificationToken}})),e({storage:o,channel:t})}))})).catch((e=>{t(e)}))}))}uploadChannel(e){return new Promise(((t,n)=>{a(this.#N+this.#R.channelId+"/uploadRoom",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}}).then((e=>(e.ok||n(new Error("Network response was not OK")),e.json()))).then((e=>{t(e)})).catch((e=>{n(e)}))}))}authorize(e,t){return this.#x("/authorizeRoom",{method:"POST",body:JSON.stringify({roomId:this.#R.channelId,SERVER_SECRET:t,ownerKey:e})})}postPubKey(e){return this.#x("/postPubKey?type=guestKey",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}})}storageRequest(e){return this.#x("/storageRequest?size="+e,{method:"GET",credentials:"include",headers:{"Content-Type":"application/json"}})}lock(){return console.trace("WARNING: lock() on channel api has not been tested/debugged fully .."),new Promise((async(e,t)=>{if(null==this.#R.keys.lockedKey&&this.#R.admin){const n=await crypto.subtle.generateKey({name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),o=await crypto.subtle.exportKey("jwk",n);this.#x("lockRoom").then((t=>{t.locked&&this.acceptVisitor(JSON.stringify(this.#R.exportable_pubKey)).then((()=>{e({locked:t.locked,lockedKey:o})}))})).catch((e=>{t(e)}))}else t(new Error("no lock key or not admin"))}))}acceptVisitor(e){return console.trace("WARNING: acceptVisitor() on channel api has not been tested/debugged fully .."),new Promise((async(t,n)=>{const o=await H.deriveKey(this.#R.keys.privateKey,await H.importKey("jwk",B(e,"L2276"),"ECDH",!1,[]),"AES",!1,["encrypt","decrypt"]),r=await H.encrypt(H.str2ab(JSON.stringify(this.#R.keys.lockedKey)),o);a(this.#N+this.#R.channelId+"/acceptVisitor",{method:"POST",body:JSON.stringify({pubKey:e,lockedKey:JSON.stringify(r)}),headers:{"Content-Type":"application/json"}}).then((e=>(e.ok||n(new Error("Network response was not OK")),e.json()))).then((e=>{t(e)})).catch((e=>{n(e)}))}))}ownerKeyRotation(){return console.trace("WARNING: ownerKeyRotation() on channel api has not been tested/debugged fully .."),new Promise(((e,t)=>{a(this.#N+this.#R.channelId+"/ownerKeyRotation",{method:"GET",credentials:"include",headers:{"Content-Type":"application/json"}}).then((e=>(e.ok||t(new Error("Network response was not OK")),e.json()))).then((t=>{e(t)})).catch((e=>{t(e)}))}))}}n([function(e,t,n){const o=n.value;n.value=function(...r){try{return o.call(this,...r)}catch(o){return console.log(`ExceptionReject: ${i(o)}`),console.log(e),console.log(t),console.log(n),new Promise(((e,t)=>t(`Reject: ${i(o)}`)))}}}],re.prototype,"isLocked",null);let se=!1;class ae{#D;#R;#B;constructor(e,t=!1){e&&(this.#B=Object.assign({},e),this.#D=new oe(e.storage_server,e.channel_server),t&&(se=!0))}connect(e,t,n){return t&&console.log(t),n&&console.log(n),new Promise(((r,s)=>{if(!this.#B)return Promise.any(o.map((o=>new ne(o,e,t,n).ready)));r(new ne(this.#B,e,t,n))}))}create(e,t,n){return new Promise((async(o,r)=>{try{const s=new q(n),i=await s.ready.then((e=>e.keyPair)),c=await crypto.subtle.exportKey("jwk",i.privateKey),l=await crypto.subtle.exportKey("jwk",i.publicKey),h=s.ownerChannelId,d=await crypto.subtle.generateKey({name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),y=await crypto.subtle.exportKey("jwk",d),g=await crypto.subtle.generateKey({name:"ECDH",namedCurve:"P-384"},!0,["deriveKey"]),u=await crypto.subtle.exportKey("jwk",g.privateKey),p={roomId:h,ownerKey:JSON.stringify(l),encryptionKey:JSON.stringify(y),signKey:JSON.stringify(u),SERVER_SECRET:t},f=(new TextEncoder).encode(JSON.stringify(p));let w=await a(e.channel_server+"/api/room/"+h+"/uploadRoom",{method:"POST",body:f});w=await w.json(),w.success?o({channelId:h,key:c}):r(JSON.stringify(w))}catch(e){r(e)}}))}get channel(){return this.#R}get storage(){return this.#D}get crypto(){return H}sendFile(e){this.storage.saveFile(this.#R,e)}}var ie={Snackabra:ae,SBMessage:Y,Channel:ee,SBCrypto:J,SB384:q};return t})()));