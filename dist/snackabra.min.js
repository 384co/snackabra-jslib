!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.SB=t():e.SB=t()}(self,(()=>(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{Channel:()=>$e,ChannelSocket:()=>Ne,KeyPrefix:()=>ue,MessageBus:()=>C,NEW_CHANNEL_MINIMUM_BUDGET:()=>a,Protocol_AES_GCM_256:()=>Ue,Protocol_ECDH:()=>Fe,SB:()=>Ve,SB384:()=>Oe,SBChannelKeys:()=>je,SBCrypto:()=>ve,SBMessage:()=>Le,SBObjectHandle:()=>He,SBStorageTokenPrefix:()=>o,Snackabra:()=>ze,StorageApi:()=>Ge,arrayBufferToBase62:()=>re,arrayBufferToBase64:()=>z,assemblePayload:()=>le,b62regex:()=>Z,base62:()=>q,base62ToArrayBuffer:()=>se,base62ToBase64:()=>ae,base62regex:()=>Y,base64ToArrayBuffer:()=>$,base64ToBase62:()=>oe,compareBuffers:()=>E,composeMessageKey:()=>y,deComposeMessageKey:()=>u,decodeB64Url:()=>W,encodeB64Url:()=>V,extractPayload:()=>ye,getRandomValues:()=>K,hydrateKey:()=>be,isBase62Encoded:()=>X,jsonParseWrapper:()=>B,msgTtlToSeconds:()=>S,msgTtlToString:()=>k,sbCrypto:()=>Me,setDebugLevel:()=>m,stripChannelMessage:()=>w,validate_ChannelApiBody:()=>f,validate_ChannelMessage:()=>p,validate_Message:()=>g,validate_SBChannelData:()=>d,validate_SBChannelHandle:()=>l,validate_SBStorageToken:()=>i,version:()=>s});var n,r=function(e,t,n,r){var s,a=arguments.length,o=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(o=(a<3?s(o):a>3?s(t,n,o):s(t,n))||o);return a>3&&o&&Object.defineProperty(t,n,o),o};const s="2.0.0-alpha.5 (build 63)",a=33554432,o="LM2r";function i(e){if(e){if(e[Ie])return e;if("string"==typeof e&&e.slice(0,4)===o)return{[Ie]:!0,hash:e};if(!(e.hash&&"string"==typeof e.hash&&e.hash.length>0&&(!e.size||Number.isInteger(e.size)&&e.size>0))||e.motherChannel&&"string"!=typeof e.motherChannel||e.created&&!Number.isInteger(e.created)||e.used&&"boolean"!=typeof e.used)throw b&&console.error("invalid SBStorageToken ... trying to ingest:\n",e),new Error("invalid SBStorageToken");return{...e,[Ie]:!0}}throw new Error("invalid SBStorageToken (null or undefined)")}function c(e){return e.channelId&&43===e.channelId.length&&e.userPrivateKey&&"string"==typeof e.userPrivateKey&&e.userPrivateKey.length>0&&(!e.channelServer||"string"==typeof e.channelServer)&&(!e.channelData||h(e.channelData))}function l(e){if(e){if(e[Ke])return e;if(c(e))return{...e,[Ke]:!0};throw v&&console.error("invalid SBChannelHandle ... trying to ingest:\n",e),new Error("invalid SBChannelHandle")}throw new Error("invalid SBChannelHandle (null or undefined)")}function h(e){return e.channelId&&43===e.channelId.length&&e.ownerPublicKey&&"string"==typeof e.ownerPublicKey&&e.ownerPublicKey.length>0&&(!e.storageToken||i(e.storageToken))}function d(e){if(e){if(h(e))return e;throw b&&console.error("invalid SBChannelData ... trying to ingest:\n",e),new Error("invalid SBChannelData")}throw new Error("invalid SBChannelData (null or undefined)")}function y(e,t,n="____"){return`${e}_${n??"____"}_${r=t,r.toString(4).padStart(22,"0")+"0000"}`;var r}function u(e){const t=e.slice(0,43),n=e.slice(44,48);var r;return{channelId:t,timestamp:(r=e.slice(49),parseInt(r,4)),subChannel:n}}function g(e){if(e){if(e.body&&"object"==typeof e.body&&e.channelId&&"string"==typeof e.channelId&&43===e.channelId.length&&e.sender&&"string"==typeof e.sender&&43===e.sender.length&&e.senderPublicKey&&"string"==typeof e.senderPublicKey&&e.senderPublicKey.length>0&&e.senderTimestamp&&Number.isInteger(e.senderTimestamp)&&e.serverTimestamp&&Number.isInteger(e.serverTimestamp)&&e._id&&"string"==typeof e._id&&86===e._id.length)return e;throw b&&console.error("invalid Message ... trying to ingest:\n",e),new Error("invalid Message")}throw new Error("invalid Message (null or undefined)")}function f(e){if(e){if(e[Ee])return e;if(e.channelId&&43===e.channelId.length&&e.path&&"string"==typeof e.path&&e.path.length>0&&e.userId&&"string"==typeof e.userId&&43===e.userId.length&&e.userPublicKey&&e.userPublicKey.length>0&&(!e.isOwner||"boolean"==typeof e.isOwner)&&(!e.apiPayloadBuf||e.apiPayloadBuf instanceof ArrayBuffer)&&e.timestamp&&Number.isInteger(e.timestamp)&&e.sign&&e.sign instanceof ArrayBuffer)return{...e,[Ee]:!0};throw b&&console.error("invalid ChannelApiBody ... trying to ingest:\n",e),new Error("invalid ChannelApiBody")}throw new Error("invalid ChannelApiBody (null or undefined)")}function p(e){if(e){if(e[Be])return e;if(!(e.f&&"string"==typeof e.f&&43===e.f.length&&e.c&&e.c instanceof ArrayBuffer&&e.ts&&Number.isInteger(e.ts)&&e.iv&&e.iv instanceof Uint8Array&&12===e.iv.length&&e.s&&e.s instanceof ArrayBuffer)||e.sts&&!Number.isInteger(e.sts)||e.salt&&!(e.salt instanceof ArrayBuffer&&16===e.salt.byteLength)||e._id&&("string"!=typeof e._id||86!==e._id.length)||e.ready&&"boolean"!=typeof e.ready||e.timestampPrefix&&("string"!=typeof e.timestampPrefix||26!==e.timestampPrefix.length)||e.channelId&&("string"!=typeof e.channelId||43!==e.channelId.length)||e.i2&&("string"!=typeof e.i2||!/^[a-zA-Z0-9_]{4}$/.test(e.i2))||e.ttl&&!(Number.isInteger(e.ttl)&&e.ttl>=0&&e.ttl<=15))throw v&&console.error("invalid ChannelMessage ... trying to ingest:\n",e),new Error("invalid ChannelMessage");return{...e,[Be]:!0}}throw new Error("invalid ChannelMessage (null or undefined)")}function w(e){b&&console.log("stripping message:\n",e);const t={};if(void 0===e.f)throw new Error("ERROR: missing 'f' ('from') in message");if(t.f=e.f,void 0===e.c)throw new Error("ERROR: missing 'ec' ('encrypted contents') in message");if(t.c=e.c,void 0===e.iv)throw new Error("ERROR: missing 'iv' ('nonce') in message");if(t.iv=e.iv,void 0===e.salt)throw new Error("ERROR: missing 'salt' in message");if(t.salt=e.salt,void 0===e.s)throw new Error("ERROR: missing 's' ('signature') in message");if(t.s=e.s,void 0===e.ts)throw new Error("ERROR: missing 'ts' ('timestamp') in message");if(t.ts=e.ts,void 0===e.sts)throw new Error("ERROR: missing 'sts' ('servertimestamp') in message");return t.sts=e.sts,void 0!==e.ttl&&15!==e.ttl&&(t.ttl=e.ttl),void 0!==e.t&&(t.t=e.t),void 0!==e.i2&&"____"!==e.i2&&(t.i2=e.i2),t}var b=!1,v=!1;function m(e,t){t&&(v=e&&t),(b=e)&&console.warn("++++ [setDebugLevel]: setting DBG to TRUE ++++"),v&&console.warn("++++ [setDebugLevel]: ALSO setting DBG2 to TRUE (verbose) ++++")}globalThis.configuration&&!0===globalThis.configuration.DEBUG&&((b=!0)&&console.warn("++++ Setting DBG to TRUE based on 'configuration.DEBUG' ++++"),!0===globalThis.configuration.DEBUG2&&(v=!0,b&&console.warn("++++ ALSO setting DBG2 (verbose) ++++")));const S=[0,-1,-1,60,300,1800,14400,129600,864e3,-1,-1,-1,-1,-1,1/0],k=["Ephemeral","<reserved>","<reserved>","One minute","Five minutes","Thirty minutes","Four hours","36 hours","10 days","<reserved>","<reserved>","<reserved>","<reserved>","<reserved>","Permastore (no TTL)"];class C{bus={};#e(e){return this.bus[e]||(this.bus[e]=[])}subscribe(e,t){this.#e(e).push(t)}unsubscribe(e,t){let n=-1;this.bus[e]?-1!=(n=this.bus[e].findLastIndex((e=>e==t)))?this.bus[e].splice(n,1):console.info("fyi: asked to remove a handler but it's not there"):console.info("fyi: asked to remove a handler but the event is not there")}publish(e,...t){for(const n of this.#e("*"))n(e,...t);for(const n of this.#e(e))n(...t)}}function B(e,t,n){for(;e&&"string"==typeof e;)try{e=JSON.parse(e,n)}catch(n){throw new Error(`JSON.parse() error${t?` at ${t}`:""}: ${n}\nString (possibly nested) was: ${e}`)}return e}function E(e,t){if(typeof e!=typeof t)return!1;if(null==e||null==t)return!1;const n=G(e),r=G(t);if(n.byteLength!==r.byteLength)return!1;for(let e=0;e<n.byteLength;e++)if(n.getUint8(e)!==r.getUint8(e))return!1;return!0}function K(e){if(e.byteLength<4096)return crypto.getRandomValues(e);{R(!(e.byteLength%1024),"getRandomValues(): large requested blocks must be multiple of 1024 in size");let t=0;try{for(t=0;t<e.byteLength;t+=1024){let n=new Uint8Array(1024);crypto.getRandomValues(n),e.set(n,t)}}catch(e){console.log(`got an error on index i=${t}`),console.log(e),console.trace()}return e}}function A(e,t){return new Promise(((n,r)=>{try{fetch(e,t??{method:"GET",headers:{"Content-Type":"application/json"}}).then((e=>{n(e)})).catch((e=>{throw e}))}catch(e){const t=`[SBFetch] Error (fetch exception, might be normal operation): ${e}`;console.warn(t),r(t)}}))}function P(e){const t=" ***ERRORMSGSTART*** ",n=" ***ERRORMSGEND*** ";return e instanceof Error?(b&&console.error("[WrapError] Error: \n",e),new Error(t+e.message+n)):new Error(t+String(e)+n)}function I(e,t){throw new Error("[_sb_exception] << SB lib error ("+e+": "+t+") >>")}function R(e,t){if(!e){const e=` <<<<[_sb_assert] assertion failed: '${t}'>>>> `;throw b&&console.trace(e),new Error(e)}}function D(e,t){const n=new Uint8Array(e.byteLength+t.byteLength);return n.set(new Uint8Array(e),0),n.set(new Uint8Array(t),e.byteLength),n.buffer}const M=/^([A-Za-z0-9+/_\-=]*)$/,_=[],T=[],O=[],j="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",x=j+"+/",L=j+"-_",U="=",F=16383;for(let e=0,t=x.length;e<t;++e)_[e]=x[e],T[e]=L[e],O[x.charCodeAt(e)]=e;function $(e){if(!M.test(e))throw new Error(`invalid character in string '${e}'`);let t;switch(e.length%4){case 2:e+="==";break;case 3:e+="="}const[n,r]=function(e){const t=e.length;let n=e.indexOf(U);return-1===n&&(n=t),[n,n===t?0:4-n%4]}(e),s=new Uint8Array(function(e,t){return 3*(e+t)/4-t}(n,r));let a=0;const o=r>0?n-4:n;let i;for(i=0;i<o;i+=4)t=O[e.charCodeAt(i)]<<18|O[e.charCodeAt(i+1)]<<12|O[e.charCodeAt(i+2)]<<6|O[e.charCodeAt(i+3)],s[a++]=t>>16&255,s[a++]=t>>8&255,s[a++]=255&t;return 2===r&&(t=O[e.charCodeAt(i)]<<2|O[e.charCodeAt(i+1)]>>4,s[a++]=255&t),1===r&&(t=O[e.charCodeAt(i)]<<10|O[e.charCodeAt(i+1)]<<4|O[e.charCodeAt(i+2)]>>2,s[a++]=t>>8&255,s[a++]=255&t),s}function N(e,t){return e[t>>18&63]+e[t>>12&63]+e[t>>6&63]+e[63&t]}function H(e,t,n,r){let s;const a=new Array((r-n)/3);for(let o=n,i=0;o<r;o+=3,i++)s=(t.getUint8(o)<<16&16711680)+(t.getUint8(o+1)<<8&65280)+(255&t.getUint8(o+2)),a[i]=N(e,s);return a.join("")}O["-".charCodeAt(0)]=62,O["_".charCodeAt(0)]=63;const G=e=>e instanceof ArrayBuffer?new DataView(e):new DataView(e.buffer,e.byteOffset,e.byteLength);function z(e,t="url"){if(null==e)return I("L893","arrayBufferToBase64() -> null paramater"),"";{const n=G(e),r=n.byteLength,s=r%3,a=r-s,o=new Array(Math.floor(a/F)+Math.sign(s)),i="url"==t?T:_,c="";let l=0;for(let e=0;e<a;e+=F)o[l++]=H(i,n,e,e+F>a?a:e+F);if(1===s){const e=n.getUint8(r-1);o[l]=i[e>>2]+i[e<<4&63]+c+c}else if(2===s){const e=(n.getUint8(r-2)<<8)+n.getUint8(r-1);o[l]=i[e>>10]+i[e>>4&63]+i[e<<2&63]+c}return o.join("")}}function V(e){return e.replaceAll("+","-").replaceAll("/","_")}function W(e){const t=(e=e.replaceAll("-","+").replaceAll("_","/")).length%4;return t&&(R(1!==t,"InvalidLengthError: Input base64url string is the wrong length to determine padding"),e+=new Array(5-t).join("=")),e}const q="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",J=q[0],Z=/^[A-Za-z0-9]*$/,Y=Z;function X(e){return Z.test(e)}const Q=32,ee=new Map,te=new Map;for(let e=1;e<=Q;e++){const t=Math.ceil(8*e/Math.log2(62));ee.set(e,t),te.set(t,e)}const ne=ee.get(Q);function re(e){function t(e,t){let n="",r=0n;for(const t of e)r=r<<8n|BigInt(t);for(;r>0n;r/=62n)n=q[Number(r%62n)]+n;return n.padStart(ee.get(t),J)}const n=e instanceof ArrayBuffer?new Uint8Array(e):e;let r="";for(let e,s=n.byteLength,a=0;s>0;a+=e,s-=e)e=s>=Q?Q:s,r+=t(n.slice(a,a+e),e);return r}function se(e){if(!Z.test(e))throw new Error("base62ToArrayBuffer32: must be alphanumeric (0-9A-Za-z).");function t(e,t){try{let n=0n,r=new Uint8Array(t);for(let t=0;t<e.length;t++)n=62n*n+BigInt(q.indexOf(e[t]));if(n>2n**BigInt(8*t)-1n)throw new Error("base62ToArrayBuffer: Invalid Base62 string.");for(let e=t-1;e>=0;e--,n>>=8n)r[e]=Number(0xffn&n);return r}catch(e){throw new Error("base62ToArrayBuffer: Invalid Base62 string.")}}try{let n=0,r=new Uint8Array(6*e.length/8);for(let s,a,o=0;o<e.length;o+=s,n+=a.byteLength)s=Math.min(e.length-o,ne),a=t(e.slice(o,o+s),te.get(s)),r.set(a,n);return r.buffer.slice(0,n)}catch(e){throw e}}function ae(e){return z(se(e))}function oe(e){return re($(e))}function ie(e){if(null===e)return"0";if(void 0===e)return"u";if(Array.isArray(e))return"a";if(e instanceof ArrayBuffer)return"x";if(e instanceof Uint8Array)return"8";if("boolean"==typeof e)return"b";if(e instanceof DataView)return"v";if(e instanceof Date)return"d";if(e instanceof Map)return"m";if("number"==typeof e)return"number"==typeof(t=e)&&t>=-2147483648&&t<=2147483647&&t%1==0?"i":"n";var t;if(null!==e&&"object"==typeof e&&e.constructor===Object)return"o";if(e instanceof Set)return"t";if("string"==typeof e)return"s";throw"object"==typeof e&&"function"==typeof e.then?console.error("[getType] Trying to serialize a Promise - did you forget an 'await'?"):console.error("[getType] Unsupported for object:",e),new Error("Unsupported type")}function ce(e){try{const t={};let n=0,r=0,s=[];for(const a in e)if(e.hasOwnProperty(a)){const o=e[a],i=ie(o);switch(i){case"o":const e=ce(o);if(!e)throw new Error(`Failed to assemble payload for ${a}`);s.push(e);break;case"n":const t=new Uint8Array(8);new DataView(t.buffer).setFloat64(0,o),s.push(t.buffer);break;case"i":const n=new Uint8Array(4);new DataView(n.buffer).setInt32(0,o),s.push(n.buffer);break;case"d":const r=new Uint8Array(8);new DataView(r.buffer).setFloat64(0,o.getTime()),s.push(r.buffer);break;case"b":const c=new Uint8Array(1);c[0]=o?1:0,s.push(c.buffer);break;case"s":const l=(new TextEncoder).encode(o);s.push(l);break;case"x":s.push(o);break;case"8":s.push(o.buffer);break;case"m":const h=new Array;o.forEach(((e,t)=>{h.push([t,e])}));const d=ce(h);if(!d)throw new Error(`Failed to assemble payload for ${a}`);s.push(d);break;case"a":const y=new Array;o.forEach((e=>{y.push(e)}));const u=ce(y);if(!u)throw new Error(`Failed to assemble payload for ${a}`);s.push(u);break;case"t":const g=new Array;o.forEach((e=>{g.push(e)}));const f=ce(g);if(!f)throw new Error(`Failed to assemble payload for ${a}`);s.push(f);break;case"0":case"u":s.push(new ArrayBuffer(0));break;default:throw console.error(`[assemblePayload] Unsupported type: ${i}`),new Error(`Unsupported type: ${i}`)}const c=s[s.length-1].byteLength;n++,t[n.toString()]={n:a,s:r,z:c,t:i},r+=c}const a=(new TextEncoder).encode(JSON.stringify(t)),o=new Uint32Array([a.byteLength]);let i=D(new Uint8Array(o.buffer),new Uint8Array(a));for(let e=0;e<s.length;e++)i=D(new Uint8Array(i),s[e]);return i}catch(e){return console.error(e),null}}function le(e){return b&&e instanceof ArrayBuffer&&console.warn("[assemblePayload] Warning: data is already an ArrayBuffer, make sure you are not double-encoding"),ce({ver003:!0,payload:e})}function he(e,t){switch(t){case"o":return de(e);case"n":return new DataView(e).getFloat64(0);case"i":return new DataView(e).getInt32(0);case"d":return new Date(new DataView(e).getFloat64(0));case"b":return 1===new Uint8Array(e)[0];case"s":return(new TextDecoder).decode(e);case"a":const n=de(e);if(!n)throw new Error(`Failed to assemble payload for ${t}`);return Object.values(n);case"m":const r=de(e);if(!r)throw new Error(`Failed to assemble payload for ${t}`);const s=new Map;for(const e in r)s.set(r[e][0],r[e][1]);return s;case"t":const a=de(e);if(!a)throw new Error(`Failed to assemble payload for ${t}`);const o=new Set;for(const e in a)o.add(a[e]);return o;case"x":return e;case"8":return new Uint8Array(e);case"0":return null;case"u":return;default:throw new Error(`Unsupported type: ${t}`)}}function de(e){try{const t=new Uint32Array(e.slice(0,4))[0],n=B((new TextDecoder).decode(e.slice(4,4+t)),"L1290"),r=4+t,s={};for(let t=1;t<=Object.keys(n).length;t++){const a=t.toString();if(n[a]){const t=n[a],o=t.s,i=t.z,c=t.t,l=e.slice(r+o,r+o+i);s[t.n]=he(l,c)}else console.log(`found nothing for index ${t}`)}return s}catch(e){throw new Error("[extractPayload] exception <<"+e+">> [/extractPayload]")}}function ye(e){return de(e)}var ue,ge;function fe(e){"string"==typeof e&&(e=$(e));const t=new Uint8Array(e);return 1==(1&t[t.length-1])?1:0}function pe(e){try{if(e.length<=4)return;const t=e.slice(0,4),n=e.slice(4);switch(t.slice(0,3)){case ue.SBPublicKey:switch(t[3]){case ge.Uncompressed:{const e=se(n);if(96!==e.byteLength)return;const t=e.slice(48,96);return{x:z(e.slice(0,48)),y:z(t),ySign:fe(t)}}case ge.CompressedEven:case ge.CompressedOdd:{const e=t[3]===ge.CompressedEven?0:1,r=se(n);if(48!==r.byteLength)return;const{x:s,y:a}=Te(z(r),e);return{x:s,y:a,ySign:e}}default:console.error("KeySubPrefix not recognized")}break;case ue.SBPrivateKey:switch(t[3]){case ge.Uncompressed:{const e=se(n);if(144!==e.byteLength)return;const t=e.slice(48,96);return{x:z(e.slice(0,48)),y:z(t),ySign:fe(t),d:z(e.slice(96,144))}}case ge.CompressedEven:case ge.CompressedOdd:{const e=t[3]===ge.CompressedEven?0:1,r=se(n);if(96!==r.byteLength)return;const s=r.slice(0,48),{x:a,y:o}=Te(z(s),e);return{x:a,y:o,ySign:e,d:z(r.slice(48,96))}}case ge.Dehydrated:return void console.error("parseSB384string() - you need to rehydrate first ('hydrateKey()')");default:console.error("KeySubPrefix not recognized")}break;default:console.error("KeyPrefix not recognized")}return}catch(e){return void console.error("parseSB384string() - malformed input, exception: ",e)}}function we(e,t,n){if(!e||64!==e.length||!t||64!==t.length||void 0===n)return;const r=new Uint8Array(96);return r.set($(e),0),r.set($(t),48),ue.SBPrivateKey+(0===n?ge.CompressedEven:ge.CompressedOdd)+re(r)}function be(e,t){if(e.length<=4)return;const n=e.slice(0,4);switch(n.slice(0,3)){case ue.SBPublicKey:return e;case ue.SBPrivateKey:switch(n[3]){case ge.Uncompressed:case ge.CompressedEven:case ge.CompressedOdd:return e;case ge.Dehydrated:{if(!t)return void console.error("hydrateKey() - you need to provide pubKey to hydrate");const n=z(se(e.slice(4)).slice(0,48)),r=pe(t);return r&&r.x&&void 0!==r.ySign?we(r.x,n,r.ySign):void console.error("hydrateKey() - failed to parse public key")}default:console.error("KeySubPrefix not recognized")}break;default:console.error("KeyPrefix not recognized")}}!function(e){e.SBPublicKey="PNk",e.SBPrivateKey="Xj3",e.SBDehydratedKey="XjZ"}(ue||(ue={})),function(e){e.CompressedEven="2",e.CompressedOdd="3",e.Uncompressed="4",e.Dehydrated="x"}(ge||(ge={}));class ve{generateIdKey(e){if(!(e instanceof ArrayBuffer))throw new TypeError("Input must be an ArrayBuffer");return new Promise(((t,n)=>{try{crypto.subtle.digest("SHA-512",e).then((e=>{const n=e.slice(0,32),r=e.slice(32);t({id_binary:n,key_material:r})}))}catch(e){n(e)}}))}async generateKeys(){try{return await crypto.subtle.generateKey({name:"ECDH",namedCurve:"P-384"},!0,["deriveKey"])}catch(e){throw new Error("generateKeys() exception ("+e+")")}}async importKey(e,t,n,r,s){try{let a;const o={ECDH:{name:"ECDH",namedCurve:"P-384"},AES:{name:"AES-GCM"},PBKDF2:"PBKDF2"};if("jwk"===e){const e=t;if(void 0===e.kty)throw new Error("importKey() - invalid JsonWebKey");"ECDH"===e.alg&&(e.alg=void 0),a=await crypto.subtle.importKey("jwk",e,o[n],r,s)}else a=await crypto.subtle.importKey(e,t,o[n],r,s);return a}catch(a){const o=`... importKey() error: ${a}:`;throw b&&(console.error(o),console.log(e),console.log(t),console.log(n),console.log(r),console.log(s)),new Error(o)}}async exportKey(e,t){return crypto.subtle.exportKey(e,t).catch((()=>{b&&console.warn("... exportKey() protested, this just means we treat this as undefined")}))}async encrypt(e,t,n){if(null===e)throw new Error("no contents");if(!n.iv)throw new Error("no nonce");return n.name?R("AES-GCM"===n.name,"Must be AES-GCM (L1951)"):n.name="AES-GCM",crypto.subtle.encrypt(n,t,e)}async wrap(e,t,n,r,s,a){R(e&&t&&n&&s,"wrapMessage(): missing required parameter(2)");const o=le(e);R(o,"wrapMessage(): failed to assemble payload"),R(o.byteLength<xe,`wrapMessage(): body must be smaller than ${xe/1024} KiB (we got ${o.byteLength/1024} KiB)})`),R(r,"wrapMessage(): missing salt"),v&&console.log("will wrap() body, payload:\n",_e,"\n",e,"\n",_e,o,"\n",_e);const i=crypto.getRandomValues(new Uint8Array(12)),c=25*Math.round(Date.now()/25),l=new DataView(new ArrayBuffer(8));l.setFloat64(0,c);var h={f:t,c:await Me.encrypt(o,n,{iv:i,additionalData:l}),iv:i,salt:r,s:await Me.sign(s,o),ts:c};if(v&&console.log("wrap() message is\n",h),a&&(a.sendTo&&(h.t=a.sendTo),a.ttl&&(h.ttl=a.ttl),a.subChannel))throw new Error("wrapMessage(): subChannel not yet supported");try{h=p(h)}catch(e){const t=`wrapMessage(): failed to validate message: ${e}`;throw console.error(t),new Error(t)}return h}unwrap(e,t){return new Promise((async(n,r)=>{try{if(!t.ts)throw new Error("unwrap() - no timestamp in encrypted message");const{c:r,iv:s}=t;R(r,"[unwrap] No contents in encrypted message (probably an error)");const a=new DataView(new ArrayBuffer(8));a.setFloat64(0,t.ts),n(await crypto.subtle.decrypt({name:"AES-GCM",iv:s,additionalData:a},e,r))}catch(e){b&&console.error(`unwrap(): cannot unwrap/decrypt - rejecting: ${e}`),v&&console.log("message was \n",t),r(e)}}))}sign(e,t){return crypto.subtle.sign({name:"ECDSA",hash:{name:"SHA-384"}},e,t)}verify(e,t,n){return crypto.subtle.verify({name:"ECDSA",hash:{name:"SHA-384"}},e,t,n)}str2ab(e){return(new TextEncoder).encode(e)}ab2str(e){return new TextDecoder("utf-8").decode(e)}}function me(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=`__${e.constructor.name}__${t}__`;if(this.hasOwnProperty(n))return this[n];{const e=r.call(this);return Object.defineProperty(this,n,{configurable:!1,enumerable:!1,writable:!1,value:e}),e}}}}function Se(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=e.constructor.name,s=e.constructor.ReadyFlag;R(s in this,"'readyFlagSymbol' missing yet getter accessed with @Ready pattern (fatal)"),R(this[s],`'${n}.${t}' getter accessed but object not 'ready' (fatal)`);const a=r.call(this);return R(null!=a,`'${n}.${t}' getter accessed but return value will be NULL (fatal)`),a}}}function ke(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=e.constructor.name;return"owner"in this&&R(!0===this.owner,`${t} getter or method accessed for object ${n} but callee is not channel owner`),r.call(this)}}}const Ce=["SBMessage","SBObjectHandle","SBChannelHandle","ChannelApiBody"],Be=Symbol("SB_CHANNEL_MESSAGE_SYMBOL"),Ee=Symbol("SB_CHANNEL_API_BODY_SYMBOL"),Ke=Symbol("SBChannelHandle"),Ae=Symbol.for("SBMessage"),Pe=Symbol.for("SBObjectHandle"),Ie=Symbol.for("SBStorageToken");function Re(e,t){switch(t){case"SBMessage":return Ae in e;case"SBObjectHandle":case"SBChannelHandle":return Pe in e;default:return!1}}const De="SBMessageCache";"indexedDB"in globalThis&&(globalThis.sbMessageCache=new class{dbName;readyPromise;db;constructor(e,t=1){this.dbName=e,this.readyPromise=new Promise(((n,r)=>{if(!("indexedDB"in globalThis))return console.warn("IndexedDB is not supported in this environment. SBCache will not be functional."),void r("IndexedDB not supported");const s=indexedDB.open(e,t);s.onsuccess=()=>{this.db=s.result,n(this)},s.onerror=()=>{r(`Database error ('${e}): `+s.error)}}))}getObjStore(e,t="readonly"){e||(e=this.dbName),R(this.db,"Internal Error [L2009]");const n=this.db?.transaction(De,t),r=n?.objectStore(De);return R(r,"Internal Error [L2013]"),r}async add(e,t){return new Promise((async(n,r)=>{const s=this.getObjStore("readwrite").put({key:e,value:t});s.onsuccess=()=>{n()},s.onerror=()=>{r("[add] Received error accessing keys")}}))}async get(e){return new Promise((async(t,n)=>{await this.readyPromise;const r=this.getObjStore().get(e);r.onsuccess=()=>{t(r.result?.value)},r.onerror=()=>{n("[get] Received error accessing keys")}}))}getLowerUpper(e,t,n){const r=t.padEnd(26,"3");return[e+(n?`_${n}_`:"______")+t,r]}async getKnownMessageKeys(e,t,n){return new Promise((async(r,s)=>{await this.readyPromise;const a=this.getObjStore(),[o,i]=this.getLowerUpper(e,t,n),c=IDBKeyRange.bound(o,i,!1,!1),l=a?.getAllKeys(c);l||r(new Set),l.onsuccess=()=>{r(new Set(l.result))},l.onerror=()=>{s("[getKnownMessageKeys] Received error accessing keys")}}))}async getKnownMessages(e,t,n){return new Promise((async(r,s)=>{await this.readyPromise;const a=this.getObjStore(),[o,i]=this.getLowerUpper(e,t,n),c=IDBKeyRange.bound(o,i,!1,!1),l=a?.getAll(c);l||r(new Map),l.onsuccess=()=>{r(new Map(l.result))},l.onerror=()=>{s("[getKnownMessages] Received error accessing keys")}}))}}(De,1));const Me=new ve,_e="============================================================\n";function Te(e,t){const n=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff"),r=BigInt("0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef"),s=(n+1n)/4n,a=new Uint8Array($(e)),o="0x"+Array.from(a,(e=>e.toString(16).padStart(2,"0"))).join("");var i=BigInt(o),c=function(e,t,n){if(1n===n)return 0n;let r=1n;for(e%=n;t>0n;)t%2n===1n&&(r=r*e%n),t>>=1n,e=e*e%n;return r}(i*i*i-3n*i+r,s,n);c%2n!==BigInt(t)&&(c=n-c);const l=c.toString(16).padStart(96,"0");return{x:e,y:z(new Uint8Array(l.match(/.{1,2}/g).map((e=>parseInt(e,16)))))}}class Oe{sb384Ready;static ReadyFlag=Symbol("SB384ReadyFlag");#t;#n;#r;#s;#a;#o;#i;#c;#l;constructor(e,t){this[Oe.ReadyFlag]=!1,this.sb384Ready=new Promise((async(n,r)=>{try{if(e)if(e instanceof CryptoKey){const n=await Me.exportKey("jwk",e);R(n&&n.x&&n.y,"INTERNAL"),n.d?(this.#t=!0,this.#a=n.d):(this.#t=!1,R(!t,"ERROR creating SB384 object: key provided is not the requested private")),this.#n=n.x,this.#r=n.y}else if(e&&e instanceof Object&&"kty"in e){const n=e;R(n&&n.x&&n.y,"Cannot parse format of JWK key"),e.d?(this.#t=!0,this.#a=n.d):(this.#t=!1,R(!t,"ERROR creating SB384 object: key provided is not the requested private")),this.#n=n.x,this.#r=n.y}else{if("string"!=typeof e)throw new Error("ERROR creating SB384 object: invalid key (must be a JsonWebKey, SBUserId, or omitted)");{const n=pe(e);if(!n)throw new Error("ERROR creating SB384 object: invalid key (must be a JsonWebKey | SBUserPublicKey | SBUserPrivateKey, or omitted)");const{x:r,y:s,d:a}=n;a?(this.#t=!0,this.#a=a):(this.#t=!1,R(!t,"ERROR creating SB384 object: key provided is not the requested private")),R(r&&s,"INTERNAL"),this.#n=r,this.#r=s}}else{v&&console.log("SB384() - generating new key pair");const e=await Me.generateKeys(),t=await Me.exportKey("jwk",e.privateKey);R(t&&t.x&&t.y&&t.d,"INTERNAL"),this.#t=!0,this.#n=t.x,this.#r=t.y,this.#a=t.d,v&&console.log("#### FROM SCRATCH",this.#t)}if(v&&console.log("SB384() constructor; x/y/d:\n",this.#n,"\n",this.#r,"\n",this.#a),this.#t&&(this.#o=await Me.importKey("jwk",this.jwkPrivate,"ECDH",!0,["deriveKey"])),this.#i=await Me.importKey("jwk",this.jwkPublic,"ECDH",!0,[]),this.#t){const e={...this.jwkPrivate,key_ops:["sign"]};v&&console.log("starting jwk (private):\n",e),this.#c=await crypto.subtle.importKey("jwk",e,{name:"ECDSA",namedCurve:"P-384"},!0,["sign"])}else{const e={...this.jwkPublic,key_ops:["verify"]};v&&console.log("starting jwk (public):\n",e),this.#c=await crypto.subtle.importKey("jwk",e,{name:"ECDSA",namedCurve:"P-384"},!0,["verify"])}const r=D($(this.#n),$(this.#r));this.#l=re(await crypto.subtle.digest("SHA-256",r)),v&&console.log("SB384() constructor; hash:\n",this.#l),this.#s=fe(this.#r),v&&console.log("SB384() - constructor wrapping up",this),this[Oe.ReadyFlag]=!0,n(this)}catch(e){r("ERROR creating SB384 object failed: "+P(e))}}))}get SB384ReadyFlag(){return this[Oe.ReadyFlag]}get ready(){return this.sb384Ready}get private(){return this.#t}get hash(){return this.#l}get userId(){return this.hash}get ownerChannelId(){return this.hash}get privateKey(){if(!this.private)throw new Error("this is a public key, there is no 'privateKey' value");return this.#o}get signKey(){return this.#c}get publicKey(){return this.#i}get jwkPrivate(){return R(this.#t,"jwkPrivate() - not a private key"),R(this.#n&&this.#r&&this.#a,"JWK key info is not available (fatal)"),{crv:"P-384",ext:!0,key_ops:["deriveKey"],kty:"EC",x:this.#n,y:this.#r,d:this.#a}}get jwkPublic(){return R(this.#n&&this.#r,"JWK key info is not available (fatal)"),{crv:"P-384",ext:!0,key_ops:[],kty:"EC",x:this.#n,y:this.#r}}get ySign(){return R(null!==this.#s,"ySign() - ySign is not available (fatal)"),this.#s}get userPublicKey(){return R(this.#n&&void 0!==this.#s,"userPublicKey() - sufficient key info is not available (fatal)"),ue.SBPublicKey+(0===this.#s?ge.CompressedEven:ge.CompressedOdd)+oe(this.#n)}get userPrivateKey(){R(this.#t,"userPrivateKey() - not a private key, there is no userPrivateKey");const e=we(this.#n,this.#a,this.#s);return R(void 0!==e,"userPrivateKey() - failed to construct key, probably missing info (fatal)"),e}get userPrivateKeyDehydrated(){return R(this.#t&&this.#a,"userPrivateKey() - not a private key, and/or 'd' is missing, there is no userPrivateKey"),ue.SBPrivateKey+ge.Dehydrated+oe(this.#a)}}r([me,Se],Oe.prototype,"private",null),r([me,Se],Oe.prototype,"hash",null),r([me,Se],Oe.prototype,"userId",null),r([me,Se],Oe.prototype,"ownerChannelId",null),r([me,Se],Oe.prototype,"privateKey",null),r([me,Se],Oe.prototype,"signKey",null),r([me,Se],Oe.prototype,"publicKey",null),r([me],Oe.prototype,"jwkPrivate",null),r([me],Oe.prototype,"jwkPublic",null),r([me],Oe.prototype,"ySign",null),r([me],Oe.prototype,"userPublicKey",null),r([me],Oe.prototype,"userPrivateKey",null),r([me],Oe.prototype,"userPrivateKeyDehydrated",null);class je extends Oe{#h;sbChannelKeysReady;static ReadyFlag=Symbol("SBChannelKeysReadyFlag");#d;channelServer;constructor(e){if(null===e)throw new Error("SBChannelKeys constructor: you cannot pass 'null'");if(e)if("string"==typeof e)super(e,!0);else{if(!c(e))throw new Error("SBChannelKeys() constructor: invalid parameter (must be SBChannelHandle or SBUserPrivateKey)");{const t=l(e);super(t.userPrivateKey,!0),t.channelServer&&(this.channelServer=t.channelServer,"/"===this.channelServer[this.channelServer.length-1]&&(this.channelServer=this.channelServer.slice(0,-1))),this.#h=t.channelId,this.#d=t.channelData}}else super();this[je.ReadyFlag]=!1,this.sbChannelKeysReady=new Promise((async(e,t)=>{try{if(b&&console.log("SBChannelKeys() constructor."),await this.sb384Ready,R(this.private,"Internal Error (L2476)"),this.#h){if(!this.#d){if(!this.channelServer)throw new Error("SBChannelKeys() constructor: either key is owner key, or handle contains channelData, or channelServer is provided ...");b&&console.log("++++ SBChannelKeys being initialized from server");var n=await this.callApi("/getChannelKeys");R((n=d(n)).channelId===this.#h,"Internal Error (L2493)"),this.#d=n}}else this.#h=this.ownerChannelId,this.#d={channelId:this.#h,ownerPublicKey:this.userPublicKey};this[je.ReadyFlag]=!0,e(this)}catch(e){t("[SBChannelKeys] constructor failed. "+P(e))}}))}get ready(){return this.sbChannelKeysReady}get SBChannelKeysReadyFlag(){return this[je.ReadyFlag]}get channelData(){return this.#d}get owner(){return this.private&&this.ownerChannelId&&this.channelId&&this.ownerChannelId===this.channelId}get channelId(){return this.#h}get handle(){return{[Ke]:!0,channelId:this.channelId,userPrivateKey:this.userPrivateKey,channelServer:this.channelServer,channelData:this.channelData}}async buildApiBody(e,t){await this.sb384Ready;const n=25*Math.round(Date.now()/25),r=new ArrayBuffer(8);new DataView(r).setFloat64(0,n);const s=D(r,(new TextEncoder).encode(e).buffer),a=t?le(t):void 0,o=await Me.sign(this.signKey,a?D(s,a):s),i={channelId:this.#h,path:e,userId:this.userId,userPublicKey:this.userPublicKey,timestamp:n,sign:o};return a&&(i.apiPayloadBuf=a),f(i)}callApi(e,t){return R(this.channelServer,"[ChannelApi.callApi] channelServer is unknown"),b&&console.log("ChannelApi.callApi: calling fetch with path:",e),v&&console.log("... and body:",t),R(this.#h&&e,"Internal Error (L2528)"),new Promise((async(n,r)=>{const s={method:"POST",headers:{"Content-Type":'application/octet-stream"'},body:le(await this.buildApiBody(e,t))};v&&console.log("==== ChannelApi.callApi: calling fetch with init:\n",s),function(e,t){return new Promise(((n,r)=>{A(e,t).then((async t=>{var s;t&&t.ok||r("[SBApiFetch] Network response was not 'ok' (fatal)");const a=t.headers.get("content-type");if(a){if(-1!==a.indexOf("application/json")){const e=await t.json();v&&console.log(`[SBApiFetch] json ('${e}'):\n`,e),s=B(e,"L489")}else{if(-1===a.indexOf("application/octet-stream"))return void r("SBApiFetch] Server responded with unknown content-type header (?)");s=ye(await t.arrayBuffer()).payload}if(!s||s.error||s.success&&!s.success){let e="[SBApiFetch] Network or Server error or cannot parse response";t.status&&(e+=" ["+t.status+"]"),s?.error&&(e+=": "+s.error),b&&console.error("[SBApiFetch] error:\n",e),r(new Error(e))}else v&&console.log("[SBApiFetch] Success:\n",_e,e,"\n",_e,s,"\n",_e),n(s)}else r("[SBApiFetch] Server response missing content-type header (?)")})).catch((e=>{r(e)}))}))}(this.channelServer+"/api/v2/channel/"+this.#h+e,s).then((e=>{n(e)})).catch((e=>{r("[Channel.callApi] Error: "+P(e))}))}))}}r([me,Se],je.prototype,"channelData",null),r([me,Se],je.prototype,"owner",null),r([me,Se],je.prototype,"channelId",null),r([me,Se],je.prototype,"handle",null);const xe=65536;class Le{channel;contents;options;[Ae]=!0;sbMessageReady;static ReadyFlag=Symbol("SBMessageReadyFlag");#y;salt;constructor(e,t,n={}){this.channel=e,this.contents=t,this.options=n,this.salt=crypto.getRandomValues(new Uint8Array(16)).buffer,this.sbMessageReady=new Promise((async t=>{if(await e.channelReady,this.options.protocol||(this.options.protocol=e.protocol),!this.options.protocol)throw new Error("SBMessage() - no protocol provided");this.#y=await Me.wrap(this.contents,this.channel.userId,await this.options.protocol.encryptionKey(this),this.salt,this.channel.signKey,n),this[Le.ReadyFlag]=!0,t(this)}))}get ready(){return this.sbMessageReady}get SBMessageReadyFlag(){return this[Le.ReadyFlag]}get message(){return this.#y}async send(){return v&&console.log("SBMessage.send() - sending message:",this.message),this.channel.send(this)}}r([Se],Le.prototype,"message",null);class Ue{#u;#g;constructor(e,t){this.#g=t,this.#u=this.initializeMasterKey(e)}async initializeMasterKey(e){const t=this.#g.salt1,n=this.#g.iterations1,r=this.#g.hash1;R(t&&n&&r,"Protocol_AES_GCM_256.initializeMasterKey() - insufficient key info (fatal)");const s=await crypto.subtle.importKey("raw",(new TextEncoder).encode(e),{name:"PBKDF2"},!1,["deriveBits","deriveKey"]),a=await crypto.subtle.deriveBits({name:"PBKDF2",salt:t,iterations:n,hash:r},s,256);return crypto.subtle.importKey("raw",a,{name:"PBKDF2"},!1,["deriveBits","deriveKey"])}static async genKey(){return{salt1:crypto.getRandomValues(new Uint8Array(16)).buffer,iterations1:1e5,iterations2:1e4,hash1:"SHA-256",summary:"PBKDF2 - SHA-256 - AES-GCM"}}async#f(e){return await crypto.subtle.deriveKey({name:"PBKDF2",salt:e,iterations:this.#g.iterations2,hash:this.#g.hash1},await this.#u,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"])}async encryptionKey(e){return b&&console.log("CALLING Protocol_AES_GCM_384.encryptionKey(), salt:",e.salt),this.#f(e.salt)}async decryptionKey(e,t){if(t.salt)return b&&console.log("CALLING Protocol_AES_GCM_384.decryptionKey(), salt:",t.salt),this.#f(t.salt);console.warn("Salt should always be present in ChannelMessage")}}class Fe{#p=new Map;constructor(){}async encryptionKey(e){await e.channel.ready;const t=e.channel.channelId;R(t,"Internal Error (L2565)");const n=e.options.sendTo?e.options.sendTo:e.channel.channelData.ownerPublicKey;return this.#w(t,n,e.channel.privateKey)}async decryptionKey(e,t){await e.ready;const n=e.channelId;R(n,"Internal Error (L2594)");const r=e.visitors.get(t.f);if(r)return this.#w(n,r,e.privateKey);b&&console.log("Protocol_ECDH.key() - sentFrom is unknown")}async#w(e,t,n){const r=e+"_"+t;if(!this.#p.has(r)){const e=await crypto.subtle.deriveKey({name:"ECDH",public:(await new Oe(t).ready).publicKey},n,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]);this.#p.set(r,e),v&&console.log("++++ Protocol_ECDH.key() - newKey:",e)}const s=this.#p.get(r);return R(s,"Internal Error (L2584/2611)"),v&&console.log("++++ Protocol_ECDH.key() - res:",s),s}}class $e extends je{protocol;channelReady;static ReadyFlag=Symbol("ChannelReadyFlag");locked=!1;#b="";visitors=new Map;constructor(e,t){if(null===e)throw new Error("Channel() constructor: you cannot pass 'null'");v&&console.log("Channel() constructor called with handleOrKey:",e),super(e),this.protocol=t,this.channelReady=this.sbChannelKeysReady.then((()=>(this[$e.ReadyFlag]=!0,this))).catch((e=>{throw e}))}get ready(){return this.channelReady}get ChannelReadyFlag(){return this[$e.ReadyFlag]}get api(){return this}async deCryptChannelMessage(e,t){try{const n=t.f;if(!n)return;if(!this.visitors.has(n)){v&&console.log("++++ deCryptChannelMessage: need to update visitor table ...");const e=await this.callApi("/getPubKeys");if(!(e&&e instanceof Map))return;v&&console.log(_e,"visitorMap:\n",e,"\n",_e);for(const[t,n]of e)v&&console.log("++++ deCryptChannelMessage: adding visitor:",t,n),this.visitors.set(t,n)}R(this.visitors.has(n),`Cannot find sender userId hash ${n} in public key map`);const r=await(e.protocol?.decryptionKey(this,t));if(!r)return;try{const e=ye(await Me.unwrap(r,t)).payload;return v&&console.log("++++ deCryptChannelMessage: decrypted message:\n",e),e}catch(e){return void(b&&console.error("Message was not a payload of a ChannelMessage:\n"))}}catch(e){return void(b&&console.error("Message was not a payload of a ChannelMessage:\n",e))}}create(e,t=this.channelServer){return b&&console.log("==== Channel.create() called with storageToken:",e,"and channelServer:",t),R(null!==e,"[Channel.create] Missing storage token"),R(t,"[Channel.create] Missing channel server"),new Promise((async(n,r)=>{await this.channelReady,this.channelData.storageToken=i(e),b&&console.log("Will try to create channel with channelData:",this.channelData),this.callApi("/budd",this.channelData).then((()=>{this.channelServer=t,R(this.channelData&&this.channelData.channelId&&this.userPrivateKey,"Internal Error [L2546]"),n({[Ke]:!0,channelId:this.channelData.channelId,userPrivateKey:this.userPrivateKey,channelServer:this.channelServer,channelData:this.channelData})})).catch((e=>{r("Channel.create() failed: "+P(e))}))}))}getLastMessageTimes(){throw new Error("Channel.getLastMessageTimes(): not supported in 2.0 yet")}getMessageKeys(e=100,t=!1){return new Promise((async(n,r)=>{R(this.channelId,"Channel.getMessageKeys: no channel ID (?)");const s=await this.callApi("/getMessageKeys",{currentMessagesLength:e,cursor:t?this.#b:void 0});R(s,"Channel.getMessageKeys: no messages (empty/null response)"),v&&console.log("getMessageKeys\n",s),n(s)}))}getMessages(e){return new Promise((async(t,n)=>{R(this.channelId,"Channel.getMessages: no channel ID (?)");const r=await this.callApi("/getMessages",e);R(r,"Channel.getMessages: no messages (empty/null response)"),v&&console.log(_e,_e,"getMessages - here are the raw ones\n",r,_e,_e);const s=new Map;for(const[e,t]of r.entries()){if(!this.protocol)throw new Error("Channel.getMessages(): need protocol to decrypt messages");const n=ye(t).payload;v&&console.log("++++ deCryptChannelMessage: msgBuf:\n",n);const r=p(n);v&&console.log("++++ deCryptChannelMessage: validated");const a=await this.deCryptChannelMessage(this,r);a&&s.set(e,a)}v&&console.log(_e,"and here are decrypted ones, hopefully\n",_e,s,"\n",_e),t(s)}))}async send(e){const t=e instanceof Le?e:new Le(this,e);return await t.ready,this.callApi("/send",t.message)}acceptVisitor(e){return this.callApi("/acceptVisitor",{userId:e})}getCapacity(){return this.callApi("/getCapacity")}getAdminData(){return this.callApi("/getAdminData")}getMother(){return this.getAdminData().then((e=>e.motherChannel))}isLocked(){return this.getAdminData().then((e=>e.locked))}lock(){return this.callApi("/lockChannel")}updateCapacity(e){return this.callApi("/setCapacity",{capacity:e})}getChannelKeys(){return this.callApi("/getChannelKeys")}getPubKeys(){return this.callApi("/getPubKeys")}getStorageLimit(){return this.callApi("/getStorageLimit")}async getStorageToken(e){return i(await this.callApi("/getStorageToken",{size:e}))}budd(e){return new Promise((async(t,n)=>{var{targetChannel:r,size:s}=e||{};if(r){if(this.channelId===r.channelId)return void n(new Error("[budd()]: source and target channels are the same, probably an error"))}else r=(await(new $e).ready).handle,b&&console.log("\n",_e,"[budd()]: no target channel provided, using new channel:\n",_e,r,"\n",_e);if(s||(s=a),s!==1/0&&Math.abs(s)>await this.getStorageLimit())return void n(new Error(`[budd()]: storage amount (${s}) is more than current storage limit`));const o=r.channelData;if(o)try{o.storageToken=await this.getStorageToken(s),b&&console.log(`[budd()]: requested ${s}, got storage token:`,o.storageToken);const e=await new $e(r).ready;e.channelServer||(e.channelServer=this.channelServer);const a=d(await e.callApi("/budd",o));if(r.channelId!==a.channelId)return console.warn("[budd()]: target channel ID changed, should not happen, error somewhere\n",_e),console.warn("targetChannel:",r,"\n",_e),console.warn("newChannelData:",a,"\n",_e),void n(new Error("[budd()]: target channel ID changed, should not happen, error somewhere"));a.storageToken||console.warn("[budd()]: target channel has no storage token, possibly an error, should be returned from server");const i={[Ke]:!0,channelId:a.channelId,userPrivateKey:r.userPrivateKey,channelServer:this.channelServer,channelData:a};b&&console.log("[budd()]: success, newHandle:",i),t(l(i))}catch(e){return void n("[budd] Could not get storage token from server, are you sure about the size?")}else n(new Error("[budd()]: target channel has no channel data, probably an error"))}))}downloadChannel(){}}r([me,Se],$e.prototype,"api",null),r([Se],$e.prototype,"send",null),r([Se,ke],$e.prototype,"acceptVisitor",null),r([Se,ke],$e.prototype,"getCapacity",null),r([Se,ke],$e.prototype,"getAdminData",null),r([Se,ke],$e.prototype,"getMother",null),r([Se,ke],$e.prototype,"isLocked",null),r([Se,ke],$e.prototype,"lock",null),r([Se,ke],$e.prototype,"updateCapacity",null),r([Se,me],$e.prototype,"getChannelKeys",null),r([Se],$e.prototype,"getPubKeys",null),r([Se],$e.prototype,"getStorageLimit",null),r([Se],$e.prototype,"getStorageToken",null),r([Se,ke],$e.prototype,"budd",null),r([Se],$e.prototype,"downloadChannel",null);class Ne extends $e{channelSocketReady;static ReadyFlag=Symbol("ChannelSocketReadyFlag");#v;#m;onMessage=e=>{R(!1,"[ChannelSocket] NO MESSAGE HANDLER")};#S=new Map;#k=!1;constructor(e,t){if(R(t,"ChannelSocket(): no onMessage handler provided"),!e.hasOwnProperty("channelId")||!e.hasOwnProperty("userPrivateKey"))throw new Error("ChannelSocket(): first argument must be valid SBChannelHandle");if(!e.channelServer)throw new Error("ChannelSocket(): no channel server provided (required)");super(e),this[n.ReadyFlag]=!1,this.#m=e.channelServer.replace(/^http/,"ws"),this.onMessage=t;const r=this.#m+"/api/v2/channel/"+e.channelId+"/websocket";this.#v={url:r,ready:!1,closed:!1,timeout:2e3},this.channelSocketReady=this.#C()}#B=async e=>{b&&console.log("Received socket message:",e);const t=e.data;var n=null;R(t,"[ChannelSocket] received empty message"),"string"==typeof t?(console.error("ChannelSocket receiving string (json?) message, this is getting deprecated"),n=B(t,"L3589")):t instanceof ArrayBuffer?n=ye(t).payload:t instanceof Blob?n=ye(await t.arrayBuffer()).payload:I("L3594","[ChannelSocket] received unknown message type"),R(n,"[ChannelSocket] cannot parse message"),n=p(n),console.log(_e,"Received socket message:\n",n,"\n",_e),n.channelId||(n.channelId=this.channelId),R(n.channelId===this.channelId,"[ChannelSocket] received message for wrong channel?"),this.#k&&console.log("Received socket message:",n),n._id||(n._id=y(n.channelId,n.sts,n.i2));const r=z(await crypto.subtle.digest("SHA-256",n.c));b&&console.log("Received message with hash:",r);const s=this.#S.get(r);s&&((b||this.#k)&&console.log(`++++++++ #processMessage: found matching ack for id ${r}`),this.#S.delete(r),s("success"));const a={body:await this.deCryptChannelMessage(this,n),channelId:n.channelId,sender:n.f,senderPublicKey:this.visitors.get(n.f),senderTimestamp:n.ts,serverTimestamp:n.sts,_id:n._id};b&&console.log("Repackaged and will deliver 'Message':",a),this.onMessage(a)};#C(){return new Promise((async(e,t)=>{b&&console.log("++++ STARTED ChannelSocket.readyPromise()");const r=this.#v.url;if(!this.#v.websocket||3===this.#v.websocket.readyState||2===this.#v.websocket.readyState){const e=le(await this.buildApiBody(r));R(e,"Internal Error [L3598]"),this.#v.websocket=new WebSocket(r+"?apiBody="+re(e))}this.#v.websocket.addEventListener("message",(r=>{r.data&&"string"==typeof r.data&&B(r.data,"L3618")?.hasOwnProperty("ready")?(this.#v.websocket.addEventListener("message",this.#B),this[n.ReadyFlag]=!0,e(this)):(b&&console.log(_e,"Received non-ready:\n",r.data,"\n",_e),t("[ChannelSocket] received something other than 'ready' as first message"))})),this.#v.websocket.addEventListener("open",(async()=>{this.#v.closed=!1,await this.ready,b&&console.log("++++++++ readyPromise() sending init"),this.#v.websocket.send(le({ready:!0}))})),this.#v.websocket.addEventListener("close",(e=>{this.#v.closed=!0,e.wasClean?e.reason.includes("does not have an owner")?t(`No such channel on this server (${this.channelServer})`):console.log("ChannelSocket() was closed (cleanly): ",e.reason):console.log(`ChannelSocket() was closed (and NOT cleanly: ${e.reason} from ${this.channelServer}`),t("wbSocket() closed before it was opened (?)")})),this.#v.websocket.addEventListener("error",(e=>{this.#v.closed=!0,console.log("ChannelSocket() error: ",e),t("ChannelSocket creation error (see log)")})),setTimeout((()=>{if(this[n.ReadyFlag])b&&console.log("ChannelSocket() - this socket resolved",this);else{const e="[ChannelSocket] - this socket is not resolving (waited 10s) ...";console.warn(e),t(e)}}),1e4)}))}get ready(){return this.channelSocketReady}get ChannelSocketReadyFlag(){return this[n.ReadyFlag]}get status(){if(!this.#v.websocket)return"CLOSED";switch(this.#v.websocket.readyState){case 0:return"CONNECTING";case 1:return"OPEN";case 2:return"CLOSING";default:return"CLOSED"}}set enableTrace(e){this.#k=e,e&&console.log("==== jslib ChannelSocket: Tracing enabled ====")}async send(e){await this.ready;const t=e instanceof Le?e:new Le(this,e);return R(this.#v.websocket,"ChannelSocket.send() called before ready"),this.#v.closed&&(this.#k&&console.info("send() triggered reset of #readyPromise() (normal)"),this.channelSocketReady=this.#C(),this[n.ReadyFlag]=!1),new Promise((async(e,n)=>{await t.ready,await this.ready,this.ChannelSocketReadyFlag||n("ChannelSocket.send() is confused - ready or not?");const r=this.#v.websocket.readyState;switch(r){case 1:this.#k&&console.log("++++++++ ChannelSocket.send() will send message:",Object.assign({},t.message));const s=le(t.message);R(s,"ChannelSocket.send(): failed to assemble message");const a=z(await crypto.subtle.digest("SHA-256",t.message.c));(b||this.#k)&&console.log("++++++++ ChannelSocket.send(): Which has hash:",a),this.#S.set(a,e),this.#v.websocket.send(s),setTimeout((()=>{if(this.#S.has(a)){this.#S.delete(a);const e=`Websocket request timed out (no ack) after ${this.#v.timeout}ms (${a})`;console.error(e),n(e)}else this.#k&&console.log("++++++++ ChannelSocket.send() completed sending"),e("success")}),this.#v.timeout);break;case 0:case 2:case 3:n("socket not OPEN - it is "+(0===r?"CONNECTING":2===r?"CLOSING":"CLOSED"));break;default:I("ChannelSocket",`socket in unknown state (${r})`)}}))}}n=Ne,r([function(e,t,n){if(n&&n.value){const e=n.value;n.value=function(...t){for(let e of t){const t=e.constructor.name;"string"==typeof(n=t)&&Ce.includes(n)&&R(Re(e,t),`invalid parameter: ${e} (expecting ${t})`)}var n;return e.call(this,...t)}}}],Ne.prototype,"send",null);class He{version="2";#E="b";#K;#A;#P;shardServer;iv;salt;fileName;dateAndTime;fileType;lastModified;actualSize;savedSize;constructor(e){const{version:t,type:n,id:r,key:s,verification:a,iv:o,salt:i,fileName:c,dateAndTime:l,fileType:h,lastModified:d,actualSize:y,savedSize:u}=e;if(n&&(this.#E=n),t)this.version=t;else if(s&&r)if(X(s)&&X(r))this.version="2";else{if(!M.test(s)||!M.test(r))throw new Error("Unable to determine version from key and id");this.version="1"}else this.version="2";r&&(this.id=r),s&&(this.key=s),a&&(this.verification=a),this.iv=o,this.salt=i,this.fileName=c,this.dateAndTime=l,this.fileType=h,this.lastModified=d,this.actualSize=y,this.savedSize=u}set id_binary(e){if(!e)throw new Error("Invalid id_binary");if(32!==e.byteLength)throw new Error("Invalid id_binary length");this.#K=e,Object.defineProperty(this,"id64",{get:()=>z(this.#K),enumerable:!1,configurable:!1}),Object.defineProperty(this,"id32",{get:()=>re(this.#K),enumerable:!1,configurable:!1})}set key_binary(e){if(!e)throw new Error("Invalid key_binary");if(32!==e.byteLength)throw new Error("Invalid key_binary length");this.#A=e,Object.defineProperty(this,"key64",{get:()=>z(this.#A),enumerable:!1,configurable:!1}),Object.defineProperty(this,"key32",{get:()=>re(this.#A),enumerable:!1,configurable:!1})}set id(e){if("string"==typeof e){if("1"===this.version){if(!M.test(e))throw new Error("Requested version 1, but id is not b64");this.id_binary=$(e)}else if("2"===this.version){if(!X(e))throw new Error("Requested version 2, but id is not b62");this.id_binary=se(e)}}else{if(!(e instanceof ArrayBuffer))throw new Error("Invalid ID type");if(32!==e.byteLength)throw new Error("Invalid ID length");this.id_binary=e}}set key(e){if("string"==typeof e){if("1"===this.version){if(!M.test(e))throw new Error("Requested version 1, but key is not b64");this.#A=$(e)}else if("2"===this.version){if(!X(e))throw new Error("Requested version 2, but key is not b62");this.#A=se(e)}}else{if(!(e instanceof ArrayBuffer))throw new Error("Invalid key type");if(32!==e.byteLength)throw new Error("Invalid key length");this.#A=e}}get id(){if(R(this.#K,"object handle id is undefined"),"1"===this.version)return z(this.#K);if("2"===this.version)return re(this.#K);throw new Error("Invalid or missing version (internal error, should not happen)")}get key(){if(R(this.#A,"object handle key is undefined"),"1"===this.version)return z(this.#A);if("2"===this.version)return re(this.#A);throw new Error("Invalid or missing version (internal error, should not happen)")}get id64(){throw new Error("Invalid id_binary")}get id32(){throw new Error("Invalid id_binary")}get key64(){throw new Error("Invalid key_binary")}get key32(){throw new Error("Invalid key_binary")}set verification(e){this.#P=e}get verification(){return R(this.#P,"object handle verification is undefined"),this.#P}get type(){return this.#E}}class Ge{#I;constructor(e){this.#I=Promise.resolve(e).then((e=>{const t=e;return R("string"==typeof t,"StorageApi() constructor requires a string (for storageServer)"),t}))}async getStorageServer(){return this.#I}#R(e){const t=e.byteLength;let n;n=t+4<4096?4096:t+4<1048576?2**Math.ceil(Math.log2(t+4)):1048576*Math.ceil((t+4)/1048576);let r=D(e,new Uint8Array(n-t).buffer);return new DataView(r).setUint32(n-4,t),v&&console.log("#padBuf bytes:",r.slice(-4)),r}#D(e){const t=e.slice(-4);var n=new DataView(t).getUint32(0);const r=new DataView(t).getUint32(0,!0);return r<n&&(v&&console.warn("#unpadData - size of shard encoded as little endian (fixed upon read)"),n=r),v&&console.log(`#unpadData - size of object is ${n}`),e.slice(0,n)}#M(e,t){return new Promise(((n,r)=>{try{Me.importKey("raw",e,"PBKDF2",!1,["deriveBits","deriveKey"]).then((e=>{crypto.subtle.deriveKey({name:"PBKDF2",salt:t,iterations:1e5,hash:"SHA-256"},e,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]).then((e=>{n(e)}))}))}catch(e){r(e)}}))}#_(e,t){return new Promise((async(n,r)=>{A(await this.getStorageServer()+"/api/v2/storeRequest?name="+re(e)+"&type="+t).then((e=>e.arrayBuffer())).then((e=>{const t=ye(e).payload;n({salt:t.salt,iv:t.iv})})).catch((e=>{console.warn(`**** ERROR: ${e}`),r(e)}))}))}async#T(e,t,n,r,s,a,o){return new Promise((async(i,c)=>{try{const l=await this.#M(n,o),h=await Me.encrypt(e,l,{iv:a}),d=await s.getStorageToken(h.byteLength),y=await this.storeObject(r,t,a,o,d,h);y.error&&c(`storeObject() failed: ${y.error}`),y.image_id!=t&&c(`received imageId ${y.image_id} but expected ${t}`),i(y.verification_token)}catch(e){const t=`storeObject() failed: ${e}`;console.error(t),c(t)}}))}storeObject(e,t,n,r,s,a){return new Promise((async(o,i)=>{if("string"!=typeof e){const e="NEW in 1.2.x - storeData() and storeObject() have switched places, you probably meant to use storeData()";console.error(e),i("errMsg")}A(await this.getStorageServer()+"/api/v2/storeData?type="+e+"&key="+t,{method:"POST",body:le({iv:n,salt:r,image:a,storageToken:s,vid:crypto.getRandomValues(new Uint8Array(48))})}).then((e=>(e.ok||i("response from storage server was not OK"),e.json()))).then((e=>{o(e)})).catch((e=>{i(e)}))}))}storeData(e,t,n){return new Promise(((r,s)=>{if("string"==typeof e){const e="NEW in 1.2.x - storeData() and storeObject() have switched places, you probably meant to use storeObject()";console.error(e),s("errMsg")}e instanceof Uint8Array&&(v&&console.log("converting Uint8Array to ArrayBuffer"),e=new Uint8Array(e).buffer),e instanceof ArrayBuffer||"ArrayBuffer"==e.constructor.name||(v&&console.log("buf must be an ArrayBuffer:"),console.log(e),s("buf must be an ArrayBuffer"));const a=e.byteLength,o=n instanceof $e?n:new $e(n),i=this.#R(e);Me.generateIdKey(i).then((e=>{this.#_(e.id_binary,t).then((n=>{const s=re(e.id_binary),c=re(e.key_material),l={[Pe]:!0,version:"2",type:t,id:s,key:c,iv:n.iv,salt:n.salt,actualSize:a,verification:this.#T(i,s,e.key_material,t,o,n.iv,n.salt)};r(l)})).catch((e=>s(e)))}))}))}#O(e,t){return new Promise(((n,r)=>{try{let t=B(Me.ab2str(new Uint8Array(e)),"L3062");t.error&&r(`#processData() error: ${t.error}`)}catch(e){}finally{const r=ye(e).payload;b&&(console.log("Payload (#processData) is:"),console.log(r));const a=new Uint8Array(r.iv),o=new ArrayBuffer(r.salt),i=t.iv?"string"==typeof t.iv?$(t.iv):t.iv:void 0,c=t.salt?"string"==typeof t.salt?$(t.salt):t.salt:void 0;var s;if(i&&!E(a,i)&&(console.error("WARNING: nonce from server differs from local copy"),console.log(`object ID: ${t.id}`),console.log(` local iv: ${z(i)}`),console.log(`server iv: ${z(r.iv)}`)),c&&!E(o,c)&&(console.error("WARNING: salt from server differs from local copy (will use server)"),t.salt?"string"==typeof t.salt?(console.log("h.salt is in string form (unprocessed):"),console.log(t.salt)):(console.log("h.salt is in arrayBuffer or Uint8Array"),console.log("h.salt as b64:"),console.log(z(t.salt)),console.log("h.salt unprocessed:"),console.log(t.salt)):console.log("h.salt is undefined"),console.log("handleSalt as b64:"),console.log(z(c)),console.log("handleSalt unprocessed:"),console.log(c)),v&&(console.log("will use nonce and salt of:"),console.log(`iv: ${z(a)}`),console.log(`salt : ${z(o)}`)),"1"===t.version)s=$(t.key);else{if("2"!==t.version)throw new Error("Invalid or missing version (internal error, should not happen)");s=se(t.key)}this.#M(s,o).then((e=>{const t=r.image;v&&(console.log("data.image:      "),console.log(r.image),console.log("encrypted_image: "),console.log(t)),Me.unwrap(e,{c:t,iv:a}).then((e=>{const t=this.#D(e);b&&(console.log("#processData(), unwrapped img: "),console.log(t)),n(t)}))}))}}))}async#j(e,t,n,r){const s={method:"GET"};return new Promise((async(a,o)=>{A(e+t,s).then((e=>e.ok?e.arrayBuffer():null)).then((e=>null===e?null:this.#O(e,n))).then((e=>{null===e&&a(null),a("string"===r?Me.ab2str(new Uint8Array(e)):e)})).catch((e=>null))}))}fetchData(e,t="arrayBuffer"){return new Promise((async(n,r)=>{const s=new He(e);s||r("SBObjectHandle is null or undefined");const a=await s.verification,o=await this.getStorageServer()+"/api/v2";b&&console.log("fetchData(), fetching from server: "+o);const i="/fetchData?id="+s.id+"&type="+s.type+"&verification_token="+a,c=await this.#j(o,i,s,t);null!==c?(b&&console.log(`[fetchData] success: fetched from '${o}'`,c),n(c)):r("fetchData() failed")}))}}r([me],Ge.prototype,"getStorageServer",null);class ze{#x;#L;#U=s;#F;sbFetch=A;constructor(e,t,n){console.warn(`==== CREATING Snackabra object generation: ${this.#U} ====`),R("string"==typeof e,"[Snackabra] Invalid parameter type for constructor"),t&&!0===t&&(b=!0),b&&n&&!0===n&&(v=!0),b&&console.warn("++++ Snackabra constructor: setting DBG to TRUE ++++"),v&&console.warn("++++ Snackabra constructor: ALSO setting DBG2 to TRUE (verbose) ++++"),this.#x=e,this.#L=new Ge(new Promise(((e,t)=>{A(this.#x+"/api/v2/info").then((e=>(e.ok||t("response from channel server was not OK"),e.json()))).then((n=>{n.error?t(`fetching storage server name failed: ${n.error}`):(this.#F=n,b&&console.log("Channel server info:",this.#F)),R(n.storageServer,"Channel server did not provide storage server name, cannot initialize"),e(n.storageServer)})).catch((e=>{t(e)}))})))}attach(e){return new Promise(((t,n)=>{e.channelId?(e.channelServer?e.channelServer!==this.#x&&n("SBChannelHandle channelId does not match channelServer"):e.channelServer=this.#x,t(new $e(e))):n("SBChannelHandle missing channelId")}))}create(e){return R(null!==e,"[create channel] Invalid parameter (null)"),new Promise((async(t,n)=>{try{var r;if(e instanceof $e){const t=e;await t.ready,t.channelServer||(t.channelServer=this.#x),r=await t.getStorageToken(a)}else try{r=i(e)}catch(e){return void n("Invalid parameter to create() - need a token or a budget channel")}R(r,"[create channel] Failed to get storage token for the provided channel");const s=await(new $e).ready;s.channelServer=this.#x,s.create(r).then((e=>{t(e)})).catch((e=>{n(e)}))}catch(e){const t=`Creating channel did not succeed: ${e}`;console.error(t),n(t)}}))}connect(e,t){if(R(e&&e.channelId&&e.userPrivateKey,"[connect] Invalid parameter (missing info)"),e.channelServer&&e.channelServer!==this.#x)throw new Error("SBChannelHandle channelId does not match channelServer (use a different Snackabra object)");const n={...e,[Ke]:!0,channelServer:this.#x};return b&&console.log("++++ Snackabra.connect() ++++",n),t?new Ne(n,t):new $e(n)}get storage(){return this.#L}async getStorageServer(){return this.#L.getStorageServer()}get crypto(){return Me}get version(){return this.#U}}r([me],ze.prototype,"storage",null),r([me],ze.prototype,"getStorageServer",null);var Ve={Snackabra:ze,SBMessage:Le,Channel:$e,SBCrypto:ve,SB384:Oe,arrayBufferToBase64:z,base64ToArrayBuffer:$,arrayBufferToBase62:re,base62ToArrayBuffer:se,sbCrypto:Me,version:s,setDebugLevel:m};return globalThis.SB||(globalThis.SB=Ve),console.warn(`==== SNACKABRA jslib (re)loaded, version '${globalThis.SB.version}' ====`),t})()));