!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.SB=t():e.SB=t()}(self,(()=>(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{Channel:()=>$e,ChannelSocket:()=>ze,DeepHistory:()=>B,HistoryTree:()=>A,HistoryTreeNode:()=>E,KeyPrefix:()=>ve,Memoize:()=>Ae,MessageBus:()=>P,MessageQueue:()=>I,NEW_CHANNEL_MINIMUM_BUDGET:()=>s,Protocol_AES_GCM_256:()=>Le,Protocol_ECDH:()=>je,Ready:()=>Be,SB:()=>Ve,SB384:()=>Fe,SBApiFetch:()=>O,SBChannelKeys:()=>Oe,SBCrypto:()=>Ee,SBError:()=>K,SBEventTarget:()=>He,SBStorageTokenPrefix:()=>i,Snackabra:()=>Ue,StorageApi:()=>Ne,_check_SBChannelData:()=>d,_check_SBChannelHandle:()=>l,_check_SBObjectHandle:()=>b,_check_SBStorageToken:()=>o,arrayBufferToBase62:()=>re,arrayBufferToBase64url:()=>G,assemblePayload:()=>ye,b32decode:()=>de,b32encode:()=>le,b32process:()=>he,b62regex:()=>J,base62:()=>W,base62ToArrayBuffer:()=>ae,base62ToBase64:()=>se,base62regex:()=>X,base64ToArrayBuffer:()=>q,base64ToBase62:()=>ie,base64url:()=>U,compareBuffers:()=>D,extractPayload:()=>we,generateRandomString:()=>F,getRandomValues:()=>_,hydrateKey:()=>Ce,isBase62Encoded:()=>Q,jsonOrString:()=>R,jsonParseWrapper:()=>M,msgTtlToSeconds:()=>v,msgTtlToString:()=>S,sbCrypto:()=>xe,setDebugLevel:()=>w,stringify_SBObjectHandle:()=>C,stripChannelMessage:()=>p,validate_ChannelApiBody:()=>y,validate_ChannelMessage:()=>g,validate_Message:()=>f,validate_SBChannelData:()=>u,validate_SBChannelHandle:()=>h,validate_SBObjectHandle:()=>k,validate_SBStorageToken:()=>c});var n,r,a=function(e,t,n,r){var a,s=arguments.length,i=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var o=e.length-1;o>=0;o--)(a=e[o])&&(i=(s<3?a(i):s>3?a(t,n,i):a(t,n))||i);return s>3&&i&&Object.defineProperty(t,n,i),i};const s=8388608,i="LM2r";function o(e){return Object.getPrototypeOf(e)===Object.prototype&&e.hash&&"string"==typeof e.hash&&e.hash.length>0&&(!e.size||Number.isInteger(e.size)&&e.size>0)&&(!e.motherChannel||"string"==typeof e.motherChannel)&&(!e.created||Number.isInteger(e.created))&&(!e.used||"boolean"==typeof e.used)}function c(e){if(e){if(e[Re])return e;if("string"==typeof e&&e.slice(0,4)===i)return{[Re]:!0,hash:e};if(o(e))return{...e,[Re]:!0};throw new K("invalid SBStorageToken")}throw new K("invalid SBStorageToken (null or undefined)")}function l(e){return!!e&&Object.getPrototypeOf(e)===Object.prototype&&e.userPrivateKey&&"string"==typeof e.userPrivateKey&&e.userPrivateKey.length>0&&(!e.channelId||"string"==typeof e.channelId&&43===e.channelId.length)&&(!e.channelServer||"string"==typeof e.channelServer)&&(!e.channelData||d(e.channelData))}function h(e){if(e){if(e[Me])return e;if(l(e))return{...e,[Me]:!0};throw new K("invalid SBChannelHandle")}throw new K("invalid SBChannelHandle (null or undefined)")}function d(e){return Object.getPrototypeOf(e)===Object.prototype&&e.channelId&&43===e.channelId.length&&e.ownerPublicKey&&"string"==typeof e.ownerPublicKey&&e.ownerPublicKey.length>0&&(!e.storageToken||c(e.storageToken))}function u(e){if(e){if(d(e))return e;throw new K("invalid SBChannelData")}throw new K("invalid SBChannelData (null or undefined)")}function f(e){if(e){if(void 0!==e.body&&null!==e.body&&e.channelId&&"string"==typeof e.channelId&&43===e.channelId.length&&e.sender&&"string"==typeof e.sender&&43===e.sender.length&&e.senderPublicKey&&"string"==typeof e.senderPublicKey&&e.senderPublicKey.length>0&&e.senderTimestamp&&Number.isInteger(e.senderTimestamp)&&e.serverTimestamp&&Number.isInteger(e.serverTimestamp)&&e._id&&"string"==typeof e._id&&75===e._id.length)return e;throw new K("invalid Message")}throw new K("invalid Message (null or undefined)")}function y(e){if(e){if(e[Ke])return e;if(e.channelId&&43===e.channelId.length&&e.path&&"string"==typeof e.path&&e.path.length>0&&e.userId&&"string"==typeof e.userId&&43===e.userId.length&&e.userPublicKey&&e.userPublicKey.length>0&&(!e.isOwner||"boolean"==typeof e.isOwner)&&(!e.apiPayloadBuf||e.apiPayloadBuf instanceof ArrayBuffer)&&e.timestamp&&Number.isInteger(e.timestamp)&&e.sign&&e.sign instanceof ArrayBuffer)return{...e,[Ke]:!0};throw new K("invalid ChannelApiBody")}throw new K("invalid ChannelApiBody (null or undefined)")}function g(e){if(e){if(e[Ie])return e;if(!(e.f&&"string"==typeof e.f&&43===e.f.length&&e.c&&e.c instanceof ArrayBuffer&&e.ts&&Number.isInteger(e.ts)&&e.iv&&e.iv instanceof Uint8Array&&12===e.iv.length&&e.s&&e.s instanceof ArrayBuffer)||void 0!==e.cs&&"string"!=typeof e.cs||e.sts&&!Number.isInteger(e.sts)||e.salt&&!(e.salt instanceof ArrayBuffer&&16===e.salt.byteLength)||e._id&&("string"!=typeof e._id||86!==e._id.length)||e.ready&&"boolean"!=typeof e.ready||e.timestampPrefix&&("string"!=typeof e.timestampPrefix||26!==e.timestampPrefix.length)||e.channelId&&("string"!=typeof e.channelId||43!==e.channelId.length)||e.i2&&("string"!=typeof e.i2||!/^[a-zA-Z0-9_]{4}$/.test(e.i2))||!(void 0===e.ttl||Number.isInteger(e.ttl)&&e.ttl>=0&&e.ttl<=15))throw new K("invalid ChannelMessage");return{...e,[Ie]:!0}}throw new K("invalid ChannelMessage (null or undefined)")}function p(e,t=!1){const n={};if(void 0===e.f)throw new K("ERROR: missing 'f' ('from') in message");if(n.f=e.f,void 0===e.c)throw new K("ERROR: missing 'ec' ('encrypted contents') in message");if(n.c=e.c,void 0!==e.iv)n.iv=e.iv;else if(1==!e.stringMessage)throw new K("ERROR: missing 'iv' ('nonce') in message");if(void 0===e.salt)throw new K("ERROR: missing 'salt' in message");if(n.salt=e.salt,void 0!==e.s)n.s=e.s;else if(1==!e.stringMessage)throw new K("ERROR: missing 's' ('signature') in message");if(void 0===e.ts)throw new K("ERROR: missing 'ts' ('timestamp') in message");if(n.ts=e.ts,void 0!==e.sts)n.sts=e.sts;else if(t)throw new K("ERROR: missing 'sts' ('servertimestamp') in message");return void 0!==e.ttl&&15!==e.ttl&&(n.ttl=e.ttl),void 0!==e.t&&(n.t=e.t),void 0!==e.i2&&"____"!==e.i2&&(n.i2=e.i2),void 0!==e.cs&&(n.cs=e.cs),n}function w(e,t){}const v=[0,-1,-1,60,300,1800,14400,129600,864e3,-1,-1,-1,-1,-1,1/0],S=["Ephemeral","<reserved>","<reserved>","One minute","Five minutes","Thirty minutes","Four hours","36 hours","10 days","<reserved>","<reserved>","<reserved>","<reserved>","<reserved>","Permastore (no TTL)"],m="3";if("undefined"==typeof WeakRef){class e{_target;constructor(e){this._target=e}deref(){return this._target}}Object.defineProperty(e.prototype,Symbol.toStringTag,{value:"WeakRef",configurable:!0}),globalThis.WeakRef=e}function b(e){return Object.getPrototypeOf(e)===Object.prototype&&(!e.version||e.version===m)&&e.id&&"string"==typeof e.id&&43===e.id.length&&(!e.key||"string"==typeof e.key&&43===e.key.length)&&(!e.verification||"string"==typeof e.verification||"object"==typeof e.verification)&&(!e.iv||"string"==typeof e.iv||e.iv instanceof Uint8Array)&&(!e.salt||"string"==typeof e.salt||e.salt instanceof ArrayBuffer)}function k(e){if(e){if(e[Te])return e;if(b(e))return{...e,[Te]:!0};throw new K("invalid SBObjectHandle")}throw new K("invalid SBObjectHandle (null or undefined)")}async function C(e){return e.iv&&(e.iv="string"==typeof e.iv?e.iv:re(e.iv)),e.salt&&(e.salt="string"==typeof e.salt?e.salt:re(e.salt)),e.verification=await e.verification,k(e)}"=".repeat(76);class E{root;isLeaf;children=[];value=void 0;from=void 0;to=void 0;isFull=!1;frozenHeight=void 0;frozenChunkId=void 0;constructor(e,t=!1){this.root=e,this.isLeaf=t}async insert(e,t,n=t){if(this.isFull||void 0!==this.value)throw new Error("Should not be inserting here");if(this.isLeaf){const r=new E(this.root);return r.value=e,r.from=t,r.to=n,(!this.from||t<this.from)&&(this.from=t),(!this.to||n>this.to)&&(this.to=n),r.isFull=!0,this.children.push(r),this.children.length===this.root.branchFactor&&(this.isFull=!0,this.frozenHeight=this.nodeHeight(),this.frozenChunkId=await this.root.freeze({type:"leaf",valuesArray:this.children.map((e=>e.value))}),this.children=[]),!0}if(0===this.children.length||this.children[this.children.length-1].isFull){if(this.children.length===this.root.branchFactor)throw new Error("Internal Error (L100)");const r=new E(this.root,!0);return await r.insert(e,t,n),this.children.push(r),(!this.from||t<this.from)&&(this.from=t),(!this.to||n>this.to)&&(this.to=n),!0}if(await this.children[this.children.length-1].insert(e,t,n),this.from=t<this.from?t:this.from,this.to=n>this.to?n:this.to,this.children[this.children.length-1].isFull&&this.children.length===this.root.branchFactor){let e=0;for(;this.children[e].nodeHeight()===this.children[e+1].nodeHeight();)if(++e==this.children.length-1)return this.isFull=!0,this.frozenHeight=this.nodeHeight(),this.frozenChunkId=await this.root.freeze({type:"node",frozenChunkIdArray:this.children.map((e=>e.frozenChunkId))}),this.children=[],!0;const t=new E(this.root);return t.children=this.children.splice(e+1),t.from=t.children[0].from,t.to=t.children[t.children.length-1].to,this.children.push(t),!0}return!0}nodeHeight(){return void 0!==this.frozenHeight?this.frozenHeight:void 0!==this.value?0:1+Math.max(...this.children.map((e=>e.nodeHeight())))}async traverse(e,t=!1){t||await e(this);var n=this.children;if(void 0!==this.frozenChunkId){const e=await this.root.deFrost(this.frozenChunkId);if("leaf"===e.type)n=e.valuesArray.map((e=>{const t=new E(this.root,!0);return t.value=e,t}));else{if("node"!==e.type)throw console.error("Frozen type error, contents of frozen:\n",e),new Error("Unknown frozen type");n=e.frozenChunkIdArray.map((e=>{const t=new E(this.root);return t.frozenChunkId=e,t}))}}if(t)for(let r=n.length-1;r>=0;r--)await n[r].traverse(e,t);else for(const r of n)await r.traverse(e,t);t&&await e(this)}async _callbackValue(e,t){void 0!==e.value&&void 0!==t&&await t(e.value)}async traverseValues(e,t=!1){return this.traverse((async t=>await this._callbackValue(t,e)),t)}export(){let e={from:this.from,to:this.to};if(void 0!==this.frozenChunkId)e={...e,frozenChunkId:this.frozenChunkId,frozenHeight:this.frozenHeight};else if(this.value)e={...e,value:this.value};else{if(void 0!==this.frozenHeight)throw new Error("Should not have a frozen height here");e={...e,isFull:this.isFull,children:this.children.map((e=>e.export()))}}return e}static import(e,t){const n=new E(e);return n.from=t.from,n.to=t.to,void 0!==t.frozenChunkId?(n.frozenChunkId=t.frozenChunkId,n.frozenHeight=t.frozenHeight,n.isFull=!0):void 0!==t.value?(n.isLeaf=!0,n.isFull=!0,n.value=t.value):(n.isFull=t.isFull,n.children=t.children.map((t=>E.import(e,t)))),n}}class A{branchFactor;root=new E(this);constructor(e,t){this.branchFactor=e,t&&(this.root=E.import(this,t))}async insertValue(e,t,n){if(this.root.isFull){const e=new E(this);e.from=this.root.from,e.to=this.root.to,e.children.push(this.root),this.root=e}return this.root.insert(e,t,n)}async traverse(e,t=!1){return this.root.traverse(e,t)}async traverseValues(e,t=!1){return this.root.traverseValues(e,t)}export(){return this.root?this.root.export():{}}}class B extends A{channel;budget;static MESSAGE_HISTORY_BRANCH_FACTOR=32;static MAX_MESSAGE_SET_SIZE=512;static MAX_MESSAGE_HISTORY_SHARD_SIZE=4128768;SB;constructor(e,t,n){super(B.MESSAGE_HISTORY_BRANCH_FACTOR,e),this.channel=t,this.budget=n,this.SB=new Ue(this.channel.channelServer)}async storeData(e){if(!this.budget||!this.SB)throw new Error("Budget required to freeze data (this DeepHistory is operating in read-only mode)");const t=await this.SB.storage.storeData(e,this.budget),n=await C(t);return{id:n.id,key:n.key,verification:n.verification}}async fetchData(e){if(!this.SB)throw new Error("SB required to fetch data");return(await this.SB.storage.fetchData(e)).payload}async freeze(e){return this.storeData(e)}async deFrost(e){return this.fetchData(e)}async traverseMessages(e,t=!1){if(!this.channel)throw new Error("Channel required to traverse messages");await this.traverse((async n=>{if(n.value){const r=await this.fetchData(n.value.shard);if(!(r instanceof Map))throw new Error("Expected a map");const a=Array.from(r.keys());a.sort(),t&&a.reverse();for(const t of a){const n=r.get(t);if(n){const t=await this.channel.extractMessage(n);t&&(e?await e(t):console.log(t))}}}}),t),console.log(De)}}class P{bus={};#e(e){return this.bus[e]||(this.bus[e]=[])}subscribe(e,t){this.#e(e).push(t)}unsubscribe(e,t){let n=-1;this.bus[e]?-1!=(n=this.bus[e].findLastIndex((e=>e==t)))?this.bus[e].splice(n,1):console.info("fyi: asked to remove a handler but it's not there"):console.info("fyi: asked to remove a handler but the event is not there")}publish(e,...t){for(const n of this.#e("*"))n(e,...t);for(const n of this.#e(e))n(...t)}}class I{queue=[];resolve=null;reject=null;closed=!1;error=null;enqueue(e){if(this.closed)throw new K("[MessageQueue] Error, trying to enqueue to closed queue");this.resolve?(this.resolve(e),this.resolve=null,this.reject=null):this.queue.push(e)}async dequeue(){if(this.queue.length>0){const e=this.queue.shift();return this.closed?Promise.reject(e):Promise.resolve(e)}return this.closed?null:new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}isEmpty(){return 0===this.queue.length}close(e){this.closed=!0,this.error=e||"close",this.reject&&this.reject(this.error)}async drain(e){for(this.closed||this.close(e||"drain");this.queue.length>0;)await new Promise((e=>setTimeout(e,0)))}}class K extends Error{constructor(e){super(e),this.name=this.constructor.name,"function"==typeof Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error(e).stack}}function M(e,t,n){for(;e&&"string"==typeof e;)try{e=JSON.parse(e,n)}catch(n){throw new K(`JSON.parse() error${t?` at ${t}`:""}: ${n}\nString (possibly nested) was: ${e}`)}return e}const T=/^\s*[\[\{].*[\]\}]\s*$/;function R(e){if(null===e)return null;if("string"!=typeof e)return null;if(!T.test(e))return e;try{return JSON.parse(e)}catch(e){return null}}const x=e=>e instanceof ArrayBuffer?new DataView(e):new DataView(e.buffer,e.byteOffset,e.byteLength);function D(e,t){if(typeof e!=typeof t)return!1;if(null==e||null==t)return!1;const n=x(e),r=x(t);if(n.byteLength!==r.byteLength)return!1;for(let e=0;e<n.byteLength;e++)if(n.getUint8(e)!==r.getUint8(e))return!1;return!0}function _(e){if(e.byteLength<4096)return crypto.getRandomValues(e);{N(!(e.byteLength%1024),"getRandomValues(): large requested blocks must be multiple of 1024 in size");let t=0;try{for(t=0;t<e.byteLength;t+=1024){let n=new Uint8Array(1024);crypto.getRandomValues(n),e.set(n,t)}}catch(e){console.log(`got an error on index i=${t}`),console.log(e),console.trace()}return e}}function F(e=16){const t="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",n=t+"0123456789";return Array.from({length:e},((e,r)=>0===r?t.charAt(Math.floor(52*Math.random())):n.charAt(Math.floor(Math.random()*n.length)))).join("")}async function L(e,t){const n=new AbortController,r=Symbol("fetch");Ue.activeFetches.set(r,n);try{const r=await fetch(e,{...t,signal:n.signal});if(Ue.isShutdown)throw await(r.body?.cancel("shutDown")),new K("Fetch aborted (shutDown)");return r}catch(r){if(r instanceof K)throw r;const a=`${r}`;if(-1===a.indexOf("connection closed before message completed")&&-1===a.indexOf("Connection reset by peer")&&-1===a.indexOf("The connection was reset")&&-1===a.indexOf("The server closed the connection")&&-1===a.indexOf("Please try sending the request again."))throw new K(`[SBFetch] Error performing fetch() (this might be normal): ${r}`);console.warn(`... got error ('${a}'), retrying fetch() once again`);try{return await new Promise((r=>{setTimeout((()=>{r(fetch(e,{...t,signal:n.signal}))}),0)}))}catch(e){throw console.error("... got an error on retrying fetch()"),new K(`[SBFetch] Error performing fetch() (after RETRY): ${r}`)}}finally{Ue.activeFetches.delete(r)}}var j=L;async function O(e,t){let n;try{if(n=await j(e,t),!n)throw new K("[SBApiFetch] Server did not respond (might be expected)");if(!n.ok){const e=await n.text();let t="[SBApiFetch] Server responded with error\n";throw n.status&&(t+=`  Status code: ('${n.status}')\n`),n.statusText&&(t+=`  Status text: ('${n.statusText}')\n`),e&&(t+=`  Error msg:   ('${e}')\n`),new K(t)}const a=n.headers.get("content-type");var r;if(!a)throw new K("[SBApiFetch] No content header in server response");if(-1!==a.indexOf("application/json"))r=M(await n.json(),"L489");else{if(-1===a.indexOf("application/octet-stream"))throw-1!==a.indexOf("text/plain")?(r=await n.text(),new K(`[SBApiFetch] Server responded with text/plain (?):\n('${r}')`)):new K(`[SBApiFetch] Server responded with unknown content-type header ('${a}')`);r=we(await n.arrayBuffer()).payload}if(!r||r.error||!1===r.success){let e="[SBApiFetch] No server response, or cannot parse, or error in response";throw n.status&&(e+=" ["+n.status+"]"),r?.error&&(e+=": "+r.error),new K(e)}return r}catch(e){throw n&&n.body&&!n.body.locked&&await n.body.cancel(),e instanceof K?e:new K(`[SBApiFetch] caught error: ${e}`)}}function $(e){const t=" *ErrorStart* ",n=" *ErrorEnd* ";return e instanceof K?e:e instanceof Error?new K(t+e.message+n):new K(t+String(e)+n)}function z(e,t){throw new K("[_sb_exception] << SB lib error ("+e+": "+t+") >>")}function N(e,t){if(!e)throw new K(` <<<<[_sb_assert] assertion failed: '${t}'>>>> `)}function H(e){let t=0;for(const n of e)t+=n.byteLength;const n=new Uint8Array(t);let r=0;for(const t of e)n.set(new Uint8Array(t),r),r+=t.byteLength;return n.buffer}const U="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",V=/^([A-Za-z0-9\-_]*)(={0,2})$/;function G(e){const t=e instanceof ArrayBuffer?new Uint8Array(e):e;let n="";for(let e=0;e<t.length;e+=3){const r=t[e],a=t[e+1],s=t[e+2];n+=U[r>>2]+U[(3&r)<<4|a>>4]+(void 0!==a?U[(15&a)<<2|s>>6]:"")+(void 0!==s?U[63&s]:"")}return n}function q(e){if(e=e.replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,""),!V.test(e))throw new K(`invalid character in b64 string (after cleanup: '${e}')`);const t=e.length,n=new Uint8Array(3*t/4);for(let r=0,a=0;r<t;r+=4){const[t,s,i,o]=[e[r],e[r+1],e[r+2],e[r+3]].map((e=>U.indexOf(e)));n[a++]=t<<2|s>>4,-1!==i&&(n[a++]=(15&s)<<4|i>>2),-1!==o&&(n[a++]=(3&i)<<6|o)}return n}const W="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",Z=W[0],J=/^[A-Za-z0-9]*$/,X=J;function Q(e){return J.test(e)}const Y=32,ee=new Map,te=new Map;for(let e=1;e<=Y;e++){const t=Math.ceil(8*e/Math.log2(62));ee.set(e,t),te.set(t,e)}const ne=ee.get(Y);function re(e){function t(e,t){let n="",r=0n;for(const t of e)r=r<<8n|BigInt(t);for(;r>0n;r/=62n)n=W[Number(r%62n)]+n;return n.padStart(ee.get(t),Z)}if(null==e)throw new K("arrayBufferToBase62: buffer is null or undefined");const n=e instanceof ArrayBuffer?new Uint8Array(e):e;let r="";for(let e,a=n.byteLength,s=0;a>0;s+=e,a-=e)e=a>=Y?Y:a,r+=t(n.slice(s,s+e),e);return r}function ae(e){if(!J.test(e))throw new K("base62ToArrayBuffer32: must be alphanumeric (0-9A-Za-z).");function t(e,t){try{let n=0n,r=new Uint8Array(t);for(let t=0;t<e.length;t++)n=62n*n+BigInt(W.indexOf(e[t]));if(n>2n**BigInt(8*t)-1n)throw new K("base62ToArrayBuffer: Invalid Base62 string.");for(let e=t-1;e>=0;e--,n>>=8n)r[e]=Number(0xffn&n);return r}catch(e){throw new K("base62ToArrayBuffer: Invalid Base62 string.")}}try{let n=0,r=new Uint8Array(6*e.length/8);for(let a,s,i=0;i<e.length;i+=a,n+=s.byteLength)a=Math.min(e.length-i,ne),s=t(e.slice(i,i+a),te.get(a)),r.set(s,n);return r.buffer.slice(0,n)}catch(e){throw e}}function se(e){return G(ae(e))}function ie(e){return re(q(e))}const oe="0123456789ADMRTxQjrEywcLBdHpNufk",ce=new RegExp(`[${oe}.concat(' ')]`);function le(e){const t=oe;if(e<0||e>524287)throw new Error("Input number is out of range. Expected a 19-bit integer.");let n=[e>>14&31,e>>9&31,e>>4&31,15&e];return n[3]|=16&(n[0]^n[1]^n[2]),n.map((e=>t[e])).join("")}function he(e){const t={o:"0",O:"0",i:"1",I:"1",l:"1",z:"2",Z:"2",s:"5",S:"5",b:"6",G:"6",a:"9",g:"9",q:"9",m:"M",t:"T",X:"x",J:"j",e:"E",Y:"y",W:"w",C:"c",P:"p",n:"N",h:"N",U:"u",v:"u",V:"u",F:"f",K:"k"};let n="";for(let r of e)n+=t[r]||r;return n}function de(e){if(!ce.test(e))throw new Error(`Input string contains invalid characters (${e}) - use 'process()'.`);let t=Array.from(e).map((e=>oe.indexOf(e)));return 16&t.reduce(((e,t)=>e^t))?null:16*(32*(32*t[0]+t[1])+t[2])+(15&t[3])}function ue(e){if(null===e)return"0";if(void 0===e)return"u";if(Array.isArray(e))return"a";if(e instanceof ArrayBuffer)return"x";if(e instanceof Uint8Array)return"8";if("boolean"==typeof e)return"b";if(e instanceof DataView)return"v";if(e instanceof Date)return"d";if(e instanceof Map)return"m";if("number"==typeof e)return"number"==typeof(t=e)&&t>=-2147483648&&t<=2147483647&&t%1==0?"i":"n";var t;if(null!==e&&"object"==typeof e&&e.constructor===Object)return"o";if(e instanceof Set)return"t";if("string"==typeof e)return"s";if(e instanceof WeakRef)return"w";if("object"==typeof e&&"function"==typeof e.then)console.error("[getType] Trying to serialize a Promise - did you forget an 'await'?");else{if("object"==typeof e&&"function"==typeof e.toJSON)return"j";console.error("[getType] Unsupported for object:",e)}throw new K("Unsupported type")}function fe(e){try{const t={};let n=0,r=0,a=[];for(const s in e)if(e.hasOwnProperty(s)){const i=e[s],o=ue(i);switch(o){case"o":const e=fe(i);if(!e)throw new K(`Failed to assemble payload for ${s}`);a.push(e);break;case"j":const t=fe(i.toJSON(""));if(!t)throw new K(`Failed to process toJSON for ${s}`);a.push(t);break;case"n":const n=new Uint8Array(8);new DataView(n.buffer).setFloat64(0,i),a.push(n.buffer);break;case"i":const r=new Uint8Array(4);new DataView(r.buffer).setInt32(0,i),a.push(r.buffer);break;case"d":const c=new Uint8Array(8);new DataView(c.buffer).setFloat64(0,i.getTime()),a.push(c.buffer);break;case"b":const l=new Uint8Array(1);l[0]=i?1:0,a.push(l.buffer);break;case"s":const h=(new TextEncoder).encode(i);a.push(h);break;case"x":a.push(i);break;case"8":a.push(i.buffer);break;case"m":const d=new Array;i.forEach(((e,t)=>{d.push([t,e])}));const u=fe(d);if(!u)throw new K(`Failed to assemble payload for ${s}`);a.push(u);break;case"a":const f=new Array;i.forEach((e=>{f.push(e)}));const y=fe(f);if(!y)throw new K(`Failed to assemble payload for ${s}`);a.push(y);break;case"t":const g=new Array;i.forEach((e=>{g.push(e)}));const p=fe(g);if(!p)throw new K(`Failed to assemble payload for ${s}`);a.push(p);break;case"w":case"0":case"u":a.push(new ArrayBuffer(0));break;default:throw console.error(`[assemblePayload] Unsupported type: ${o}`),new K(`Unsupported type: ${o}`)}const c=a[a.length-1].byteLength;n++,t[n.toString()]={n:s,s:r,z:c,t:o},r+=c}const s=(new TextEncoder).encode(JSON.stringify(t));return H([new Uint32Array([s.byteLength]).buffer,s,...a])}catch(e){return console.error(e),null}}function ye(e){const t=fe({ver003:!0,payload:e});return t?H([new Uint8Array([170,187,187,170]),t]):null}function ge(e,t){switch(t){case"o":return pe(e);case"j":try{return JSON.parse((new TextDecoder).decode(e))}catch(t){return pe(e)}case"n":return new DataView(e).getFloat64(0);case"i":return new DataView(e).getInt32(0);case"d":return new Date(new DataView(e).getFloat64(0));case"b":return 1===new Uint8Array(e)[0];case"s":return(new TextDecoder).decode(e);case"a":const n=pe(e);if(!n)throw new K(`Failed to assemble payload for ${t}`);return Object.values(n);case"m":const r=pe(e);if(!r)throw new K(`Failed to assemble payload for ${t}`);const a=new Map;for(const e in r)a.set(r[e][0],r[e][1]);return a;case"t":const s=pe(e);if(!s)throw new K(`Failed to assemble payload for ${t}`);const i=new Set;for(const e in s)i.add(s[e]);return i;case"x":return e;case"8":return new Uint8Array(e);case"0":return null;case"u":return;default:throw new K(`Unsupported type: ${t}`)}}function pe(e){const t="Cannot parse metadata, this is not a well-formed payload";try{const n=new Uint32Array(e.slice(0,4))[0],r=(new TextDecoder).decode(e.slice(4,4+n));let a;try{a=M(r,"L1290")}catch(e){throw new K(t)}const s=4+n,i={};for(let t=1;t<=Object.keys(a).length;t++){const n=t.toString();if(a[n]){const t=a[n],r=t.s,o=t.z,c=t.t,l=e.slice(s+r,s+r+o);i[t.n]=ge(l,c)}else console.log(`found nothing for index ${t}`)}return i}catch(e){if(e instanceof Error&&e.message===t)throw e;throw new K("[extractPayload] exception <<"+e+">> [/extractPayload]")}}function we(e){if(2864429994!==new Uint32Array(e,0,1)[0])throw new K("Invalid payload signature (this is not a payload)");return pe(e.slice(4))}var ve,Se;function me(e){"string"==typeof e&&(e=q(e));const t=new Uint8Array(e);return 1==(1&t[t.length-1])?1:0}function be(e){try{if(e.length<=4)return;const t=e.slice(0,4),n=e.slice(4);switch(t.slice(0,3)){case ve.SBPublicKey:switch(t[3]){case Se.Uncompressed:{const e=ae(n);if(96!==e.byteLength)return;const t=e.slice(48,96);return{x:G(e.slice(0,48)),y:G(t),ySign:me(t)}}case Se.CompressedEven:case Se.CompressedOdd:{const e=t[3]===Se.CompressedEven?0:1,r=ae(n);if(48!==r.byteLength)return;const{x:a,y:s}=_e(G(r),e);return{x:a,y:s,ySign:e}}default:console.error("KeySubPrefix not recognized")}break;case ve.SBPrivateKey:switch(t[3]){case Se.Uncompressed:{const e=ae(n);if(144!==e.byteLength)return;const t=e.slice(48,96);return{x:G(e.slice(0,48)),y:G(t),ySign:me(t),d:G(e.slice(96,144))}}case Se.CompressedEven:case Se.CompressedOdd:{const e=t[3]===Se.CompressedEven?0:1,r=ae(n);if(96!==r.byteLength)return;const a=r.slice(0,48),{x:s,y:i}=_e(G(a),e);return{x:s,y:i,ySign:e,d:G(r.slice(48,96))}}case Se.Dehydrated:return void console.error("parseSB384string() - you need to rehydrate first ('hydrateKey()')");default:console.error("KeySubPrefix not recognized")}break;default:console.error("KeyPrefix not recognized")}return}catch(e){return void console.error("parseSB384string() - malformed input, exception: ",e)}}function ke(e,t,n){if(!e||64!==e.length||!t||64!==t.length||void 0===n)return;const r=new Uint8Array(96);return r.set(q(e),0),r.set(q(t),48),ve.SBPrivateKey+(0===n?Se.CompressedEven:Se.CompressedOdd)+re(r)}function Ce(e,t){if(e.length<=4)return;const n=e.slice(0,4);switch(n.slice(0,3)){case ve.SBPublicKey:return e;case ve.SBPrivateKey:switch(n[3]){case Se.Uncompressed:case Se.CompressedEven:case Se.CompressedOdd:return e;case Se.Dehydrated:{if(!t)return void console.error("hydrateKey() - you need to provide pubKey to hydrate");const n=G(ae(e.slice(4)).slice(0,48)),r=be(t);return r&&r.x&&void 0!==r.ySign?ke(r.x,n,r.ySign):void console.error("hydrateKey() - failed to parse public key")}default:console.error("KeySubPrefix not recognized")}break;default:console.error("KeyPrefix not recognized")}}!function(e){e.SBPublicKey="PNk",e.SBPrivateKey="Xj3",e.SBDehydratedKey="XjZ"}(ve||(ve={})),function(e){e.CompressedEven="2",e.CompressedOdd="3",e.Uncompressed="4",e.Dehydrated="x"}(Se||(Se={}));class Ee{generateIdKey(e){if(!(e instanceof ArrayBuffer))throw new TypeError("Input must be an ArrayBuffer");return new Promise(((t,n)=>{try{crypto.subtle.digest("SHA-512",e).then((e=>{const n=e.slice(0,32),r=e.slice(32);t({idBinary:n,keyMaterial:r})}))}catch(e){n(e)}}))}async generateKeys(){try{return await crypto.subtle.generateKey({name:"ECDH",namedCurve:"P-384"},!0,["deriveKey"])}catch(e){throw new K("generateKeys() exception ("+e+")")}}async importKey(e,t,n,r,a){try{let s;const i={ECDH:{name:"ECDH",namedCurve:"P-384"},AES:{name:"AES-GCM"},PBKDF2:"PBKDF2"};if("jwk"===e){const e=t;if(void 0===e.kty)throw new K("importKey() - invalid JsonWebKey");"ECDH"===e.alg&&(e.alg=void 0),s=await crypto.subtle.importKey("jwk",e,i[n],r,a)}else s=await crypto.subtle.importKey(e,t,i[n],r,a);return s}catch(e){throw new K(`... importKey() error: ${e}:`)}}async exportKey(e,t){return crypto.subtle.exportKey(e,t).catch((()=>{}))}async encrypt(e,t,n){if(null===e)throw new K("no contents");if(!n.iv)throw new K("no nonce");return n.name?N("AES-GCM"===n.name,"Must be AES-GCM (L1951)"):n.name="AES-GCM",crypto.subtle.encrypt(n,t,e)}async wrap(e,t,n,r,a){const s=ye(e),i=crypto.getRandomValues(new Uint8Array(12)),o=await Ue.dateNow(),c=new DataView(new ArrayBuffer(8));return c.setFloat64(0,o),{f:t,c:await xe.encrypt(s,n,{iv:i,additionalData:c}),iv:i,salt:r,s:await xe.sign(a,s),ts:o}}sign(e,t){return crypto.subtle.sign({name:"ECDSA",hash:{name:"SHA-384"}},e,t)}verify(e,t,n){return crypto.subtle.verify({name:"ECDSA",hash:{name:"SHA-384"}},e,t,n)}str2ab(e){return(new TextEncoder).encode(e)}ab2str(e){return new TextDecoder("utf-8").decode(e)}}function Ae(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=`__${e.constructor.name}__${t}__`;if(this.hasOwnProperty(n))return this[n];{const e=r.call(this);return Object.defineProperty(this,n,{configurable:!1,enumerable:!1,writable:!1,value:e}),e}}}}function Be(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=e.constructor.name,a=e.constructor.ReadyFlag;N(a in this,"'readyFlagSymbol' missing yet getter accessed with @Ready pattern (fatal)"),N(this[a],`'${n}.${t}' getter accessed but object not 'ready' (fatal)`);const s=r.call(this);return N(null!=s,`'${n}.${t}' getter accessed but return value will be NULL (fatal)`),s}}}function Pe(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=e.constructor.name;return"owner"in this&&N(!0===this.owner,`${t} getter or method accessed for object ${n} but callee is not channel owner`),r.call(this)}}}const Ie=Symbol("SB_CHANNEL_MESSAGE_SYMBOL"),Ke=Symbol("SB_CHANNEL_API_BODY_SYMBOL"),Me=Symbol("SBChannelHandle"),Te=Symbol.for("SBObjectHandle"),Re=Symbol.for("SBStorageToken"),xe=new Ee,De="\n"+"=".repeat(76)+"\n";function _e(e,t){const n=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff"),r=BigInt("0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef"),a=(n+1n)/4n,s=new Uint8Array(q(e)),i="0x"+Array.from(s,(e=>e.toString(16).padStart(2,"0"))).join("");var o=BigInt(i),c=function(e,t,n){if(1n===n)return 0n;let r=1n;for(e%=n;t>0n;)t%2n===1n&&(r=r*e%n),t>>=1n,e=e*e%n;return r}(o*o*o-3n*o+r,a,n);c%2n!==BigInt(t)&&(c=n-c);const l=c.toString(16).padStart(96,"0");return{x:e,y:G(new Uint8Array(l.match(/.{1,2}/g).map((e=>parseInt(e,16)))))}}"=".repeat(76);class Fe{sb384Ready;static ReadyFlag=Symbol("SB384ReadyFlag");#t;#n;#r;#a;#s;#i;#o;#c;#l;#h;errorState=!1;constructor(e,t){this[Fe.ReadyFlag]=!1,this.sb384Ready=new Promise((async(n,r)=>{try{if(e)if(e instanceof CryptoKey){const n=await xe.exportKey("jwk",e);N(n&&n.x&&n.y,"INTERNAL"),n.d?(this.#t=!0,this.#s=n.d):(this.#t=!1,N(!t,"ERROR creating SB384 object: key provided is not the requested private")),this.#n=n.x,this.#r=n.y}else if(e&&e instanceof Object&&"kty"in e){const n=e;N(n&&n.x&&n.y,"Cannot parse format of JWK key"),e.d?(this.#t=!0,this.#s=n.d):(this.#t=!1,N(!t,"ERROR creating SB384 object: key provided is not the requested private")),this.#n=n.x,this.#r=n.y}else{if("string"!=typeof e)throw new K("ERROR creating SB384 object: invalid key (must be a JsonWebKey, SBUserId, or omitted)");{const n=be(e);if(!n)throw new K("ERROR creating SB384 object: invalid key (must be a JsonWebKey | SBUserPublicKey | SBUserPrivateKey, or omitted)");const{x:r,y:a,d:s}=n;s?(this.#t=!0,this.#s=s):(this.#t=!1,N(!t,"ERROR creating SB384 object: key provided is not the requested private")),N(r&&a,"INTERNAL"),this.#n=r,this.#r=a}}else{const e=await xe.generateKeys(),t=await xe.exportKey("jwk",e.privateKey);N(t&&t.x&&t.y&&t.d,"INTERNAL"),this.#t=!0,this.#n=t.x,this.#r=t.y,this.#s=t.d}if(this.#t&&(this.#i=await xe.importKey("jwk",this.jwkPrivate,"ECDH",!0,["deriveKey"])),this.#o=await xe.importKey("jwk",this.jwkPublic,"ECDH",!0,[]),this.#t){const e={...this.jwkPrivate,key_ops:["sign"]};this.#c=await crypto.subtle.importKey("jwk",e,{name:"ECDSA",namedCurve:"P-384"},!0,["sign"])}else{const e={...this.jwkPublic,key_ops:["verify"]};this.#c=await crypto.subtle.importKey("jwk",e,{name:"ECDSA",namedCurve:"P-384"},!0,["verify"])}const r=H([q(this.#n),q(this.#r)]),a=await crypto.subtle.digest("SHA-256",r);this.#l=re(a);const s=BigInt("0x"+Array.from(new Uint8Array(a)).map((e=>e.toString(16).padStart(2,"0"))).join(""))>>28n;this.#h=Array.from({length:12},((e,t)=>le(Number(s>>BigInt(19*(11-t))&0x7ffffn)))).join(""),this.#a=me(this.#r),this[Fe.ReadyFlag]=!0,n(this)}catch(e){r("ERROR creating SB384 object failed: "+$(e))}}))}get SB384ReadyFlag(){return this[Fe.ReadyFlag]}get ready(){return this.sb384Ready}get private(){return this.#t}get hash(){return this.#l}get hashB32(){return this.#h}get userId(){return this.hash}get ownerChannelId(){return this.hash}get privateKey(){if(!this.private)throw new K("this is a public key, there is no 'privateKey' value");return this.#i}get signKey(){return this.#c}get publicKey(){return this.#o}get jwkPrivate(){return N(this.#t,"jwkPrivate() - not a private key"),N(this.#n&&this.#r&&this.#s,"JWK key info is not available (fatal)"),{crv:"P-384",ext:!0,key_ops:["deriveKey"],kty:"EC",x:this.#n,y:this.#r,d:this.#s}}get jwkPublic(){return N(this.#n&&this.#r,"JWK key info is not available (fatal)"),{crv:"P-384",ext:!0,key_ops:[],kty:"EC",x:this.#n,y:this.#r}}get ySign(){return N(null!==this.#a,"ySign() - ySign is not available (fatal)"),this.#a}get userPublicKey(){return N(this.#n&&void 0!==this.#a,"userPublicKey() - sufficient key info is not available (fatal)"),ve.SBPublicKey+(0===this.#a?Se.CompressedEven:Se.CompressedOdd)+ie(this.#n)}get userPrivateKey(){N(this.#t,"userPrivateKey() - not a private key, there is no userPrivateKey");const e=ke(this.#n,this.#s,this.#a);return N(void 0!==e,"userPrivateKey() - failed to construct key, probably missing info (fatal)"),e}get userPrivateKeyDehydrated(){return N(this.#t&&this.#s,"userPrivateKey() - not a private key, and/or 'd' is missing, there is no userPrivateKey"),ve.SBPrivateKey+Se.Dehydrated+ie(this.#s)}static async newPrivateKey(){return(await(new Fe).ready).userPrivateKey}}a([Ae,Be],Fe.prototype,"private",null),a([Ae,Be],Fe.prototype,"hash",null),a([Ae,Be],Fe.prototype,"hashB32",null),a([Ae,Be],Fe.prototype,"userId",null),a([Ae,Be],Fe.prototype,"ownerChannelId",null),a([Ae,Be],Fe.prototype,"privateKey",null),a([Ae,Be],Fe.prototype,"signKey",null),a([Ae,Be],Fe.prototype,"publicKey",null),a([Ae],Fe.prototype,"jwkPrivate",null),a([Ae],Fe.prototype,"jwkPublic",null),a([Ae],Fe.prototype,"ySign",null),a([Ae],Fe.prototype,"userPublicKey",null),a([Ae],Fe.prototype,"userPrivateKey",null),a([Ae],Fe.prototype,"userPrivateKeyDehydrated",null);class Le{#d;#u;constructor(e,t){this.#u=t,this.#d=this.initializeMasterKey(e)}async ready(){await this.#d}setChannel(e){}async initializeMasterKey(e){const t=this.#u.salt1,n=this.#u.iterations1,r=this.#u.hash1;N(t&&n&&r,"Protocol_AES_GCM_256.initializeMasterKey() - insufficient key info (fatal)");const a=await crypto.subtle.importKey("raw",(new TextEncoder).encode(e),{name:"PBKDF2"},!1,["deriveBits","deriveKey"]),s=await crypto.subtle.deriveBits({name:"PBKDF2",salt:t,iterations:n,hash:r},a,256);return crypto.subtle.importKey("raw",s,{name:"PBKDF2"},!1,["deriveBits","deriveKey"])}static async genKey(){return{salt1:crypto.getRandomValues(new Uint8Array(16)).buffer,iterations1:1e5,iterations2:1e4,hash1:"SHA-256",summary:"PBKDF2 - SHA-256 - AES-GCM"}}async#f(e){return await crypto.subtle.deriveKey({name:"PBKDF2",salt:e,iterations:this.#u.iterations2,hash:this.#u.hash1},await this.#d,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"])}async encryptionKey(e){return N(e.salt,"Protocol called without salt (Internal Error)"),this.#f(e.salt)}async decryptionKey(e,t){if(t.salt)return this.#f(t.salt);console.warn("Salt should always be present in ChannelMessage")}}class je{#y;#g=new Map;constructor(){}setChannel(e){this.#y=e}async encryptionKey(e){N(this.#y,"[Protocol_ECDH] Error, need to know channel (L2511)"),await this.#y.ready;const t=this.#y.channelId;N(t,"Internal Error (L2565)");const n=e.t?e.t:this.#y.channelData.ownerPublicKey;return this.#p(t,n,this.#y.privateKey)}async decryptionKey(e,t){await e.ready;const n=e.channelId;N(n,"Internal Error (L2594)");const r=e.visitors.get(t.f);if(r)return this.#p(n,r,e.privateKey);console.error("Protocol_ECDH.key() - sentFrom is unknown")}async#p(e,t,n){const r=e+"_"+t;if(!this.#g.has(r)){const e=await crypto.subtle.deriveKey({name:"ECDH",public:(await new Fe(t).ready).publicKey},n,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]);this.#g.set(r,e)}const a=this.#g.get(r);return N(a,"Internal Error (L2584/2611)"),a}}class Oe extends Fe{#w;sbChannelKeysReady;static ReadyFlag=Symbol("SBChannelKeysReadyFlag");#v;channelServer;constructor(e){let t;if(null===e)throw new K("SBChannelKeys constructor: you cannot pass 'null'");if(e)if("string"==typeof e)super(e,!0);else{if(!l(e))throw new K("SBChannelKeys() constructor: invalid parameter (must be SBChannelHandle or SBUserPrivateKey)");{const n=h(e);t=n.channelServer,super(n.userPrivateKey,!0),this.#w=n.channelId,this.#v=n.channelData}}else super();t||(t=Ue.defaultChannelServer),"/"===t[t.length-1]&&(this.channelServer=t.slice(0,-1)),this.channelServer=t,this[Oe.ReadyFlag]=!1,this.sbChannelKeysReady=new Promise((async(e,t)=>{try{if(await this.sb384Ready,N(this.private,"Internal Error [L2833]"),!this.#w||this.owner)this.#w||(this.#w=this.ownerChannelId),this.#v={channelId:this.ownerChannelId,ownerPublicKey:this.userPublicKey};else if(!this.#v){if(!this.channelServer)throw new K("SBChannelKeys() constructor: either key is owner key, or handle contains channelData, or channelServer is provided ...");var n;try{n=await this.callApi("/getChannelKeys")}catch(e){for(;;){await new Promise((e=>setTimeout(e,1e3)));try{n=await this.callApi("/getChannelKeys");break}catch(e){console.error("SBChannelKeys() constructor: failed to get channel data, retrying ...")}}}N((n=u(n)).channelId===this.#w,"Internal Error (L2493)"),this.#v=n}this[Oe.ReadyFlag]=!0,e(this)}catch(e){t("[SBChannelKeys] constructor failed. "+$(e))}}))}get ready(){return this.sbChannelKeysReady}get SBChannelKeysReadyFlag(){return this[Oe.ReadyFlag]}get owner(){return this.private&&this.ownerChannelId&&this.channelId&&this.ownerChannelId===this.channelId}get channelId(){if(this.#w)return this.#w;throw new K("[SBChannelKeys] ChannelID not known / object not ready. Internal Error (L894)")}get channelData(){return this.#v}get handle(){return{[Me]:!0,channelId:this.channelId,userPrivateKey:this.userPrivateKey,channelServer:this.channelServer,channelData:this.channelData}}async buildApiBody(e,t){await this.sb384Ready;const n=await Ue.dateNow(),r=new ArrayBuffer(8);new DataView(r).setFloat64(0,n);const a=H([r,(new TextEncoder).encode(e).buffer]),s=t?ye(t):void 0,i=await xe.sign(this.signKey,s?H([a,s]):a),o={channelId:this.#w,path:e,userId:this.userId,userPublicKey:this.userPublicKey,timestamp:n,sign:i};return s&&(o.apiPayloadBuf=s),y(o)}callApi(e,t){return N(this.channelServer,"[ChannelApi.callApi] channelServer is unknown (you can just set it, eg 'channel.channelServer = ...')"),N(this.#w&&e,"Internal Error (L2528)"),new Promise((async(n,r)=>{const a={method:"POST",headers:{"Content-Type":'application/octet-stream"'},body:ye(await this.buildApiBody(e,t))};O(this.channelServer+"/api/v2/channel/"+this.#w+e,a).then((e=>{n(e)})).catch((e=>{r(e instanceof K?e:"[Channel.callApi] Error: "+$(e))}))}))}}a([Ae],Oe.prototype,"owner",null),a([Ae],Oe.prototype,"channelId",null),a([Ae,Be],Oe.prototype,"channelData",null),a([Ae,Be],Oe.prototype,"handle",null);class $e extends Oe{channelReady;static ReadyFlag=Symbol("ChannelReadyFlag");locked=!1;static defaultProtocol=new je;protocol=$e.defaultProtocol;visitors=new Map;sendQueue=new I;isClosed=!1;previous=void 0;constructor(e,t){null===e?super():super(e),this.protocol=t||$e.defaultProtocol,this.messageQueueManager().then((()=>{})).catch((e=>{throw e})),this.channelReady=this.sbChannelKeysReady.then((()=>(this.visitors.set(this.channelId,this.channelData.ownerPublicKey),this[$e.ReadyFlag]=!0,this.protocol.setChannel(this),this))).catch((e=>{throw e}))}get ready(){return N(!this.isClosed,"[Channel] Channel is closed, blocking on'ready' will reject"),this.channelReady}get ChannelReadyFlag(){return this[$e.ReadyFlag]}get api(){return this}async extractMessage(e){if(e){if(e instanceof ArrayBuffer)throw new K("[Channel.extractMessage] Message is an ArrayBuffer (did you forget extractPayload()?)");try{if(!(e=g(e)))return;const t=e.f;if(!t)return void console.error("++++ [extractMessage]: no sender userId hash in message (probably an error)");if(!this.visitors.has(t)){const e=await this.callApi("/getPubKeys");if(!(e&&e instanceof Map))return;for(const[t,n]of e)this.visitors.set(t,n)}N(this.visitors.has(t),`Cannot find sender userId hash ${t} in public key map`),N(this.protocol,"Protocol not set (internal error)");const n=await(this.protocol?.decryptionKey(this,e));if(!n)return;if(!e.ts)throw new K("unwrap() - no timestamp in encrypted message");const{c:r,iv:a}=e;N(r,"[unwrap] No contents in encrypted message (probably an error)");const s=new DataView(new ArrayBuffer(8));let i;s.setFloat64(0,e.ts);try{i=await crypto.subtle.decrypt({name:"AES-GCM",iv:a,additionalData:s},n,r)}catch(e){return}return e._id||(e._id=$e.composeMessageKey(this.channelId,e.sts,e.i2)),f({body:we(i).payload,channelId:this.channelId,sender:t,senderPublicKey:this.visitors.get(t),senderTimestamp:e.ts,serverTimestamp:e.sts,_id:e._id})}catch(e){return}}}async extractMessageMap(e){const t=new Map;for(const[n,r]of e){const e=await this.extractMessage(r);e&&t.set(n,e)}return t}packageMessage(e,t={}){let n={f:this.userId,unencryptedContents:e};if(t){if(t.sendTo&&(n.t=t.sendTo),t.subChannel)throw new K("wrapMessage(): subChannel not yet supported");void 0!==t.ttl&&(n.ttl=t.ttl),t.sendString&&(N("string"==typeof e,"[packageMessage] sendString is true, but contents is not a string"),N(void 0===t.ttl||0===t.ttl,`[packageMessage] sendString implies TTL=0 (we got ${t.ttl})`),n.ttl=0,n.stringMessage=!0)}return!0!==n.stringMessage&&(n.protocol=t.protocol?t.protocol:this.protocol,void 0===n.ttl&&(n.ttl=15),n.salt||(n.salt=crypto.getRandomValues(new Uint8Array(16)).buffer),n.iv||(n.iv=crypto.getRandomValues(new Uint8Array(12)))),n}async finalizeMessage(e){e.ts||(e.ts=await Ue.dateNow()),N(!(!0===e.stringMessage),"[Channel.finalizeMessage()] stringMessage is true, finalizing should not be called (internal error)");const t=ye(e.unencryptedContents);N(t,"wrapMessage(): failed to assemble payload"),N(t.byteLength<65536,`[Channel.finalizeMessage]: body must be smaller than 64 KiB (we got ${t.byteLength/1024} KiB)})`),e.ts=await Ue.dateNow();const n=new DataView(new ArrayBuffer(8));return n.setFloat64(0,e.ts),N(e.protocol,"[Channel.finalizeMessage()] Protocol not set (internal error)"),e.c=await xe.encrypt(t,await e.protocol.encryptionKey(e),{iv:e.iv,additionalData:n}),e.s=await xe.sign(this.signKey,e.c),p(e)}#S(e){return new Promise((async(t,n)=>{await this.ready;const r=!0===e.stringMessage?e.unencryptedContents:await this.finalizeMessage(e);await this.callApi("/send",r).then((e=>{t(e)})).catch((e=>{n(e)}))}))}async send(e,t={}){return new Promise((async(n,r)=>{const a=this.packageMessage(e,t);this.sendQueue.enqueue({msg:a,resolve:n,reject:r,_send:this.#S.bind(this),retryCount:void 0!==t.retries?t.retries:0})}))}create(e,t=this.channelServer){return N(null!==e,"[Channel.create] Missing storage token"),t&&(this.channelServer=t),N(this.channelServer,"[Channel.create] Missing channel server (neither provided nor in channelKeys)"),new Promise((async(n,r)=>{await this.channelReady,this.channelData.storageToken=c(e),this.callApi("/budd",this.channelData).then((()=>{this.channelServer=t,N(this.channelData&&this.channelData.channelId&&this.userPrivateKey,"Internal Error [L2546]"),n(this)})).catch((e=>{r("Channel.create() failed: "+$(e))}))}))}getLastMessageTimes(){throw new K("Channel.getLastMessageTimes(): deprecated")}getLatestTimestamp(){return this.callApi("/getLatestTimestamp")}async messageQueueManager(){await this.ready;let e=!0;for(;e;)await this.sendQueue.dequeue().then((async t=>{if(t){let e=null;for(;t.retryCount-- >=0;)try{const e=await t._send(t.msg);t.resolve(e);break}catch(t){e="[ERROR] "+t}t.reject(e)}else e=!1})).catch((e=>{if("shutDown"!==e)throw new K("[messageQueueManager] Channel message queue is shutting down with error: "+e.message)}))}close(){return this.isClosed=!0,this.sendQueue.drain("shutDown")}getMessageKeys(e="0"){return new Promise((async(t,n)=>{try{await this.channelReady,N(this.channelId,"Channel.getMessageKeys: no channel ID (?)");const{keys:n,historyShard:r}=await this.callApi("/getMessageKeys",{prefix:e});n&&0!==n.size||console.warn("[Channel.getMessageKeys] Warning: no messages (empty/null response); not an error but perhaps unexpected?"),n.size>Ue.MAX_MESSAGE_SET_SIZE&&console.warn(De,`[Channel.getMessageKeys] Warning: ${n.size} keys returned, that's over the ${Ue.MAX_MESSAGE_SET_SIZE} limit - you will NOT be able to request this set directly.`,De),t({keys:n,historyShard:r})}catch(e){n(`[Channel.getMessageKeys] Error in getting message keys (offline?) ('${e}')`)}}))}getRawMessageMap(e){if(0===e.size)throw new K("[getRawMessageMap] no message keys provided");if(e.size>Ue.MAX_MESSAGE_SET_SIZE)throw new K(`[getRawMessageMap] too many messages requested at once (max ${Ue.MAX_MESSAGE_SET_SIZE})`);return new Promise((async(t,n)=>{await this.channelReady,N(this.channelId,"[getRawMessageMap] no channel ID (?)");const r=await this.callApi("/getMessages",e);N(r,"[getRawMessageMap] no messages (empty/null response)"),t(r)}))}getMessageMap(e){if(e.size>Ue.MAX_MESSAGE_SET_SIZE)throw new K(`[getMessageMap] too many message keys provided (max ${Ue.MAX_MESSAGE_SET_SIZE})`);if(0===e.size)throw new K("[getMessageMap] no message keys provided");return new Promise((async(t,n)=>{await this.channelReady;const r=await this.callApi("/getMessages",e),a=new Map;for(const[e,t]of r)try{a.set(e,g(we(t).payload))}catch(e){}t(await this.extractMessageMap(a))}))}async getHistory(){await this.channelReady,N(this.channelId,"Channel.getHistory: no channel ID (?)");const e=await this.callApi("/getHistory");return new B(e,this)}setPage(e){var{page:t,prefix:n,type:r}=e;if(N(t,"Channel.setPage: no page (contents) provided"),(n=n||12)<6)throw new K("Channel.setPage: prefix must be at least 6 characters");return r=r||"sb384payloadV3",this.callApi("/setPage",{page:t,type:r,prefix:n})}async getPage(){const e=this.hashB32,t=await j(this.channelServer+"/api/v2/page/"+e).catch((e=>{throw new K(`[Channel.getPage] fetch failed: ${e}`)}));if("sb384payloadV3"!==t.headers.get("content-type"))throw new K("[Channel.getPage] Can only handle 'sb384payloadV3' content type, use 'fetch()'");return we(await t.arrayBuffer()).payload}acceptVisitor(e){return this.callApi("/acceptVisitor",{userId:e})}getCapacity(){return this.callApi("/getCapacity")}getAdminData(){return this.callApi("/getAdminData")}getMother(){return this.getAdminData().then((e=>e.motherChannel))}isLocked(){return this.getAdminData().then((e=>e.locked))}lock(){return this.callApi("/lockChannel")}updateCapacity(e){return this.callApi("/setCapacity",{capacity:e})}getChannelKeys(){return this.callApi("/getChannelKeys")}getPubKeys(){return this.callApi("/getPubKeys")}getStorageLimit(){return this.callApi("/getStorageLimit")}async getStorageToken(e){return c(await this.callApi("/getStorageToken",{size:e}))}budd(e){return new Promise((async(t,n)=>{var{targetChannel:r,size:a}=e||{};if(r){if(this.channelId===r.channelId)return void n(new Error("[budd()]: source and target channels are the same, probably an error"))}else r=(await(new $e).ready).handle;if(a||(a=s),a!==1/0&&Math.abs(a)>await this.getStorageLimit())return void n(new Error(`[budd()]: storage amount (${a}) is more than current storage limit`));const i=r.channelData;if(i)try{i.storageToken=await this.getStorageToken(a);const e=await new $e(r).ready;e.channelServer||(e.channelServer=this.channelServer);const s=u(await e.callApi("/budd",i));if(r.channelId!==s.channelId)return console.warn("[budd()]: target channel ID changed, should not happen, error somewhere\n",De),console.warn("targetChannel:",r,"\n",De),console.warn("newChannelData:",s,"\n",De),void n(new Error("[budd()]: target channel ID changed, should not happen, error somewhere"));s.storageToken||console.warn("[budd()]: target channel has no storage token, possibly an error, should be returned from server"),t(h({[Me]:!0,channelId:s.channelId,userPrivateKey:r.userPrivateKey,channelServer:this.channelServer,channelData:s}))}catch(e){return void n("[budd] Could not get storage token from server, are you sure about the size?")}else n(new Error("[budd()]: target channel has no channel data, probably an error"))}))}static LOWEST_TIMESTAMP="0".repeat(26);static HIGHEST_TIMESTAMP="3".repeat(26);static timestampToBase4String(e){return e.toString(4).padStart(22,"0")+"0000"}static base4stringToDate(e){const t=parseInt(e.slice(0,-4),4);return new Date(t).toISOString()}static getLexicalExtremes(e){if(!(e instanceof Set||e instanceof Array||e instanceof Map))throw new K("[getLexicalExtremes] Paramater must be a Set, Array, or Map");const t=e instanceof Array?e:Array.from(e.keys());if(0===t.length)return[];let[n,r]=[t[0],t[0]];for(const e of t)e<n&&(n=e),e>r&&(r=e);return[n,r]}static messageKeySetToPrefix=e=>{if(0===e.size)return"0";const[t,n]=$e.getLexicalExtremes(e);N(t&&n,"[timestampLongestPrefix]: no lowest or highest (internal error?)");const{timestamp:r}=$e.deComposeMessageKey(t),{timestamp:a}=$e.deComposeMessageKey(n);let s=0;for(;s<r.length&&s<a.length&&r[s]===a[s];)s++;return r.substring(0,s)};static timestampLongestPrefix=(e,t)=>{if(e&&t&&"string"==typeof e&&"string"==typeof t&&26===e.length&&26===t.length){let n=0;for(;n<e.length&&n<t.length&&e[n]===t[n];)n++;return e.substring(0,n)}throw new K(`[timestampLongestPrefix]: invalid input:\n '${e}' or '${t}'`)};static timestampRegex=/^[0-3]{26}$/;static base4StringToTimestamp(e){return e&&"string"==typeof e&&26===e.length&&$e.timestampRegex.test(e)?parseInt(e.slice(0,-4),4):0}static base4StringToDate(e){const t=$e.base4StringToTimestamp(e);return t?new Date(t).toISOString():""}static deComposeMessageKey(e){const t=e.match(/^([a-zA-Z0-9]{43})_([_a-zA-Z0-9]{4})_([0-3]{26})$/);return t&&t.length>=4?{channelId:t[1],i2:t[2],timestamp:t[3]}:{channelId:"",i2:"",timestamp:""}}static composeMessageKey(e,t,n="____"){return`${e}_${n??"____"}_${$e.timestampToBase4String(t)}`}}a([Ae,Be],$e.prototype,"api",null),a([Be],$e.prototype,"getLatestTimestamp",null),a([Be,Pe],$e.prototype,"setPage",null),a([Be],$e.prototype,"getPage",null),a([Be,Pe],$e.prototype,"acceptVisitor",null),a([Be,Pe],$e.prototype,"getCapacity",null),a([Be,Pe],$e.prototype,"getAdminData",null),a([Be,Pe],$e.prototype,"getMother",null),a([Be,Pe],$e.prototype,"isLocked",null),a([Be,Pe],$e.prototype,"lock",null),a([Be,Pe],$e.prototype,"updateCapacity",null),a([Be,Ae],$e.prototype,"getChannelKeys",null),a([Be],$e.prototype,"getPubKeys",null),a([Be],$e.prototype,"getStorageLimit",null),a([Be],$e.prototype,"getStorageToken",null),a([Be,Pe],$e.prototype,"budd",null);class ze extends $e{channelSocketReady;static ReadyFlag=Symbol("ChannelSocketReadyFlag");#m;#b;onMessage=e=>{N(!1,"[ChannelSocket] NO MESSAGE HANDLER")};#k=new Map;#C=new Map;#E=!1;lastTimestampPrefix="0".repeat(26);#A=0;#B;#P;constructor(e,t,r){if(N(t,"[ChannelSocket] constructor: no onMessage handler provided"),"string"==typeof e)super(e,r);else{const t=h(e);super(t,r),t.channelServer&&(this.channelServer=t.channelServer)}this.channelServer||(this.channelServer=Ue.defaultChannelServer),this[n.ReadyFlag]=!1,this.#b=this.channelServer.replace(/^http/,"ws"),this.onMessage=t,this.channelSocketReady=this.#I()}#K(){if(this.#A=setInterval((()=>{if(this.isClosed)return console.error("[ChannelSocket] we are closed, removing ping interval"),void clearInterval(this.#A);Ue.haveNotHeardFromServer()}),500),this.#m&&this.#m.websocket&&1===this.#m.websocket.readyState)try{this.#m.websocket.send("ping")}catch(e){console.error("[ChannelSocket] Failed to send first (hibernation) 'ping' message, Internal Error [L3986]")}else console.error("[ChannelSocket] websocket not ready (?), not sending first 'ping', hibernation disabled")}async#M(){await new Promise((e=>setTimeout(e,50))),this.channelSocketReady=this.#I().catch((e=>(console.error(De,"[ChannelSocket] Could not re-establish connection, should queue up\n",e,De),this)))}async#T(e){console.warn(`[ChannelSocket] Lost connection to server, will try to reset.\nReason (if any): '${e}'`),this[n.ReadyFlag]=!1,Ue.removeChannelSocket(this),Ue.on("online",this.#M)}#I(){return this.#B=new Promise(((e,t)=>{this.#P=t})),Promise.race([this.#B,new Promise((async(e,t)=>{await this.sbChannelKeysReady;const r=this.#b+"/api/v2/channel/"+this.channelId+"/websocket";if(this.#m={url:r,ready:!1,closed:!1,timeout:2e4},!this.#m.websocket||3===this.#m.websocket.readyState||2===this.#m.websocket.readyState){this.#m.websocket&&(console.warn("[ChannelSocket] websocket is in a bad state, closing it ... will await"),await async function(e){console.log("[closeSocket] closing socket",e),e.readyState!==WebSocket.CLOSED?await new Promise((t=>{e.addEventListener("close",(()=>{console.log("[Snackabra.closeSocket] ... socket confirmed closed",e),t()}),{once:!0}),e.close(1e3)})):console.warn("[Snackabra] websocket already closed")}(this.#m.websocket),Ue.addChannelSocket(this));const e=ye(await this.buildApiBody(r));N(e,"Internal Error [L3598]");try{this.#m.websocket=new WebSocket(r+"?apiBody="+re(e)),Ue.addChannelSocket(this)}catch(e){const t="[ChannelSocket] Could not open websocket: "+e;return void this.#P(t)}}const a=this.#m.websocket,s=async t=>{if(!t.data){const e="[ChannelSocket] received empty message (should be a 'ready' message)";console.error(e),this.#P(e)}let r=null;if("string"==typeof t.data?r=M(t.data,"L3909"):t.data instanceof ArrayBuffer?r=we(t.data).payload:t.data instanceof Blob?r=we(await t.data.arrayBuffer()).payload:z("L3987","[ChannelSocket] received something other than string or ArrayBuffer"),r)if(r.ready)r.latestTimestamp?this.lastTimestampPrefix=r.latestTimestamp:console.warn("[ChannelSocket] received 'ready' message without 'latestTimestamp'"),a.removeEventListener("message",s),a.addEventListener("message",this.#R),this.#K(),this[n.ReadyFlag]=!0,e(this);else{const e="[ChannelSocket] received something other than 'ready' as first message:\n"+JSON.stringify(t.data);!0===this[n.ReadyFlag]?console.warn(e):this.#P(e)}else{const e="[ChannelSocket] received empty message, or could not parse it (should be a 'ready' message)";!0===this[n.ReadyFlag]?console.warn(e):this.#P(e)}};this.#m.websocket.addEventListener("message",s);let i=setTimeout((()=>{if(this[n.ReadyFlag]);else{const e="[ChannelSocket] Socket not resolving after waiting, fatal.";console.warn(e),this.#P(e)}}),2e3);this.#m.websocket.addEventListener("open",(async()=>{this.#m.closed=!1,i&&(clearTimeout(i),i=void 0),await this.ready,this.#m.websocket.send("ready")})),this.#m.websocket.addEventListener("close",(e=>{if(this.#m.closed=!0,e.wasClean)if(e.reason.includes("does not have an owner")){const e=`[ChannelSocket] No such channel on this server (${this.channelServer})`;if(!0===this[n.ReadyFlag])throw new K(e+" plus we are ready? (L4130)");this.#P(e)}else console.log(`[ChannelSocket] Closed (cleanly).\nReason (if any): '${e.reason}'.`);else console.warn(`[ChannelSocket] Closed (but not cleanly) [L4137]\nReason (if any): '${e.reason}'. Server: '${this.channelServer}'`);if(!0===this[n.ReadyFlag])this.#T("Channel was ready, but reporting being closed [L4140]");else{const e="[ChannelSocket] Closed before ready (?) [L4142]";console.error(e),this.#P(e)}})),this.#m.websocket.addEventListener("error",(e=>{if(this.#m.closed=!0,!0===this[n.ReadyFlag]){const t="[ChannelSocket] Socket closed [L4152]\nEvent message (if any): '"+e.message+"'";console.error(t),this.#P(t)}else{const t=`[ChannelSocket] Failed to connect, or errored out immediately [L4153].\nError (if any): '${e}'`;console.error(t),this.#P(t)}}))}))])}#R=async e=>{N(!this.errorState,"[ChannelSocket] in error state (Internal Error L4018)");const t=e.data;var r=null;if(N(t,"[ChannelSocket] received empty message"),Ue.heardFromServer(),"string"==typeof t&&$e.timestampRegex.test(t))return Ue.heardFromServer(),t>this.lastTimestampPrefix&&this.#m.websocket.send(this.lastTimestampPrefix),void setTimeout((()=>{if(this.#m&&!this.#m.closed&&1===this.#m.websocket?.readyState)try{this.#m.websocket.send("ping")}catch(e){}}),1e3);if("string"==typeof t){const e=R(t);if(e)return void this.#m.websocket.send(ye({error:`Cannot parse 'string' message (''${e})`}));z("L3287","[ChannelSocket] Cannot parse message: "+t)}else if(t instanceof ArrayBuffer)r=we(t).payload;else{if(!(t instanceof Blob))return void this.#m.websocket.send(ye({error:"Received unknown 'type' of message (??)"}));r=we(await t.arrayBuffer()).payload}if(N(r,"[ChannelSocket] cannot extract message"),r.ready)return;if(r.error)return void console.error("++++++++ #processMessage: received error message\n",r);(r=g(r)).channelId||(r.channelId=this.channelId),N(r.channelId===this.channelId,"[ChannelSocket] received message for wrong channel?"),this.#E&&console.log("[ChannelSocket] Received socket message:",r),N(r.sts,"[ChannelSocket] Message missing server timestamp Internal Error (L4145)"),this.lastTimestampPrefix=n.timestampToBase4String(r.sts),N(r.c&&r.c instanceof ArrayBuffer,"[ChannelSocket] Internal Error (L3675)");const a=G(await crypto.subtle.digest("SHA-256",r.c));this.previous&&(r.p=this.previous),this.previous=a;const s=this.#k.get(a);s&&(this.#E&&console.log(`++++++++ #processMessage: found matching ack for id ${a}`),this.#k.delete(a),s("success"));const i=this.#C.get(a);i&&(this.#E&&console.log(`++++++++ #processMessage: clearing matching ack timeout for id ${a}`),clearTimeout(i),this.#C.delete(a));const o=await this.extractMessage(r);o&&this.onMessage(o)};get ready(){return N(!this.errorState,"[ChannelSocket] in error state (Internal Error L4104)"),N(!this.isClosed,"[ChannelSocket] We are closed, blocking on'ready' will reject"),this.channelSocketReady}get errorPromise(){if(!this.#B)throw new K("[ChannelSocket] errorPromise called before ready");return this.#B}get ChannelSocketReadyFlag(){return this[n.ReadyFlag]}get status(){if(!this.#m||!this.#m.websocket)return"CLOSED";switch(this.#m.websocket.readyState){case 0:return"CONNECTING";case 1:return"OPEN";case 2:return"CLOSING";default:return"CLOSED"}}set enableTrace(e){this.#E=e,e&&console.log("==== jslib ChannelSocket: Tracing enabled ====")}#S(e){return N(!this.errorState,"[ChannelSocket] in error state (Internal Error L4130)"),new Promise((async(t,n)=>{if(this.#m.closed)n("<websocket closed>");else if(!0===e.stringMessage)try{const n=e.unencryptedContents;this.#m.websocket.send(n),t("success")}catch(e){return void n(`<websocket error upon send() of a string message: ${e}>`)}else{const r=ye(e=await this.finalizeMessage(e));if(!r)return void n("ChannelSocket.send(): no message payload (Internal Error)");const a=G(await crypto.subtle.digest("SHA-256",e.c));this.#E&&console.log("++++++++ ChannelSocket.send(): Which has hash:",a),this.#k.set(a,t),this.#C.set(a,setTimeout((async()=>{if(this.#k.has(a))return this.#k.delete(a),Ue.isShutdown?void n("shutDown"):void n(`<websocket request timed out (no ack) after ${this.#m.timeout}ms (${a})>`);this.#E&&console.log("++++++++ ChannelSocket.send() completed sending"),t("<received ACK, success, message sent and mirrored back>")}),this.#m.timeout));try{this.#m.websocket.send(r)}catch(e){return console.error("Failed to send on socket:\n",e,"\n",(new Error).stack),void n(`<websocket error upon send() of a message: ${e}>`)}}}))}async send(e,t){return await this.ready,N(this.#m&&this.#m.websocket,"[ChannelSocket.send()] called before ready"),this.#m.closed&&(console.info("send() triggered reset of #readyPromise() (normal)"),this.channelSocketReady=this.#I(),this[n.ReadyFlag]=!1),new Promise((async(n,r)=>{this.ChannelSocketReadyFlag||r("ChannelSocket.send() is NOT ready, perhaps it's resetting?");const a=this.#m.websocket.readyState;switch(a){case 1:this.sendQueue.enqueue({msg:this.packageMessage(e,t),resolve:n,reject:r,_send:this.#S.bind(this),retryCount:3});break;case 0:case 2:case 3:r("[ChannelSocket.send()] Tried sending but socket not OPEN - it is "+(0===a?"CONNECTING":2===a?"CLOSING":"CLOSED"));break;default:z("ChannelSocket",`socket in unknown state (${a})`)}}))}async close(){this.isClosed=!0,clearInterval(this.#A),this.#m&&this.#m.websocket&&(1===this.#m.websocket.readyState&&(this.#m.websocket.close(),await new Promise((e=>setTimeout(e,200)))),this.#m.closed=!0);const e=super.close();return Ue.removeChannelSocket(this),this[n.ReadyFlag]=!1,e}reset(){this.#m&&this.#m.websocket&&(1===this.#m.websocket.readyState&&this.#m.websocket.close(),this.#m.closed=!0,this[n.ReadyFlag]=!1,Ue.removeChannelSocket(this),this.channelSocketReady=this.#I())}}n=ze;class Ne{#x;#D="";static#_=0;constructor(e){e&&(this.#x=e,this.#F().then((e=>{if(!e){const e=setInterval((async()=>{if(Ue.isShutdown)clearInterval(e);else{await this.#F()&&clearInterval(e)}}),1e3)}})))}async#F(){if(this.#D)return this.#D;if(this.#x){const e=await Ue.getServerInfo(this.#x);if(!e)return"";if(e&&!e.storageServer)throw new K("[StorageApi] Server available did not provide storage server name, cannot initialize. Should not happen [L4651]");this.#D=e.storageServer}return this.#D}async getStorageServer(){const e=await this.#F();if(e)return e;throw new K("[StorageApi] Identity of storage server is not (yet) known.")}static padBuf(e){const t=e.byteLength;let n;n=t+4<4096?4096:t+4<1048576?2**Math.ceil(Math.log2(t+4)):1048576*Math.ceil((t+4)/1048576);let r=H([e,new Uint8Array(n-t).buffer]);return new DataView(r).setUint32(n-4,t),r}#L(e){const t=e.slice(-4);var n=new DataView(t).getUint32(0);const r=new DataView(t).getUint32(0,!0);return r<n&&(n=r),e.slice(0,n)}static getObjectKey(e,t){return new Promise(((n,r)=>{try{xe.importKey("raw",e,"PBKDF2",!1,["deriveBits","deriveKey"]).then((e=>{crypto.subtle.deriveKey({name:"PBKDF2",salt:t,iterations:1e5,hash:"SHA-256"},e,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]).then((e=>{n(e)}))}))}catch(e){r(e)}}))}static async getObjectId(e,t,n){return re(await crypto.subtle.digest("SHA-256",H([e,t,n])))}static async paceUploads(){for(;r.#_>8;)await new Promise((e=>setTimeout(e,50)))}async storeData(e,t){r.#_++;try{const n=ye(e);if(!n)throw new K("[storeData] failed to assemble payload");const a=re(await crypto.subtle.digest("SHA-256",n)).slice(0,12),s=r.padBuf(n),i=await xe.generateIdKey(s),h=await this.getStorageServer(),d=h+"/api/v2/storeRequest?id="+re(i.idBinary),u=await O(d);if(!u.salt||!u.iv)throw new K("[storeData] Failed to get key info (salt, nonce) from storage server");const f=await r.getObjectKey(i.keyMaterial,u.salt),y=await xe.encrypt(s,f,{iv:u.iv});let g;if(t instanceof $e)g=await t.getStorageToken(y.byteLength);else if(l(t))g=await(await new $e(t).ready).getStorageToken(y.byteLength);else{if(!o(t))throw new K("[storeData] invalid budget source (needs to be a channel, channel handle, or storage token)");g=c(t)}const p=await r.getObjectId(u.iv,u.salt,y),w=h+"/api/v2/storeData?id="+p,v={method:"POST",headers:{"Content-Type":'application/octet-stream"'},body:ye({id:p,iv:u.iv,salt:u.salt,storageToken:g,data:y})},S=await O(w,v);return{[Te]:!0,version:m,id:p,key:re(i.keyMaterial),iv:u.iv,salt:u.salt,hash:a,verification:S.verification,storageServer:h}}catch(e){if(console.error("[storeData] failed:",e),e instanceof K)throw e.message.includes("Not enough storage budget")?new K("Not enough storage budget"):e;throw new K(`[storeData] failed to store data: ${e}`)}finally{r.#_--}}async#j(e,t,n){try{let a=function(e){if(e){if("3"===e.version&&"string"==typeof e.id&&43===e.id.length&&J.test(e.id)&&e.iv instanceof Uint8Array&&12===e.iv.byteLength&&e.salt instanceof ArrayBuffer&&16===e.salt.byteLength&&e.data instanceof ArrayBuffer&&e.actualSize===e.data.byteLength)return e;throw new K("invalid Shard")}throw new K("invalid SBObjectHandle (null or undefined)")}(await O(e+t,{method:"GET"}));N(n.key,"object handle 'key' is missing, cannot decrypt"),n.iv=a.iv,n.salt=a.salt,n.data=new WeakRef(a.data);const s=ae(n.key),i=await r.getObjectKey(s,n.salt),o=await crypto.subtle.decrypt({name:"AES-GCM",iv:n.iv},i,a.data),c=this.#L(o),l=re(await crypto.subtle.digest("SHA-256",c)).slice(0,12);return n.hash&&n.hash!==l&&console.error("[fetchData] Hash mismatch in object, internal error (L4730) but ignored"),n.payload=we(c).payload,n.data=new WeakRef(a.data),{hash:l,handle:n}}catch(e){return}}async fetchData(e){if(!e)throw new K("[fetchData] No handle provided (cannot accept null or undefined)");const t=k(e);Ue.shardBreakpoints.has(t.id);const n=await t.verification,r=t.storageServer?t.storageServer:null,a=await this.getStorageServer();for(const e of[r,"http://localhost:3841",a]){if(!e)continue;const r="/api/v2/fetchData?id="+t.id+"&verification="+n,a=await this.#j(e,r,t);if(a){const{hash:t,handle:n}=a;return n.storageServer=e,Ue.knownShards.set(t,n),n}}throw new K("[fetchData] failed to fetch from any server")}static getData(e){if(void 0===e)return;const t=k(e);if(t.data){if(t.data instanceof WeakRef){return t.data.deref()||void 0}if(t.data instanceof ArrayBuffer)return t.data;throw new K("Invalid data type in handle")}}async fetchPayload(e){if(!e)throw new K("[fetchPayload] No handle provided (cannot accept null or undefined)");if(e.payload||e.data||(e=await this.fetchData(e)),e.payload)return e.payload;if(e.data)return r.getData(e);throw new K("[fetchPayload] Failed to fetch data or payload")}}r=Ne;class He{static listeners={};static addEventListener(e,t,n){He.listeners[e]=He.listeners[e]||[],He.listeners[e].push(t)}static removeEventListener(e,t,n){if(!He.listeners[e])return;const r=He.listeners[e],a=r.indexOf(t);a>-1&&r.splice(a,1)}static dispatchEvent(e){const t=He.listeners[e.type];return!t||(t.forEach((t=>t(e))),!e.defaultPrevented)}static on(e,t){He.addEventListener(e,t)}static off(e,t){He.removeEventListener(e,t)}static emit(e,...t){const n=new CustomEvent(e,{detail:1===t.length?t[0]:t});He.dispatchEvent(n)}}class Ue extends He{static version="3.20240601.1";static MAX_MESSAGE_SET_SIZE=512;static knownShards=new Map;#O;#$;static lastTimeStamp=0;static activeFetches=new Map;static#z=new Set;static isShutdown=!1;static lastTimestampPrefix="0".repeat(26);static#N=Date.now();static onlineStatus="unknown";static defaultChannelServer="https://c3.384.dev";eventTarget=new He;static shardBreakpoints=new Set;constructor(e,t){super(),N("string"==typeof e,"[Snackabra] Takes channel server URL as parameter"),e&&(Ue.defaultChannelServer=e),console.warn(`==== CREATING Snackabra object generation: ${Ue.version} (${Ue.defaultChannelServer}) ====`),"boolean"==typeof t&&(t={DEBUG:t}),t&&t.sbFetch&&(console.log("++++ Snackabra constructor: setting custom fetch function ++++"),j=t.sbFetch),this.#O=e,this.#$=new Ne(e)}static async dateNow(){let e=Date.now();return e<=Ue.lastTimeStamp&&(e=Ue.lastTimeStamp+1),Ue.lastTimeStamp=e,e}static heardFromServer(){switch(Ue.#N=Date.now(),Ue.onlineStatus){case"offline":this.emit("online"),this.emit("reconnected"),Ue.onlineStatus="online";break;case"online":break;case"unknown":this.emit("online"),Ue.onlineStatus="online"}this.checkUnknownNetworkStatus()}static checkUnknownNetworkStatus(){0===Ue.#z.size&&("unknown"!==Ue.onlineStatus&&this.emit("unknownNetworkStatus"),Ue.onlineStatus="unknown")}static haveNotHeardFromServer(){Date.now()-Ue.#N>1500&&"online"===Ue.onlineStatus&&(Ue.#z.size>0?(Ue.onlineStatus="offline",this.emit("offline")):(Ue.onlineStatus="unknown",Ue.onlineStatus="offline",this.emit("unknownNetworkStatus"))),this.checkUnknownNetworkStatus()}static addChannelSocket(e){Ue.#z.add(e)}static removeChannelSocket(e){Ue.#z.has(e)&&Ue.#z.delete(e),this.checkUnknownNetworkStatus()}async getPage(e){const t=await L(this.#O+"/api/v2/page/"+e);if(t.ok){const n=t.headers.get("content-type");if(!n)throw new K(`[getPage] Failed to fetch page '${e}'`);let r;if(n.includes("application/json"))r=await t.json();else if(n.includes("text/")||n.includes("xml")||n.includes("html"))r=await t.text();else{if(n.includes("multipart/form-data"))throw new K("[getPage] Multipart form data not supported");r=n.match(/(image|audio|video)\//)?await t.blob():await t.arrayBuffer()}return{type:n,payload:r}}throw new K(`[getPage] Failed to fetch page '${e}'`)}create(e){return N(null!==e,"[create channel] Invalid parameter (null)"),new Promise((async(t,n)=>{try{var r;if(e instanceof $e){const t=e;await t.ready,t.channelServer||(t.channelServer=this.#O),r=await t.getStorageToken(s)}else try{r=c(e)}catch(e){return void n("Invalid parameter to create() - need a token or a budget channel")}N(r,"[create channel] Failed to get storage token for the provided channel");const a=await(new $e).ready;a.channelServer=this.#O,a.create(r).then((e=>{t(e.handle)})).catch((e=>{n(e)}))}catch(e){const t=`Creating channel did not succeed: ${e}`;console.error(t),n(t)}}))}connect(e,t){let n;if("string"==typeof e)n={userPrivateKey:e};else if(n=e,!l(n))throw new K("[Snackabra.connect] Invalid parameter (not a channel handle)");if(N(void 0!==n&&n&&n.userPrivateKey,"[Snackabra.connect] Invalid parameter (at least need owner private key)"),n.channelServer&&n.channelServer!==this.#O)throw new K(`[Snackabra.connect] channel server in handle ('${n.channelServer}') does not match what SB was set up with ('${this.#O}')`);return n.channelServer||(n.channelServer=this.#O),t?new ze(n,t):new $e(n)}static async closeAll(){console.log(De,"==== Snackabra.closeAll() called ====",De),Ue.isShutdown?console.warn("closeAll() called, but it was already shutting down"):(Ue.isShutdown=!0,Ue.activeFetches.forEach((e=>e.abort("Snackabra.closeAll() called"))),Ue.activeFetches.clear(),console.log("[Snackabra] [closeAll] closing all active channel sockets:",Ue.#z),await Promise.all(Array.from(Ue.#z).map(close)),console.log("[Snackabra] [closeAll] ... waiting for everything to close ..."),await new Promise((e=>setTimeout(e,200))))}static async getServerInfo(e=Ue.defaultChannelServer){try{const t=await O(e+"/api/v2/info");return t&&t.maxMessageSetSize&&(Ue.MAX_MESSAGE_SET_SIZE=t.maxMessageSetSize),t}catch(e){return}}static traceShard(e){Ue.shardBreakpoints.add(e)}get storage(){return this.#$}async getStorageServer(){return this.storage.getStorageServer()}get crypto(){return xe}get version(){return Ue.version}}a([Ae],Ue.prototype,"storage",null),a([Ae],Ue.prototype,"getStorageServer",null);var Ve={Snackabra:Ue,Channel:$e,SBCrypto:Ee,SB384:Fe,arrayBufferToBase64url:G,base64ToArrayBuffer:q,arrayBufferToBase62:re,base62ToArrayBuffer:ae,sbCrypto:xe,setDebugLevel:w};return globalThis.SB||(globalThis.SB=Ve),console.warn(`==== SNACKABRA jslib (re)loaded, version '${Ue.version}' ====`),t})()));