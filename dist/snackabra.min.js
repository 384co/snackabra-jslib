!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.SB=t():e.SB=t()}(self,(()=>(()=>{"use strict";var e={d:(t,n)=>{for(var a in n)e.o(n,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:n[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{Channel:()=>ze,ChannelSocket:()=>qe,KeyPrefix:()=>ve,Memoize:()=>Ke,MessageBus:()=>P,MessageQueue:()=>E,NEW_CHANNEL_MINIMUM_BUDGET:()=>o,Protocol_AES_GCM_256:()=>Ue,Protocol_ECDH:()=>Ne,Ready:()=>Ae,SB:()=>Je,SB384:()=>Fe,SBApiFetch:()=>$,SBChannelKeys:()=>He,SBCrypto:()=>Be,SBError:()=>I,SBStorageTokenPrefix:()=>i,Snackabra:()=>We,StorageApi:()=>Ve,_check_SBChannelHandle:()=>h,_check_SBObjectHandle:()=>K,arrayBufferToBase62:()=>ae,arrayBufferToBase64url:()=>q,assemblePayload:()=>ye,b32decode:()=>de,b32encode:()=>le,b32process:()=>he,b62regex:()=>J,base62:()=>Q,base62ToArrayBuffer:()=>re,base62ToBase64:()=>se,base62regex:()=>Z,base64ToArrayBuffer:()=>V,base64ToBase62:()=>oe,base64url:()=>z,compareBuffers:()=>O,extractPayload:()=>we,getRandomValues:()=>_,hydrateKey:()=>Ce,isBase62Encoded:()=>Y,jsonOrString:()=>R,jsonParseWrapper:()=>x,msgTtlToSeconds:()=>k,msgTtlToString:()=>C,sbCrypto:()=>Oe,setDebugLevel:()=>S,stringify_SBObjectHandle:()=>M,stripChannelMessage:()=>w,validate_ChannelApiBody:()=>f,validate_ChannelMessage:()=>p,validate_Message:()=>y,validate_SBChannelData:()=>g,validate_SBChannelHandle:()=>d,validate_SBObjectHandle:()=>A,validate_SBStorageToken:()=>l,version:()=>s});var n,a,r=function(e,t,n,a){var r,s=arguments.length,o=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,a);else for(var i=e.length-1;i>=0;i--)(r=e[i])&&(o=(s<3?r(o):s>3?r(t,n,o):r(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o};const s="2.0.0-alpha.5 (build 087)",o=8388608,i="LM2r";function c(e){return e.hash&&"string"==typeof e.hash&&e.hash.length>0&&(!e.size||Number.isInteger(e.size)&&e.size>0)&&(!e.motherChannel||"string"==typeof e.motherChannel)&&(!e.created||Number.isInteger(e.created))&&(!e.used||"boolean"==typeof e.used)}function l(e){if(e){if(e[Re])return e;if("string"==typeof e&&e.slice(0,4)===i)return{[Re]:!0,hash:e};if(c(e))return{...e,[Re]:!0};throw v&&console.error("invalid SBStorageToken ... trying to ingest:\n",e),new I("invalid SBStorageToken")}throw new I("invalid SBStorageToken (null or undefined)")}function h(e){return e.userPrivateKey&&"string"==typeof e.userPrivateKey&&e.userPrivateKey.length>0&&(!e.channelId||"string"==typeof e.channelId&&43===e.channelId.length)&&(!e.channelServer||"string"==typeof e.channelServer)&&(!e.channelData||u(e.channelData))}function d(e){if(e){if(e[Ie])return e;if(h(e))return{...e,[Ie]:!0};throw m&&console.error("invalid SBChannelHandle ... trying to ingest:\n",e),new I("invalid SBChannelHandle")}throw new I("invalid SBChannelHandle (null or undefined)")}function u(e){return e.channelId&&43===e.channelId.length&&e.ownerPublicKey&&"string"==typeof e.ownerPublicKey&&e.ownerPublicKey.length>0&&(!e.storageToken||l(e.storageToken))}function g(e){if(e){if(u(e))return e;throw v&&console.error("invalid SBChannelData ... trying to ingest:\n",e),new I("invalid SBChannelData")}throw new I("invalid SBChannelData (null or undefined)")}function y(e){if(e){if(void 0!==e.body&&null!==e.body&&e.channelId&&"string"==typeof e.channelId&&43===e.channelId.length&&e.sender&&"string"==typeof e.sender&&43===e.sender.length&&e.senderPublicKey&&"string"==typeof e.senderPublicKey&&e.senderPublicKey.length>0&&e.senderTimestamp&&Number.isInteger(e.senderTimestamp)&&e.serverTimestamp&&Number.isInteger(e.serverTimestamp)&&e._id&&"string"==typeof e._id&&75===e._id.length)return e;throw v&&console.error("invalid Message ... trying to ingest:\n",e),new I("invalid Message")}throw new I("invalid Message (null or undefined)")}function f(e){if(e){if(e[De])return e;if(e.channelId&&43===e.channelId.length&&e.path&&"string"==typeof e.path&&e.path.length>0&&e.userId&&"string"==typeof e.userId&&43===e.userId.length&&e.userPublicKey&&e.userPublicKey.length>0&&(!e.isOwner||"boolean"==typeof e.isOwner)&&(!e.apiPayloadBuf||e.apiPayloadBuf instanceof ArrayBuffer)&&e.timestamp&&Number.isInteger(e.timestamp)&&e.sign&&e.sign instanceof ArrayBuffer)return{...e,[De]:!0};throw v&&console.error("invalid ChannelApiBody ... trying to ingest:\n",e),new I("invalid ChannelApiBody")}throw new I("invalid ChannelApiBody (null or undefined)")}function p(e){if(e){if(e[Ee])return e;if(!(e.f&&"string"==typeof e.f&&43===e.f.length&&e.c&&e.c instanceof ArrayBuffer&&e.ts&&Number.isInteger(e.ts)&&e.iv&&e.iv instanceof Uint8Array&&12===e.iv.length&&e.s&&e.s instanceof ArrayBuffer)||e.sts&&!Number.isInteger(e.sts)||e.salt&&!(e.salt instanceof ArrayBuffer&&16===e.salt.byteLength)||e._id&&("string"!=typeof e._id||86!==e._id.length)||e.ready&&"boolean"!=typeof e.ready||e.timestampPrefix&&("string"!=typeof e.timestampPrefix||26!==e.timestampPrefix.length)||e.channelId&&("string"!=typeof e.channelId||43!==e.channelId.length)||e.i2&&("string"!=typeof e.i2||!/^[a-zA-Z0-9_]{4}$/.test(e.i2))||e.ttl&&!(Number.isInteger(e.ttl)&&e.ttl>=0&&e.ttl<=15))throw m&&console.error("invalid ChannelMessage ... trying to ingest:\n",e),new I("invalid ChannelMessage");return{...e,[Ee]:!0}}throw new I("invalid ChannelMessage (null or undefined)")}function w(e,t=!1){m&&console.log("stripping message:\n",e);const n={};if(void 0===e.f)throw new I("ERROR: missing 'f' ('from') in message");if(n.f=e.f,void 0===e.c)throw new I("ERROR: missing 'ec' ('encrypted contents') in message");if(n.c=e.c,void 0!==e.iv)n.iv=e.iv;else if(1==!e.stringMessage)throw new I("ERROR: missing 'iv' ('nonce') in message");if(void 0===e.salt)throw new I("ERROR: missing 'salt' in message");if(n.salt=e.salt,void 0!==e.s)n.s=e.s;else if(1==!e.stringMessage)throw new I("ERROR: missing 's' ('signature') in message");if(void 0===e.ts)throw new I("ERROR: missing 'ts' ('timestamp') in message");if(n.ts=e.ts,void 0!==e.sts)n.sts=e.sts;else if(t)throw new I("ERROR: missing 'sts' ('servertimestamp') in message");return void 0!==e.ttl&&15!==e.ttl&&(n.ttl=e.ttl),void 0!==e.t&&(n.t=e.t),void 0!==e.i2&&"____"!==e.i2&&(n.i2=e.i2),n}var v=!1,m=!1,b=m;function S(e,t){t&&(m=e&&t),(v=e)&&console.warn("++++ [setDebugLevel]: setting DBG to TRUE ++++"),m&&console.warn("++++ [setDebugLevel]: ALSO setting DBG2 to TRUE (verbose) ++++")}b&&console.log("++++ Setting DBG0 to TRUE ++++"),globalThis.configuration&&!0===globalThis.configuration.DEBUG&&((v=!0)&&console.warn("++++ Setting DBG to TRUE based on 'configuration.DEBUG' ++++"),!0===globalThis.configuration.DEBUG2&&(m=!0,v&&console.warn("++++ ALSO setting DBG2 (verbose) ++++")));const k=[0,-1,-1,60,300,1800,14400,129600,864e3,-1,-1,-1,-1,-1,1/0],C=["Ephemeral","<reserved>","<reserved>","One minute","Five minutes","Thirty minutes","Four hours","36 hours","10 days","<reserved>","<reserved>","<reserved>","<reserved>","<reserved>","Permastore (no TTL)"],B="3";function K(e){return(!e.version||e.version===B)&&e.id&&"string"==typeof e.id&&43===e.id.length&&(!e.key||"string"==typeof e.key&&43===e.key.length)&&(!e.verification||"string"==typeof e.verification||"object"==typeof e.verification)&&(!e.iv||"string"==typeof e.iv||e.iv instanceof Uint8Array)&&(!e.salt||"string"==typeof e.salt||e.salt instanceof ArrayBuffer)}function A(e){if(e){if(e[Te])return e;if(K(e))return{...e,[Te]:!0};throw v&&console.error("invalid SBObjectHandle ... trying to ingest:\n",e),new I("invalid SBObjectHandle")}throw new I("invalid SBObjectHandle (null or undefined)")}async function M(e){return e.iv&&(e.iv="string"==typeof e.iv?e.iv:ae(e.iv)),e.salt&&(e.salt="string"==typeof e.salt?e.salt:ae(e.salt)),e.verification=await e.verification,A(e)}class P{bus={};#e(e){return this.bus[e]||(this.bus[e]=[])}subscribe(e,t){this.#e(e).push(t)}unsubscribe(e,t){let n=-1;this.bus[e]?-1!=(n=this.bus[e].findLastIndex((e=>e==t)))?this.bus[e].splice(n,1):console.info("fyi: asked to remove a handler but it's not there"):console.info("fyi: asked to remove a handler but the event is not there")}publish(e,...t){for(const n of this.#e("*"))n(e,...t);for(const n of this.#e(e))n(...t)}}class E{queue=[];resolve=null;reject=null;closed=!1;error=null;enqueue(e){if(v&&console.log(`[MessageQueue] Enqueueing. There were ${this.queue.length} messages in queue`),this.closed)throw new I("[MessageQueue] Error, trying to enqueue to closed queue");this.resolve?(this.resolve(e),this.resolve=null,this.reject=null):this.queue.push(e)}async dequeue(){if(v&&console.log(`[MessageQueue] Dequeueing. There are ${this.queue.length} messages left`),this.queue.length>0){const e=this.queue.shift();return this.closed?Promise.reject(e):(v&&console.log(_e,_e,_e,"[MessageQueue] Dequeueing. Returning item.\n",e,_e),Promise.resolve(e))}return this.closed?null:new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}isEmpty(){return 0===this.queue.length}close(e){v&&console.log(`[MessageQueue] Closing. There are ${this.queue.length} messages left. Close reason: ${e}`),this.closed=!0,this.error=e||"close",this.reject&&this.reject(this.error)}async drain(e){for(this.closed||this.close(e||"drain");this.queue.length>0;)v&&console.log(`[MessageQueue] Draining. There are ${this.queue.length} messages left.`),await new Promise((e=>setTimeout(e,0)))}}async function D(e){e.readyState!==WebSocket.CLOSED&&await new Promise((t=>{e.addEventListener("close",(()=>t()),{once:!0}),e.close()})),We.activeChannelSockets.delete(e)}class I extends Error{constructor(e){if(super(e),this.name=this.constructor.name,"function"==typeof Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error(e).stack,m){let t=null;if(this.stack){const e=this.stack.split("\n");for(let n=1;n<e.length;n++)if(e[n].trim().startsWith("at")){t=`${e[n].trim()}`;break}}null!==t?console.log("\n",_e,"SBError():\n","'"+e+"'","\n",t,"\n",_e):console.log("\n",_e,"SBError():\n",e,"\n",_e)}}}function x(e,t,n){for(;e&&"string"==typeof e;)try{e=JSON.parse(e,n)}catch(n){throw new I(`JSON.parse() error${t?` at ${t}`:""}: ${n}\nString (possibly nested) was: ${e}`)}return e}const T=/^\s*[\[\{].*[\]\}]\s*$/;function R(e){if(null===e)return null;if("string"!=typeof e)return null;if(!T.test(e))return e;try{return JSON.parse(e)}catch(e){return null}}const L=e=>e instanceof ArrayBuffer?new DataView(e):new DataView(e.buffer,e.byteOffset,e.byteLength);function O(e,t){if(typeof e!=typeof t)return!1;if(null==e||null==t)return!1;const n=L(e),a=L(t);if(n.byteLength!==a.byteLength)return!1;for(let e=0;e<n.byteLength;e++)if(n.getUint8(e)!==a.getUint8(e))return!1;return!0}function _(e){if(e.byteLength<4096)return crypto.getRandomValues(e);{N(!(e.byteLength%1024),"getRandomValues(): large requested blocks must be multiple of 1024 in size");let t=0;try{for(t=0;t<e.byteLength;t+=1024){let n=new Uint8Array(1024);crypto.getRandomValues(n),e.set(n,t)}}catch(e){console.log(`got an error on index i=${t}`),console.log(e),console.trace()}return e}}var j=async function(e,t){const n=new AbortController,a=Symbol("fetch");We.activeFetches.set(a,n);try{const a=await fetch(e,{...t,signal:n.signal});if(We.isShutdown)throw await(a.body?.cancel("shutDown")),new I("Fetch aborted (shutDown)");return a}catch(a){if(a instanceof I)throw a;const r=`${a}`;if(-1===r.indexOf("connection closed before message completed")&&-1===r.indexOf("Connection reset by peer")&&-1===r.indexOf("The connection was reset")&&-1===r.indexOf("The server closed the connection")&&-1===r.indexOf("Please try sending the request again."))throw new I(`[SBFetch] Error performing fetch() (this might be normal): ${a}`);console.warn(`... got error ('${r}'), retrying fetch() once again`);try{return await new Promise((a=>{setTimeout((()=>{a(fetch(e,{...t,signal:n.signal}))}),0)}))}catch(e){throw console.error("... got an error on retrying fetch()"),new I(`[SBFetch] Error performing fetch() (after RETRY): ${a}`)}}finally{We.activeFetches.delete(a)}};async function $(e,t){let n;try{if(n=await j(e,t),!n)throw new I("[SBApiFetch] Server did not respond (might be expected)");if(!n.ok){const e=await n.text();let t="[SBApiFetch] Server responded with error\n";throw n.status&&(t+=`  Status code: ('${n.status}')\n`),n.statusText&&(t+=`  Status text: ('${n.statusText}')\n`),e&&(t+=`  Error msg:   ('${e}')\n`),v&&console.log(t),new I(t)}const r=n.headers.get("content-type");var a;if(!r)throw new I("[SBApiFetch] No content header in server response");if(-1!==r.indexOf("application/json")){const e=await n.json();m&&console.log(`[SBApiFetch] json ('${e}'):\n`,e),a=x(e,"L489")}else{if(-1===r.indexOf("application/octet-stream"))throw-1!==r.indexOf("text/plain")?(a=await n.text(),new I(`[SBApiFetch] Server responded with text/plain (?):\n('${a}')`)):new I(`[SBApiFetch] Server responded with unknown content-type header ('${r}')`);a=we(await n.arrayBuffer()).payload}if(!a||a.error||!1===a.success){let e="[SBApiFetch] No server response, or cannot parse, or error in response";throw n.status&&(e+=" ["+n.status+"]"),a?.error&&(e+=": "+a.error),m&&console.error("[SBApiFetch] error:\n",e),new I(e)}return m&&console.log("[SBApiFetch] Success:\n",_e,e,"\n",_e,a,"\n",_e),a}catch(e){throw m&&console.error(`[SBApiFetch] caught error: ${e}`),n&&n.body&&!n.body.locked&&(m&&console.log("[SBApiFetch] cancelling response body"),await n.body.cancel()),e instanceof I?e:new I(`[SBApiFetch] caught error: ${e}`)}}function F(e){const t=" *ErrorStart* ",n=" *ErrorEnd* ";return e instanceof I?e:e instanceof Error?(v&&console.error("[WrapError] Error: \n",e),new I(t+e.message+n)):new I(t+String(e)+n)}function U(e,t){throw new I("[_sb_exception] << SB lib error ("+e+": "+t+") >>")}function N(e,t){if(!e){const e=` <<<<[_sb_assert] assertion failed: '${t}'>>>> `;throw v&&console.trace(e),new I(e)}}function H(e,t){const n=new Uint8Array(e.byteLength+t.byteLength);return n.set(new Uint8Array(e),0),n.set(new Uint8Array(t),e.byteLength),n.buffer}const z="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",G=/^([A-Za-z0-9\-_]*)(={0,2})$/;function q(e){const t=e instanceof ArrayBuffer?new Uint8Array(e):e;let n="";for(let e=0;e<t.length;e+=3){const a=t[e],r=t[e+1],s=t[e+2];n+=z[a>>2]+z[(3&a)<<4|r>>4]+(void 0!==r?z[(15&r)<<2|s>>6]:"")+(void 0!==s?z[63&s]:"")}return n}function V(e){if(e=e.replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,""),!G.test(e))throw new I(`invalid character in b64 string (after cleanup: '${e}')`);const t=e.length,n=new Uint8Array(3*t/4);for(let a=0,r=0;a<t;a+=4){const[t,s,o,i]=[e[a],e[a+1],e[a+2],e[a+3]].map((e=>z.indexOf(e)));n[r++]=t<<2|s>>4,-1!==o&&(n[r++]=(15&s)<<4|o>>2),-1!==i&&(n[r++]=(3&o)<<6|i)}return n}const Q="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",W=Q[0],J=/^[A-Za-z0-9]*$/,Z=J;function Y(e){return J.test(e)}const X=32,ee=new Map,te=new Map;for(let e=1;e<=X;e++){const t=Math.ceil(8*e/Math.log2(62));ee.set(e,t),te.set(t,e)}const ne=ee.get(X);function ae(e){function t(e,t){let n="",a=0n;for(const t of e)a=a<<8n|BigInt(t);for(;a>0n;a/=62n)n=Q[Number(a%62n)]+n;return n.padStart(ee.get(t),W)}if(null==e)throw new I("arrayBufferToBase62: buffer is null or undefined");const n=e instanceof ArrayBuffer?new Uint8Array(e):e;let a="";for(let e,r=n.byteLength,s=0;r>0;s+=e,r-=e)e=r>=X?X:r,a+=t(n.slice(s,s+e),e);return a}function re(e){if(!J.test(e))throw new I("base62ToArrayBuffer32: must be alphanumeric (0-9A-Za-z).");function t(e,t){try{let n=0n,a=new Uint8Array(t);for(let t=0;t<e.length;t++)n=62n*n+BigInt(Q.indexOf(e[t]));if(n>2n**BigInt(8*t)-1n)throw new I("base62ToArrayBuffer: Invalid Base62 string.");for(let e=t-1;e>=0;e--,n>>=8n)a[e]=Number(0xffn&n);return a}catch(e){throw new I("base62ToArrayBuffer: Invalid Base62 string.")}}try{let n=0,a=new Uint8Array(6*e.length/8);for(let r,s,o=0;o<e.length;o+=r,n+=s.byteLength)r=Math.min(e.length-o,ne),s=t(e.slice(o,o+r),te.get(r)),a.set(s,n);return a.buffer.slice(0,n)}catch(e){throw e}}function se(e){return q(re(e))}function oe(e){return ae(V(e))}const ie="0123456789ADMRTxQjrEywcLBdHpNufk",ce=new RegExp(`[${ie}.concat(' ')]`);function le(e){const t=ie;if(e<0||e>524287)throw new Error("Input number is out of range. Expected a 19-bit integer.");let n=[e>>14&31,e>>9&31,e>>4&31,15&e];return n[3]|=16&(n[0]^n[1]^n[2]),n.map((e=>t[e])).join("")}function he(e){const t={o:"0",O:"0",i:"1",I:"1",l:"1",z:"2",Z:"2",s:"5",S:"5",b:"6",G:"6",a:"9",g:"9",q:"9",m:"M",t:"T",X:"x",J:"j",e:"E",Y:"y",W:"w",C:"c",P:"p",n:"N",h:"N",U:"u",v:"u",V:"u",F:"f",K:"k"};let n="";for(let a of e)n+=t[a]||a;return n}function de(e){if(!ce.test(e))throw new Error(`Input string contains invalid characters (${e}) - use 'process()'.`);let t=Array.from(e).map((e=>ie.indexOf(e)));return 16&t.reduce(((e,t)=>e^t))?null:16*(32*(32*t[0]+t[1])+t[2])+(15&t[3])}function ue(e){if(null===e)return"0";if(void 0===e)return"u";if(Array.isArray(e))return"a";if(e instanceof ArrayBuffer)return"x";if(e instanceof Uint8Array)return"8";if("boolean"==typeof e)return"b";if(e instanceof DataView)return"v";if(e instanceof Date)return"d";if(e instanceof Map)return"m";if("number"==typeof e)return"number"==typeof(t=e)&&t>=-2147483648&&t<=2147483647&&t%1==0?"i":"n";var t;if(null!==e&&"object"==typeof e&&e.constructor===Object)return"o";if(e instanceof Set)return"t";if("string"==typeof e)return"s";if(e instanceof WeakRef)return"w";if("object"==typeof e&&"function"==typeof e.then)console.error("[getType] Trying to serialize a Promise - did you forget an 'await'?");else{if("object"==typeof e&&"function"==typeof e.toJSON)return"j";console.error("[getType] Unsupported for object:",e)}throw new I("Unsupported type")}function ge(e){try{const t={};let n=0,a=0,r=[];for(const s in e)if(e.hasOwnProperty(s)){const o=e[s],i=ue(o);switch(i){case"o":const e=ge(o);if(!e)throw new I(`Failed to assemble payload for ${s}`);r.push(e);break;case"j":const t=(new TextEncoder).encode(JSON.stringify(o));r.push(t.buffer);break;case"n":const n=new Uint8Array(8);new DataView(n.buffer).setFloat64(0,o),r.push(n.buffer);break;case"i":const a=new Uint8Array(4);new DataView(a.buffer).setInt32(0,o),r.push(a.buffer);break;case"d":const c=new Uint8Array(8);new DataView(c.buffer).setFloat64(0,o.getTime()),r.push(c.buffer);break;case"b":const l=new Uint8Array(1);l[0]=o?1:0,r.push(l.buffer);break;case"s":const h=(new TextEncoder).encode(o);r.push(h);break;case"x":r.push(o);break;case"8":r.push(o.buffer);break;case"m":const d=new Array;o.forEach(((e,t)=>{d.push([t,e])}));const u=ge(d);if(!u)throw new I(`Failed to assemble payload for ${s}`);r.push(u);break;case"a":const g=new Array;o.forEach((e=>{g.push(e)}));const y=ge(g);if(!y)throw new I(`Failed to assemble payload for ${s}`);r.push(y);break;case"t":const f=new Array;o.forEach((e=>{f.push(e)}));const p=ge(f);if(!p)throw new I(`Failed to assemble payload for ${s}`);r.push(p);break;case"w":case"0":case"u":r.push(new ArrayBuffer(0));break;default:throw console.error(`[assemblePayload] Unsupported type: ${i}`),new I(`Unsupported type: ${i}`)}const c=r[r.length-1].byteLength;n++,t[n.toString()]={n:s,s:a,z:c,t:i},a+=c}const s=(new TextEncoder).encode(JSON.stringify(t)),o=new Uint32Array([s.byteLength]);let i=H(new Uint8Array(o.buffer),new Uint8Array(s));for(let e=0;e<r.length;e++)i=H(new Uint8Array(i),r[e]);return i}catch(e){return console.error(e),null}}function ye(e){v&&e instanceof ArrayBuffer&&console.warn("[assemblePayload] Warning: data is already an ArrayBuffer, make sure you are not double-encoding");const t=ge({ver003:!0,payload:e});return t?H(new Uint8Array([170,187,187,170]),t):null}function fe(e,t){switch(t){case"o":return pe(e);case"j":return x((new TextDecoder).decode(e),"L1322");case"n":return new DataView(e).getFloat64(0);case"i":return new DataView(e).getInt32(0);case"d":return new Date(new DataView(e).getFloat64(0));case"b":return 1===new Uint8Array(e)[0];case"s":return(new TextDecoder).decode(e);case"a":const n=pe(e);if(!n)throw new I(`Failed to assemble payload for ${t}`);return Object.values(n);case"m":const a=pe(e);if(!a)throw new I(`Failed to assemble payload for ${t}`);const r=new Map;for(const e in a)r.set(a[e][0],a[e][1]);return r;case"t":const s=pe(e);if(!s)throw new I(`Failed to assemble payload for ${t}`);const o=new Set;for(const e in s)o.add(s[e]);return o;case"x":return e;case"8":return new Uint8Array(e);case"0":return null;case"u":return;default:throw new I(`Unsupported type: ${t}`)}}function pe(e){const t="Cannot parse metadata, this is not a well-formed payload";try{const n=new Uint32Array(e.slice(0,4))[0],a=(new TextDecoder).decode(e.slice(4,4+n));let r;try{r=x(a,"L1290")}catch(e){throw new I(t)}const s=4+n,o={};for(let t=1;t<=Object.keys(r).length;t++){const n=t.toString();if(r[n]){const t=r[n],a=t.s,i=t.z,c=t.t,l=e.slice(s+a,s+a+i);o[t.n]=fe(l,c)}else console.log(`found nothing for index ${t}`)}return o}catch(e){if(e instanceof Error&&e.message===t)throw e;throw new I("[extractPayload] exception <<"+e+">> [/extractPayload]")}}function we(e){const t="Invalid payload signature (this is not a payload)";if(2864429994!==new Uint32Array(e,0,1)[0])throw v&&console.error("\n",_e,t,"\n",e,_e),new I(t);return pe(e.slice(4))}var ve,me;function be(e){"string"==typeof e&&(e=V(e));const t=new Uint8Array(e);return 1==(1&t[t.length-1])?1:0}function Se(e){try{if(e.length<=4)return;const t=e.slice(0,4),n=e.slice(4);switch(t.slice(0,3)){case ve.SBPublicKey:switch(t[3]){case me.Uncompressed:{const e=re(n);if(96!==e.byteLength)return;const t=e.slice(48,96);return{x:q(e.slice(0,48)),y:q(t),ySign:be(t)}}case me.CompressedEven:case me.CompressedOdd:{const e=t[3]===me.CompressedEven?0:1,a=re(n);if(48!==a.byteLength)return;const{x:r,y:s}=$e(q(a),e);return{x:r,y:s,ySign:e}}default:console.error("KeySubPrefix not recognized")}break;case ve.SBPrivateKey:switch(t[3]){case me.Uncompressed:{const e=re(n);if(144!==e.byteLength)return;const t=e.slice(48,96);return{x:q(e.slice(0,48)),y:q(t),ySign:be(t),d:q(e.slice(96,144))}}case me.CompressedEven:case me.CompressedOdd:{const e=t[3]===me.CompressedEven?0:1,a=re(n);if(96!==a.byteLength)return;const r=a.slice(0,48),{x:s,y:o}=$e(q(r),e);return{x:s,y:o,ySign:e,d:q(a.slice(48,96))}}case me.Dehydrated:return void console.error("parseSB384string() - you need to rehydrate first ('hydrateKey()')");default:console.error("KeySubPrefix not recognized")}break;default:console.error("KeyPrefix not recognized")}return}catch(e){return void console.error("parseSB384string() - malformed input, exception: ",e)}}function ke(e,t,n){if(!e||64!==e.length||!t||64!==t.length||void 0===n)return;const a=new Uint8Array(96);return a.set(V(e),0),a.set(V(t),48),ve.SBPrivateKey+(0===n?me.CompressedEven:me.CompressedOdd)+ae(a)}function Ce(e,t){if(e.length<=4)return;const n=e.slice(0,4);switch(n.slice(0,3)){case ve.SBPublicKey:return e;case ve.SBPrivateKey:switch(n[3]){case me.Uncompressed:case me.CompressedEven:case me.CompressedOdd:return e;case me.Dehydrated:{if(!t)return void console.error("hydrateKey() - you need to provide pubKey to hydrate");const n=q(re(e.slice(4)).slice(0,48)),a=Se(t);return a&&a.x&&void 0!==a.ySign?ke(a.x,n,a.ySign):void console.error("hydrateKey() - failed to parse public key")}default:console.error("KeySubPrefix not recognized")}break;default:console.error("KeyPrefix not recognized")}}!function(e){e.SBPublicKey="PNk",e.SBPrivateKey="Xj3",e.SBDehydratedKey="XjZ"}(ve||(ve={})),function(e){e.CompressedEven="2",e.CompressedOdd="3",e.Uncompressed="4",e.Dehydrated="x"}(me||(me={}));class Be{generateIdKey(e){if(!(e instanceof ArrayBuffer))throw new TypeError("Input must be an ArrayBuffer");return new Promise(((t,n)=>{try{crypto.subtle.digest("SHA-512",e).then((e=>{const n=e.slice(0,32),a=e.slice(32);t({idBinary:n,keyMaterial:a})}))}catch(e){n(e)}}))}async generateKeys(){try{return await crypto.subtle.generateKey({name:"ECDH",namedCurve:"P-384"},!0,["deriveKey"])}catch(e){throw new I("generateKeys() exception ("+e+")")}}async importKey(e,t,n,a,r){try{let s;const o={ECDH:{name:"ECDH",namedCurve:"P-384"},AES:{name:"AES-GCM"},PBKDF2:"PBKDF2"};if("jwk"===e){const e=t;if(void 0===e.kty)throw new I("importKey() - invalid JsonWebKey");"ECDH"===e.alg&&(e.alg=void 0),s=await crypto.subtle.importKey("jwk",e,o[n],a,r)}else s=await crypto.subtle.importKey(e,t,o[n],a,r);return s}catch(s){const o=`... importKey() error: ${s}:`;throw v&&(console.log(_e,_e),console.error(o),console.log(e),console.log(t),console.log(n),console.log(a),console.log(r),console.log(_e,_e)),new I(o)}}async exportKey(e,t){return crypto.subtle.exportKey(e,t).catch((()=>{v&&console.warn("... exportKey() protested, this just means we treat this as undefined")}))}async encrypt(e,t,n){if(null===e)throw new I("no contents");if(!n.iv)throw new I("no nonce");return n.name?N("AES-GCM"===n.name,"Must be AES-GCM (L1951)"):n.name="AES-GCM",crypto.subtle.encrypt(n,t,e)}async wrap(e,t,n,a,r){const s=ye(e),o=crypto.getRandomValues(new Uint8Array(12)),i=await We.dateNow(),c=new DataView(new ArrayBuffer(8));return c.setFloat64(0,i),{f:t,c:await Oe.encrypt(s,n,{iv:o,additionalData:c}),iv:o,salt:a,s:await Oe.sign(r,s),ts:i}}sign(e,t){return crypto.subtle.sign({name:"ECDSA",hash:{name:"SHA-384"}},e,t)}verify(e,t,n){return crypto.subtle.verify({name:"ECDSA",hash:{name:"SHA-384"}},e,t,n)}str2ab(e){return(new TextEncoder).encode(e)}ab2str(e){return new TextDecoder("utf-8").decode(e)}}function Ke(e,t,n){if(n&&n.get){let a=n.get;n.get=function(){const n=`__${e.constructor.name}__${t}__`;if(this.hasOwnProperty(n))return this[n];{const e=a.call(this);return Object.defineProperty(this,n,{configurable:!1,enumerable:!1,writable:!1,value:e}),e}}}}function Ae(e,t,n){if(n&&n.get){let a=n.get;n.get=function(){const n=e.constructor.name,r=e.constructor.ReadyFlag;N(r in this,"'readyFlagSymbol' missing yet getter accessed with @Ready pattern (fatal)"),N(this[r],`'${n}.${t}' getter accessed but object not 'ready' (fatal)`);const s=a.call(this);return N(null!=s,`'${n}.${t}' getter accessed but return value will be NULL (fatal)`),s}}}function Me(e,t,n){if(n&&n.get){let a=n.get;n.get=function(){const n=e.constructor.name;return"owner"in this&&N(!0===this.owner,`${t} getter or method accessed for object ${n} but callee is not channel owner`),a.call(this)}}}const Pe=["SBMessage","SBObjectHandle","SBChannelHandle","ChannelApiBody"],Ee=Symbol("SB_CHANNEL_MESSAGE_SYMBOL"),De=Symbol("SB_CHANNEL_API_BODY_SYMBOL"),Ie=Symbol("SBChannelHandle"),xe=Symbol.for("SBMessage"),Te=Symbol.for("SBObjectHandle"),Re=Symbol.for("SBStorageToken");function Le(e,t){switch(t){case"SBMessage":return xe in e;case"SBObjectHandle":case"SBChannelHandle":return Te in e;default:return!1}}const Oe=new Be,_e="\n"+"=".repeat(76)+"\n",je="=".repeat(76)+"\n";function $e(e,t){const n=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff"),a=BigInt("0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef"),r=(n+1n)/4n,s=new Uint8Array(V(e)),o="0x"+Array.from(s,(e=>e.toString(16).padStart(2,"0"))).join("");var i=BigInt(o),c=function(e,t,n){if(1n===n)return 0n;let a=1n;for(e%=n;t>0n;)t%2n===1n&&(a=a*e%n),t>>=1n,e=e*e%n;return a}(i*i*i-3n*i+a,r,n);c%2n!==BigInt(t)&&(c=n-c);const l=c.toString(16).padStart(96,"0");return{x:e,y:q(new Uint8Array(l.match(/.{1,2}/g).map((e=>parseInt(e,16)))))}}class Fe{sb384Ready;static ReadyFlag=Symbol("SB384ReadyFlag");#t;#n;#a;#r;#s;#o;#i;#c;#l;#h;constructor(e,t){this[Fe.ReadyFlag]=!1,this.sb384Ready=new Promise((async(n,a)=>{try{if(e)if(e instanceof CryptoKey){const n=await Oe.exportKey("jwk",e);N(n&&n.x&&n.y,"INTERNAL"),n.d?(this.#t=!0,this.#s=n.d):(this.#t=!1,N(!t,"ERROR creating SB384 object: key provided is not the requested private")),this.#n=n.x,this.#a=n.y}else if(e&&e instanceof Object&&"kty"in e){const n=e;N(n&&n.x&&n.y,"Cannot parse format of JWK key"),e.d?(this.#t=!0,this.#s=n.d):(this.#t=!1,N(!t,"ERROR creating SB384 object: key provided is not the requested private")),this.#n=n.x,this.#a=n.y}else{if("string"!=typeof e)throw new I("ERROR creating SB384 object: invalid key (must be a JsonWebKey, SBUserId, or omitted)");{const n=Se(e);if(!n)throw new I("ERROR creating SB384 object: invalid key (must be a JsonWebKey | SBUserPublicKey | SBUserPrivateKey, or omitted)");const{x:a,y:r,d:s}=n;s?(this.#t=!0,this.#s=s):(this.#t=!1,N(!t,"ERROR creating SB384 object: key provided is not the requested private")),N(a&&r,"INTERNAL"),this.#n=a,this.#a=r}}else{m&&console.log("SB384() - generating new key pair");const e=await Oe.generateKeys(),t=await Oe.exportKey("jwk",e.privateKey);N(t&&t.x&&t.y&&t.d,"INTERNAL"),this.#t=!0,this.#n=t.x,this.#a=t.y,this.#s=t.d,m&&console.log("#### FROM SCRATCH",this.#t)}if(m&&console.log("SB384() constructor; x/y/d:\n",this.#n,"\n",this.#a,"\n",this.#s),this.#t&&(this.#o=await Oe.importKey("jwk",this.jwkPrivate,"ECDH",!0,["deriveKey"])),this.#i=await Oe.importKey("jwk",this.jwkPublic,"ECDH",!0,[]),this.#t){const e={...this.jwkPrivate,key_ops:["sign"]};m&&console.log("starting jwk (private):\n",e),this.#c=await crypto.subtle.importKey("jwk",e,{name:"ECDSA",namedCurve:"P-384"},!0,["sign"])}else{const e={...this.jwkPublic,key_ops:["verify"]};m&&console.log("starting jwk (public):\n",e),this.#c=await crypto.subtle.importKey("jwk",e,{name:"ECDSA",namedCurve:"P-384"},!0,["verify"])}const a=H(V(this.#n),V(this.#a)),r=await crypto.subtle.digest("SHA-256",a);this.#l=ae(r);const s=BigInt("0x"+Array.from(new Uint8Array(r)).map((e=>e.toString(16).padStart(2,"0"))).join(""))>>28n;this.#h=Array.from({length:12},((e,t)=>le(Number(s>>BigInt(19*(11-t))&0x7ffffn)))).join(""),m&&console.log("SB384() constructor; hash:\n",this.#l),this.#r=be(this.#a),m&&console.log("SB384() - constructor wrapping up",this),this[Fe.ReadyFlag]=!0,n(this)}catch(e){a("ERROR creating SB384 object failed: "+F(e))}}))}get SB384ReadyFlag(){return this[Fe.ReadyFlag]}get ready(){return this.sb384Ready}get private(){return this.#t}get hash(){return this.#l}get hashB32(){return this.#h}get userId(){return this.hash}get ownerChannelId(){return this.hash}get privateKey(){if(!this.private)throw new I("this is a public key, there is no 'privateKey' value");return this.#o}get signKey(){return this.#c}get publicKey(){return this.#i}get jwkPrivate(){return N(this.#t,"jwkPrivate() - not a private key"),N(this.#n&&this.#a&&this.#s,"JWK key info is not available (fatal)"),{crv:"P-384",ext:!0,key_ops:["deriveKey"],kty:"EC",x:this.#n,y:this.#a,d:this.#s}}get jwkPublic(){return N(this.#n&&this.#a,"JWK key info is not available (fatal)"),{crv:"P-384",ext:!0,key_ops:[],kty:"EC",x:this.#n,y:this.#a}}get ySign(){return N(null!==this.#r,"ySign() - ySign is not available (fatal)"),this.#r}get userPublicKey(){return N(this.#n&&void 0!==this.#r,"userPublicKey() - sufficient key info is not available (fatal)"),ve.SBPublicKey+(0===this.#r?me.CompressedEven:me.CompressedOdd)+oe(this.#n)}get userPrivateKey(){N(this.#t,"userPrivateKey() - not a private key, there is no userPrivateKey");const e=ke(this.#n,this.#s,this.#r);return N(void 0!==e,"userPrivateKey() - failed to construct key, probably missing info (fatal)"),e}get userPrivateKeyDehydrated(){return N(this.#t&&this.#s,"userPrivateKey() - not a private key, and/or 'd' is missing, there is no userPrivateKey"),ve.SBPrivateKey+me.Dehydrated+oe(this.#s)}}r([Ke,Ae],Fe.prototype,"private",null),r([Ke,Ae],Fe.prototype,"hash",null),r([Ke,Ae],Fe.prototype,"hashB32",null),r([Ke,Ae],Fe.prototype,"userId",null),r([Ke,Ae],Fe.prototype,"ownerChannelId",null),r([Ke,Ae],Fe.prototype,"privateKey",null),r([Ke,Ae],Fe.prototype,"signKey",null),r([Ke,Ae],Fe.prototype,"publicKey",null),r([Ke],Fe.prototype,"jwkPrivate",null),r([Ke],Fe.prototype,"jwkPublic",null),r([Ke],Fe.prototype,"ySign",null),r([Ke],Fe.prototype,"userPublicKey",null),r([Ke],Fe.prototype,"userPrivateKey",null),r([Ke],Fe.prototype,"userPrivateKeyDehydrated",null);class Ue{#d;#u;constructor(e,t){this.#u=t,this.#d=this.initializeMasterKey(e)}setChannel(e){}async initializeMasterKey(e){const t=this.#u.salt1,n=this.#u.iterations1,a=this.#u.hash1;N(t&&n&&a,"Protocol_AES_GCM_256.initializeMasterKey() - insufficient key info (fatal)");const r=await crypto.subtle.importKey("raw",(new TextEncoder).encode(e),{name:"PBKDF2"},!1,["deriveBits","deriveKey"]),s=await crypto.subtle.deriveBits({name:"PBKDF2",salt:t,iterations:n,hash:a},r,256);return crypto.subtle.importKey("raw",s,{name:"PBKDF2"},!1,["deriveBits","deriveKey"])}static async genKey(){return{salt1:crypto.getRandomValues(new Uint8Array(16)).buffer,iterations1:1e5,iterations2:1e4,hash1:"SHA-256",summary:"PBKDF2 - SHA-256 - AES-GCM"}}async#g(e){return await crypto.subtle.deriveKey({name:"PBKDF2",salt:e,iterations:this.#u.iterations2,hash:this.#u.hash1},await this.#d,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"])}async encryptionKey(e){return N(e.salt,"Protocol called without salt (Internal Error)"),m&&console.log("CALLING Protocol_AES_GCM_384.encryptionKey(), salt:",e.salt),this.#g(e.salt)}async decryptionKey(e,t){if(t.salt)return v&&console.log("CALLING Protocol_AES_GCM_384.decryptionKey(), salt:",t.salt),this.#g(t.salt);console.warn("Salt should always be present in ChannelMessage")}}class Ne{#y;#f=new Map;constructor(){}setChannel(e){this.#y=e}async encryptionKey(e){N(this.#y,"[Protocol_ECDH] Error, need to know channel (L2511)"),await this.#y.ready;const t=this.#y.channelId;N(t,"Internal Error (L2565)");const n=e.t?e.t:this.#y.channelData.ownerPublicKey;return this.#p(t,n,this.#y.privateKey)}async decryptionKey(e,t){await e.ready;const n=e.channelId;N(n,"Internal Error (L2594)");const a=e.visitors.get(t.f);if(a)return this.#p(n,a,e.privateKey);console.error("Protocol_ECDH.key() - sentFrom is unknown")}async#p(e,t,n){const a=e+"_"+t;if(!this.#f.has(a)){const e=await crypto.subtle.deriveKey({name:"ECDH",public:(await new Fe(t).ready).publicKey},n,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]);this.#f.set(a,e),m&&console.log("++++ Protocol_ECDH.key() - newKey:",e)}const r=this.#f.get(a);return N(r,"Internal Error (L2584/2611)"),m&&console.log("++++ Protocol_ECDH.key() - res:",r),r}}class He extends Fe{#w;sbChannelKeysReady;static ReadyFlag=Symbol("SBChannelKeysReadyFlag");#v;channelServer;constructor(e){let t;if(null===e)throw new I("SBChannelKeys constructor: you cannot pass 'null'");if(e)if("string"==typeof e)super(e,!0);else{if(!h(e))throw new I("SBChannelKeys() constructor: invalid parameter (must be SBChannelHandle or SBUserPrivateKey)");{const n=d(e);t=n.channelServer,super(n.userPrivateKey,!0),this.#w=n.channelId,this.#v=n.channelData}}else super();t||(t=We.defaultChannelServer),"/"===t[t.length-1]&&(this.channelServer=t.slice(0,-1)),this.channelServer=t,this[He.ReadyFlag]=!1,this.sbChannelKeysReady=new Promise((async(e,t)=>{try{if(v&&console.log("SBChannelKeys() constructor."),await this.sb384Ready,N(this.private,"Internal Error (L2476)"),this.#w){if(!this.#v){if(!this.channelServer)throw new I("SBChannelKeys() constructor: either key is owner key, or handle contains channelData, or channelServer is provided ...");v&&console.log("++++ SBChannelKeys being initialized from server");var n=await this.callApi("/getChannelKeys");N((n=g(n)).channelId===this.#w,"Internal Error (L2493)"),this.#v=n}}else this.#w=this.ownerChannelId,this.#v={channelId:this.#w,ownerPublicKey:this.userPublicKey};this[He.ReadyFlag]=!0,e(this)}catch(e){t("[SBChannelKeys] constructor failed. "+F(e))}}))}get ready(){return this.sbChannelKeysReady}get SBChannelKeysReadyFlag(){return this[He.ReadyFlag]}get channelData(){return this.#v}get owner(){return this.private&&this.ownerChannelId&&this.channelId&&this.ownerChannelId===this.channelId}get channelId(){return this.#w}get handle(){return{[Ie]:!0,channelId:this.channelId,userPrivateKey:this.userPrivateKey,channelServer:this.channelServer,channelData:this.channelData}}async buildApiBody(e,t){await this.sb384Ready;const n=await We.dateNow(),a=new ArrayBuffer(8);new DataView(a).setFloat64(0,n);const r=H(a,(new TextEncoder).encode(e).buffer),s=t?ye(t):void 0,o=await Oe.sign(this.signKey,s?H(r,s):r),i={channelId:this.#w,path:e,userId:this.userId,userPublicKey:this.userPublicKey,timestamp:n,sign:o};return s&&(i.apiPayloadBuf=s),f(i)}callApi(e,t){return N(this.channelServer,"[ChannelApi.callApi] channelServer is unknown (you can just set it, eg 'channel.channelServer = ...')"),v&&console.log("ChannelApi.callApi: calling fetch with path:",e),m&&console.log("... and body:",t),N(this.#w&&e,"Internal Error (L2528)"),new Promise((async(n,a)=>{const r={method:"POST",headers:{"Content-Type":'application/octet-stream"'},body:ye(await this.buildApiBody(e,t))};m&&console.log("==== ChannelApi.callApi: calling fetch with init:\n",r),$(this.channelServer+"/api/v2/channel/"+this.#w+e,r).then((e=>{n(e)})).catch((e=>{a(e instanceof I?e:"[Channel.callApi] Error: "+F(e))}))}))}}r([Ke,Ae],He.prototype,"channelData",null),r([Ke,Ae],He.prototype,"owner",null),r([Ke,Ae],He.prototype,"channelId",null),r([Ke,Ae],He.prototype,"handle",null);class ze extends He{protocol;channelReady;static ReadyFlag=Symbol("ChannelReadyFlag");locked=!1;static defaultProtocol=new Ne;visitors=new Map;sendQueue=new E;constructor(e,t=ze.defaultProtocol){this.protocol=t,v&&console.log("Channel() constructor called with handleOrKey:\n",e),null===e?super():super(e),this.messageQueueManager(),this.channelReady=this.sbChannelKeysReady.then((()=>(this.visitors.set(this.channelId,this.channelData.ownerPublicKey),this[ze.ReadyFlag]=!0,this.protocol.setChannel(this),this))).catch((e=>{throw e}))}get ready(){return this.channelReady}get ChannelReadyFlag(){return this[ze.ReadyFlag]}get api(){return this}async extractMessage(e){if(e){if(m&&console.log("[extractMessage] Extracting message:",e),e instanceof ArrayBuffer)throw new I("[Channel.extractMessage] Message is an ArrayBuffer (did you forget extractPayload()?)");try{if(!(e=p(e)))return void(b&&console.warn("++++ [extractMessage]: message is not valid (probably an error)",e));const t=e.f;if(!t)return void console.error("++++ [extractMessage]: no sender userId hash in message (probably an error)");if(!this.visitors.has(t)){b&&console.log("++++ [extractMessage]: need to update visitor table ...");const e=await this.callApi("/getPubKeys");if(!(e&&e instanceof Map))return void(b&&console.error("++++ [extractMessage]: visitorMap is not valid (probably an error)"));b&&console.log(_e,"visitorMap:\n",e,"\n",_e);for(const[t,n]of e)b&&console.log("++++ [extractMessage]: adding visitor:",t,n),this.visitors.set(t,n)}N(this.visitors.has(t),`Cannot find sender userId hash ${t} in public key map`),N(this.protocol,"Protocol not set (internal error)");const n=await(this.protocol?.decryptionKey(this,e));if(!n)return void((b||v)&&console.error("++++ [extractMessage]: no decryption key provided by protocol (probably an error)"));if(!e.ts)throw new I("unwrap() - no timestamp in encrypted message");const{c:a,iv:r}=e;N(a,"[unwrap] No contents in encrypted message (probably an error)");const s=new DataView(new ArrayBuffer(8));let o;s.setFloat64(0,e.ts);try{o=await crypto.subtle.decrypt({name:"AES-GCM",iv:r,additionalData:s},n,a)}catch(e){return void((b||v)&&console.error("[extractMessage] Could not decrypt message (exception) [L2898]:",e.message))}e._id||(e._id=ze.composeMessageKey(this.channelId,e.sts,e.i2)),void 0!==e.ttl&&15!==e.ttl&&console.warn(`[extractMessage] TTL->EOL missing (TTL set to ${e.ttl}) [L2762]`);const i={body:we(o).payload,channelId:this.channelId,sender:t,senderPublicKey:this.visitors.get(t),senderTimestamp:e.ts,serverTimestamp:e.sts,_id:e._id};return m&&console.log("[Channel.extractMessage] Extracted message (before validation):",i.body),y(i)}catch(e){return void((b||v)&&console.error("[extractMessage] Could not process message (exception) [L2782]:",e.message))}}}async extractMessageMap(e){const t=new Map;for(const[n,a]of e){const e=await this.extractMessage(a);e&&t.set(n,e)}return t}packageMessage(e,t={}){m&&console.log("[Channel#packageMessage] - contents:\n",e,"options:\n",t);let n={f:this.userId,unencryptedContents:e};if(t){if(t.sendTo&&(n.t=t.sendTo),t.subChannel)throw new I("wrapMessage(): subChannel not yet supported");t.sendString&&(N("string"==typeof e,"[packageMessage] sendString is true, but contents is not a string"),N(!t.ttl,"[packageMessage] sendString implies TTL=0"),n.ttl=0,n.stringMessage=!0)}return!0!==n.stringMessage&&(n.protocol=t.protocol?t.protocol:this.protocol,n.ttl||(n.ttl=15),n.salt||(n.salt=crypto.getRandomValues(new Uint8Array(16)).buffer),n.iv||(n.iv=crypto.getRandomValues(new Uint8Array(12)))),n}async finalizeMessage(e){e.ts||(e.ts=await We.dateNow()),N(!(!0===e.stringMessage),"[Channel.finalizeMessage()] stringMessage is true, finalizing should not be called (internal error)");const t=ye(e.unencryptedContents);N(t,"wrapMessage(): failed to assemble payload"),N(t.byteLength<65536,`[Channel.finalizeMessage]: body must be smaller than 64 KiB (we got ${t.byteLength/1024} KiB)})`),e.ts=await We.dateNow();const n=new DataView(new ArrayBuffer(8));return n.setFloat64(0,e.ts),N(e.protocol,"[Channel.finalizeMessage()] Protocol not set (internal error)"),e.c=await Oe.encrypt(t,await e.protocol.encryptionKey(e),{iv:e.iv,additionalData:n}),e.s=await Oe.sign(this.signKey,e.c),w(e)}#m(e){return new Promise((async(t,n)=>{await this.ready;const a=!0===e.stringMessage?e.unencryptedContents:await this.finalizeMessage(e);await this.callApi("/send",a).then((e=>{t(e)})).catch((e=>{n(e)}))}))}async send(e,t={}){return new Promise((async(n,a)=>{m&&console.log(_e,"[Channel.send] called.",_e,"contents:\n",e);const r=await this.packageMessage(e,t);m&&console.log(_e,"packed message:\n",r),this.sendQueue.enqueue({msg:r,resolve:n,reject:a,_send:this.#m.bind(this),retryCount:Ge}),m&&console.log(je)}))}create(e,t=this.channelServer){return v&&console.log("==== Channel.create() called with storageToken:",e,"and channelServer:",t),N(null!==e,"[Channel.create] Missing storage token"),t&&(this.channelServer=t),N(this.channelServer,"[Channel.create] Missing channel server (neither provided nor in channelKeys)"),new Promise((async(n,a)=>{await this.channelReady,this.channelData.storageToken=l(e),v&&console.log("Will try to create channel with channelData:",this.channelData),this.callApi("/budd",this.channelData).then((()=>{this.channelServer=t,N(this.channelData&&this.channelData.channelId&&this.userPrivateKey,"Internal Error [L2546]"),n(this)})).catch((e=>{a("Channel.create() failed: "+F(e))}))}))}getLastMessageTimes(){throw new I("Channel.getLastMessageTimes(): deprecated")}getLatestTimestamp(){return this.callApi("/getLatestTimestamp")}async messageQueueManager(){for(v&&console.log(_e,"[messageQueueManager] Channel message queue is starting up",_e),await this.ready,v&&console.log(_e,"[messageQueueManager] ... continuing to start up",_e);;)await this.sendQueue.dequeue().then((async e=>{if(v&&console.log(_e,"[messageQueueManager] ... pulled 'msg' from queue:\n",e?.msg.unencryptedContents,_e),e){v&&console.log(_e,"[messageQueueManager] Channel message queue is calling '_send' on message\n",e.msg.unencryptedContents),m&&console.log(e.msg);let t=null;for(;e.retryCount-- >=0;){v&&console.log(_e,"[messageQueueManager] ... trying message send (",e.retryCount,"retries left)\n",e.msg.unencryptedContents,_e);try{const t=await e._send(e.msg);v&&console.log(_e,"[messageQueueManager] Got response from registered '_send':\n",t,_e),e.resolve(t);break}catch(e){v&&console.log(_e,"[messageQueueManager] Got exception from '_send' operation, might retry",e,_e),t="[ERROR] "+e}}e.reject(t)}else v&&console.log("[messageQueueManager] Channel message queue is empty and closed")})).catch((e=>{v&&console.log(_e,"[messageQueueManager] Got exception from DEQUEUE operation:\n",JSON.stringify(e),_e),v&&console.log("[messageQueueManager] Channel message queue is closing down"),v&&console.log(e),e.reject("shutDown")}))}async close(){await this.sendQueue.drain("shutDown")}getMessageKeys(e="0"){return new Promise((async(t,n)=>{await this.channelReady,N(this.channelId,"Channel.getMessageKeys: no channel ID (?)");const{keys:a,historyShard:r}=await this.callApi("/getMessageKeys",{prefix:e});v&&console.log("getMessageKeys\n",a),a&&0!==a.size||console.warn("[Channel.getMessageKeys] Warning: no messages (empty/null response); not an error but perhaps unexpected?"),t({keys:a,historyShard:r})}))}getRawMessageMap(e){if(v&&console.log("[getRawMessageMap] called with messageKeys:",e),0===e.size)throw new I("[getRawMessageMap] no message keys provided");return new Promise((async(t,n)=>{await this.channelReady,N(this.channelId,"[getRawMessageMap] no channel ID (?)");const a=await this.callApi("/getMessages",e);N(a,"[getRawMessageMap] no messages (empty/null response)"),m&&console.log(_e,_e,"[getRawMessageMap] - here are the raw ones\n",a,_e,_e),t(a)}))}getMessageMap(e){if(v&&console.log("Channel.getDecryptedMessages() called with messageKeys:",e),0===e.size)throw new I("[getMessageMap] no message keys provided");return new Promise((async(t,n)=>{await this.channelReady;const a=await this.callApi("/getMessages",e),r=new Map;for(const[e,t]of a)try{r.set(e,p(we(t).payload))}catch(e){v&&console.warn(_e,"[getMessageMap] Failed extract and/or to validate message:",_e,t,_e,e,_e)}t(await this.extractMessageMap(r))}))}getHistory(){return new Promise((async(e,t)=>{await this.channelReady,N(this.channelId,"Channel.getHistory: no channel ID (?)"),e(await this.callApi("/getHistory"))}))}setPage(e){var{page:t,prefix:n,type:a}=e;return N(t,"Channel.setPage: no page (contents) provided"),n=n||12,(a=a||"sb384payloadV3")?this.callApi("/setPage",{page:t,type:a,prefix:n}):this.callApi("/setPage",t)}async getPage(){const e=this.hashB32;v&&console.log(`==== ChannelApi.getPage: calling fetch with: ${e}`);const t=await j(this.channelServer+"/api/v2/page/"+e).catch((e=>{throw new I(`[Channel.getPage] fetch failed: ${e}`)}));if("sb384payloadV3"!==t.headers.get("content-type"))throw new I("[Channel.getPage] Can only handle 'sb384payloadV3' content type, use 'fetch()'");return we(await t.arrayBuffer()).payload}acceptVisitor(e){return this.callApi("/acceptVisitor",{userId:e})}getCapacity(){return this.callApi("/getCapacity")}getAdminData(){return this.callApi("/getAdminData")}getMother(){return this.getAdminData().then((e=>e.motherChannel))}isLocked(){return this.getAdminData().then((e=>e.locked))}lock(){return this.callApi("/lockChannel")}updateCapacity(e){return this.callApi("/setCapacity",{capacity:e})}getChannelKeys(){return this.callApi("/getChannelKeys")}getPubKeys(){return this.callApi("/getPubKeys")}getStorageLimit(){return this.callApi("/getStorageLimit")}async getStorageToken(e){return l(await this.callApi("/getStorageToken",{size:e}))}budd(e){return new Promise((async(t,n)=>{var{targetChannel:a,size:r}=e||{};if(a){if(this.channelId===a.channelId)return void n(new Error("[budd()]: source and target channels are the same, probably an error"))}else a=(await(new ze).ready).handle,v&&console.log("\n",_e,"[budd()]: no target channel provided, using new channel:\n",_e,a,"\n",_e);if(r||(r=o),r!==1/0&&Math.abs(r)>await this.getStorageLimit())return void n(new Error(`[budd()]: storage amount (${r}) is more than current storage limit`));const s=a.channelData;if(s)try{s.storageToken=await this.getStorageToken(r),v&&console.log(`[budd()]: requested ${r}, got storage token:`,s.storageToken);const e=await new ze(a).ready;e.channelServer||(e.channelServer=this.channelServer);const o=g(await e.callApi("/budd",s));if(a.channelId!==o.channelId)return console.warn("[budd()]: target channel ID changed, should not happen, error somewhere\n",_e),console.warn("targetChannel:",a,"\n",_e),console.warn("newChannelData:",o,"\n",_e),void n(new Error("[budd()]: target channel ID changed, should not happen, error somewhere"));o.storageToken||console.warn("[budd()]: target channel has no storage token, possibly an error, should be returned from server");const i={[Ie]:!0,channelId:o.channelId,userPrivateKey:a.userPrivateKey,channelServer:this.channelServer,channelData:o};v&&console.log("[budd()]: success, newHandle:",i),t(d(i))}catch(e){return void n("[budd] Could not get storage token from server, are you sure about the size?")}else n(new Error("[budd()]: target channel has no channel data, probably an error"))}))}static LOWEST_TIMESTAMP="0".repeat(26);static HIGHEST_TIMESTAMP="3".repeat(26);static timestampToBase4String(e){return e.toString(4).padStart(22,"0")+"0000"}static base4stringToDate(e){const t=parseInt(e.slice(0,-4),4);return new Date(t).toISOString()}static getLexicalExtremes(e){if(0===e.size)return[];let t,n=t=e.values().next().value;for(const a of e)a<t&&(t=a),a>n&&(n=a);return[t,n]}static messageKeySetToPrefix=e=>{if(0===e.size)return"0";const[t,n]=ze.getLexicalExtremes(e);N(t&&n,"[timestampLongestPrefix]: no lowest or highest (internal error?)");const{timestamp:a}=ze.deComposeMessageKey(t),{timestamp:r}=ze.deComposeMessageKey(n);let s=0;for(;s<a.length&&s<r.length&&a[s]===r[s];)s++;return a.substring(0,s)};static timestampLongestPrefix=(e,t)=>{if(e&&t&&"string"==typeof e&&"string"==typeof t&&26===e.length&&26===t.length){let n=0;for(;n<e.length&&n<t.length&&e[n]===t[n];)n++;return e.substring(0,n)}throw new I(`[timestampLongestPrefix]: invalid input:\n '${e}' or '${t}'`)};static base4StringToTimestamp(e){return e&&"string"==typeof e&&26===e.length&&/^[0-3]{26}$/.test(e)?parseInt(e.slice(0,-4),4):0}static base4StringToDate(e){const t=ze.base4StringToTimestamp(e);return t?new Date(t).toISOString():""}static deComposeMessageKey(e){const t=e.match(/^([a-zA-Z0-9]{43})_([_a-zA-Z0-9]{4})_([0-3]{26})$/);return t&&t.length>=4?{channelId:t[1],i2:t[2],timestamp:t[3]}:{channelId:"",i2:"",timestamp:""}}static composeMessageKey(e,t,n="____"){return`${e}_${n??"____"}_${ze.timestampToBase4String(t)}`}}r([Ke,Ae],ze.prototype,"api",null),r([Ae],ze.prototype,"getLatestTimestamp",null),r([Ae,Me],ze.prototype,"setPage",null),r([Ae],ze.prototype,"getPage",null),r([Ae,Me],ze.prototype,"acceptVisitor",null),r([Ae,Me],ze.prototype,"getCapacity",null),r([Ae,Me],ze.prototype,"getAdminData",null),r([Ae,Me],ze.prototype,"getMother",null),r([Ae,Me],ze.prototype,"isLocked",null),r([Ae,Me],ze.prototype,"lock",null),r([Ae,Me],ze.prototype,"updateCapacity",null),r([Ae,Ke],ze.prototype,"getChannelKeys",null),r([Ae],ze.prototype,"getPubKeys",null),r([Ae],ze.prototype,"getStorageLimit",null),r([Ae],ze.prototype,"getStorageToken",null),r([Ae,Me],ze.prototype,"budd",null);const Ge=3;class qe extends ze{channelSocketReady;static ReadyFlag=Symbol("ChannelSocketReadyFlag");#b;#S;onMessage=e=>{N(!1,"[ChannelSocket] NO MESSAGE HANDLER")};#k=new Map;#C=new Map;#B=!1;constructor(e,t,a){if(N(t,"[ChannelSocket] constructor: no onMessage handler provided"),"string"==typeof e)super(e,a);else{const t=d(e);super(t,a),t.channelServer&&(this.channelServer=t.channelServer)}this.channelServer||(this.channelServer=We.defaultChannelServer),this[n.ReadyFlag]=!1,this.#S=this.channelServer.replace(/^http/,"ws"),this.onMessage=t,this.channelSocketReady=this.#K()}#K(){return new Promise((async(e,t)=>{v&&console.log("++++ STARTED ChannelSocket.readyPromise()"),await this.sbChannelKeysReady;const a=this.#S+"/api/v2/channel/"+this.channelId+"/websocket";if(this.#b={url:a,ready:!1,closed:!1,timeout:200},!this.#b.websocket||3===this.#b.websocket.readyState||2===this.#b.websocket.readyState){const e=ye(await this.buildApiBody(a));N(e,"Internal Error [L3598]"),this.#b.websocket=new WebSocket(a+"?apiBody="+ae(e)),We.activeChannelSockets.add(this.#b.websocket)}v&&console.log(_e,"++++ readyPromise() - setting up websocket message listener",_e);const r=this.#b.websocket,s=a=>{a.data&&"string"==typeof a.data&&x(a.data,"L3253")?.hasOwnProperty("ready")?(r.removeEventListener("message",s),r.addEventListener("message",this.#A),v&&console.log(_e,"Received ready",_e),this[n.ReadyFlag]=!0,e(this)):(v&&console.log(_e,"Received non-ready (?):\n",a.data,"\n",_e),t("[ChannelSocket] received something other than 'ready' as first message"))};this.#b.websocket.addEventListener("message",s);let o=setTimeout((()=>{if(this[n.ReadyFlag])m&&console.log("[ChannelSocket] resolved correctly",this);else{const e="[ChannelSocket] Socket not resolving after waiting, fatal.";console.warn(e),t(e)}}),2e3);this.#b.websocket.addEventListener("open",(async()=>{this.#b.closed=!1,o&&(clearTimeout(o),o=void 0),await this.ready,v&&console.log("++++++++ readyPromise() sending init"),this.#b.websocket.send(ye({ready:!0})),v&&console.log("++++++++ readyPromise() ... no immediate errors for init")})),this.#b.websocket.addEventListener("close",(e=>{this.#b.closed=!0,e.wasClean?e.reason.includes("does not have an owner")?t(`No such channel on this server (${this.channelServer})`):console.log("[ChannelSocket] Closed (cleanly): ",e.reason):console.log(`[ChannelSocket] closed but NOT cleanly: ${e.reason} from ${this.channelServer}`),t("wbSocket() closed before it was opened (?)")})),this.#b.websocket.addEventListener("error",(e=>{this.#b.closed=!0,v&&console.log("[ChannelSocket] Error: ",e),t("[ChannelSocket] Websocket error event "+e)}))}))}#A=async e=>{const t=e.data;m&&console.log(_e,"[ChannelSocket] Received socket message:\n",t,_e);var n=null;if(N(t,"[ChannelSocket] received empty message"),"string"==typeof t){const e=R(t);if(e||U("L3287","[ChannelSocket] Cannot parse message: "+t),"string"==typeof e)return v&&console.log("[ChannelSocket] Received simple string message, will forward\n",e),void this.onMessage(e);n=e}else t instanceof ArrayBuffer?n=we(t).payload:t instanceof Blob?n=we(await t.arrayBuffer()).payload:U("L3594","[ChannelSocket] received unknown message type");if(N(n,"[ChannelSocket] cannot extract message"),n.ready)return void(v&&console.log("++++++++ #processMessage: received ready message\n",n));if(n.error)return void console.error("++++++++ #processMessage: received error message\n",n);n=p(n),m&&console.log(_e,"[ChannelSocket] Received (extracted/validated) socket message:\n",n,"\n",_e),n.channelId||(n.channelId=this.channelId),N(n.channelId===this.channelId,"[ChannelSocket] received message for wrong channel?"),this.#B&&console.log("[ChannelSocket] Received socket message:",n),N(n.c&&n.c instanceof ArrayBuffer,"[ChannelSocket] Internal Error (L3675)");const a=q(await crypto.subtle.digest("SHA-256",n.c));v&&console.log("[ChannelSocket] Received message with hash:",a);const r=this.#k.get(a);r&&((v||this.#B)&&console.log(`++++++++ #processMessage: found matching ack for id ${a}`),this.#k.delete(a),r("success"));const s=this.#C.get(a);s&&((m||this.#B)&&console.log(`++++++++ #processMessage: clearing matching ack timeout for id ${a}`),clearTimeout(s),this.#C.delete(a)),m&&console.log("[ChannelSocket] New message, client andserver time stamp: ",n.sts);const o=await this.extractMessage(n);o?(v&&console.log("[ChannelSocket] Repackaged and will deliver 'Message':",o),this.onMessage(o)):v&&console.log("[ChannelSocket] Message could not be parsed, will not deliver")};get ready(){return this.channelSocketReady}get ChannelSocketReadyFlag(){return this[n.ReadyFlag]}get status(){if(!this.#b||!this.#b.websocket)return"CLOSED";switch(this.#b.websocket.readyState){case 0:return"CONNECTING";case 1:return"OPEN";case 2:return"CLOSING";default:return"CLOSED"}}set enableTrace(e){this.#B=e,e&&console.log("==== jslib ChannelSocket: Tracing enabled ====")}#m(e){return v&&console.log("[ChannelSocket] #_send() called"),new Promise((async(t,n)=>{if(v&&console.log(_e,"++++++++ [ChannelSocket.#_send()] called, will return promise to send:",e.unencryptedContents,_e),!0===e.stringMessage)try{const n=e.unencryptedContents;v&&console.log("[ChannelSocket] actually sending string message:",n),this.#b.websocket.send(n),t("success")}catch(e){n(`<websocket error upon send() of a string message: ${e}>`)}else{const a=ye(e=await this.finalizeMessage(e));a||n("ChannelSocket.send(): no message payload (Internal Error)");const r=q(await crypto.subtle.digest("SHA-256",e.c));(m||this.#B)&&console.log("++++++++ ChannelSocket.send(): Which has hash:",r),this.#k.set(r,t),this.#C.set(r,setTimeout((async()=>{if(this.#k.has(r)){if(this.#k.delete(r),We.isShutdown)return void n("shutDown");v&&console.error(`[ChannelSocket] websocket request timed out (no ack) after ${this.#b.timeout}ms (${r})`),this.reset(),await this.ready,v&&console.error("[ChannelSocket] ... channel socket should be ready again"),n(`<websocket request timed out (no ack) after ${this.#b.timeout}ms (${r})>`)}else(v||this.#B)&&console.log("++++++++ ChannelSocket.send() completed sending"),t("<received ACK, success, message sent and mirrored back>")}),this.#b.timeout)),v&&console.log("[ChannelSocket] actually sending message:",a);try{this.#b.websocket.send(a)}catch(e){console.error((new Error).stack),n(`<websocket error upon send() of a message: ${e}>`)}}}))}async send(e,t){return await this.ready,N(this.#b&&this.#b.websocket,"[ChannelSocket.send()] called before ready"),m&&console.log(_e,"[ChannelSocket] sending, contents:\n",JSON.stringify(e),_e),this.#b.closed&&(this.#B&&console.info("send() triggered reset of #readyPromise() (normal)"),this.channelSocketReady=this.#K(),this[n.ReadyFlag]=!1),new Promise((async(n,a)=>{this.ChannelSocketReadyFlag||a("ChannelSocket.send() is NOT ready, perhaps it's resetting?");const r=this.#b.websocket.readyState;switch(r){case 1:v&&console.log("[ChannelSocket.send()] enqueueing message: ",e),this.sendQueue.enqueue({msg:this.packageMessage(e,t),resolve:n,reject:a,_send:this.#m.bind(this),retryCount:Ge});break;case 0:case 2:case 3:a("[ChannelSocket.send()] Tried sending but socket not OPEN - it is "+(0===r?"CONNECTING":2===r?"CLOSING":"CLOSED"));break;default:U("ChannelSocket",`socket in unknown state (${r})`)}}))}reset(){v&&console.log("++++ ChannelSocket.reset() called ... for ChannelID:",this.channelId),this.#b&&this.#b.websocket&&(1===this.#b.websocket.readyState&&this.#b.websocket.close(),this.#b.closed=!0,this.channelSocketReady=this.#K())}async close(){v&&console.log("++++ ChannelSocket.close() called ... closing down stuff ..."),v&&console.log((new Error).stack),this.#b&&this.#b.websocket&&1===this.#b.websocket.readyState&&this.#b.websocket.send(ye({close:!0})),await super.close(),this.#b&&this.#b.websocket?(We.activeChannelSockets.delete(this.#b.websocket),this.#b.websocket.close(),this.#b.closed=!0):console.log("++++ ChannelSocket.close() called ... but no socket to close?"),this.channelSocketReady=Promise.reject("[ChannelSocket] This channel socket has been closed (by client request)"),this[n.ReadyFlag]=!1}}n=qe,r([function(e,t,n){if(n&&n.value){const e=n.value;n.value=function(...t){for(let e of t){const t=e.constructor.name;"string"==typeof(n=t)&&Pe.includes(n)&&N(Le(e,t),`invalid parameter: ${e} (expecting ${t})`)}var n;return e.call(this,...t)}}}],qe.prototype,"send",null);class Ve{#M;constructor(e){this.#M=Promise.resolve(e).then((e=>{const t=e;return N("string"==typeof t,"StorageApi() constructor requires a string (for storageServer)"),t}))}async getStorageServer(){return this.#M}static padBuf(e){const t=e.byteLength;let n;n=t+4<4096?4096:t+4<1048576?2**Math.ceil(Math.log2(t+4)):1048576*Math.ceil((t+4)/1048576);let a=H(e,new Uint8Array(n-t).buffer);return new DataView(a).setUint32(n-4,t),m&&console.log("padBuf bytes:",a.slice(-4)),a}#P(e){const t=e.slice(-4);var n=new DataView(t).getUint32(0);const a=new DataView(t).getUint32(0,!0);return a<n&&(m&&console.warn("#unpadData - size of shard encoded as little endian (fixed upon read)"),n=a),m&&console.log(`#unpadData - size of object is ${n}`),e.slice(0,n)}static getObjectKey(e,t){return new Promise(((n,a)=>{try{Oe.importKey("raw",e,"PBKDF2",!1,["deriveBits","deriveKey"]).then((e=>{crypto.subtle.deriveKey({name:"PBKDF2",salt:t,iterations:1e5,hash:"SHA-256"},e,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]).then((e=>{n(e)}))}))}catch(e){a(e)}}))}async storeData(e,t){try{const n=ye(e);if(!n)throw new I("[storeData] failed to assemble payload");const r=n.byteLength,s=a.padBuf(n),o=await Oe.generateIdKey(s),i=await this.getStorageServer(),d=i+"/api/v2/storeRequest?id="+ae(o.idBinary),u=await $(d);if(!u.salt||!u.iv)throw new I("[storeData] Failed to get key info (salt, nonce) from storage server");const g=ae(o.idBinary),y=await a.getObjectKey(o.keyMaterial,u.salt),f=await Oe.encrypt(s,y,{iv:u.iv});let p;if(t instanceof ze)p=await t.getStorageToken(f.byteLength);else if(h(t))p=await(await new ze(t).ready).getStorageToken(f.byteLength);else{if(!c(t))throw new I("[storeData] invalid budget source (needs to be a channel, channel handle, or storage token)");p=l(t)}const w=i+"/api/v2/storeData?id="+g,m={method:"POST",headers:{"Content-Type":'application/octet-stream"'},body:ye({id:g,iv:u.iv,salt:u.salt,storageToken:p,data:f})};console.log("5555 5555 [storeData] storeQuery:",_e,w,_e);const b=await $(w,m),S={[Te]:!0,version:B,id:g,key:ae(o.keyMaterial),iv:u.iv,salt:u.salt,actualSize:r,verification:b.verification,storageServer:i};return v&&console.log("storeData() - success, handle:",S,f),S}catch(e){if(console.error("[storeData] failed:",e),e instanceof I)throw e;throw new I(`[storeData] failed to store data: ${e}`)}}async#E(e,t,n){try{let r=await $(e+t,{method:"GET"});r=function(e){if(e){if("3"===e.version&&"string"==typeof e.id&&43===e.id.length&&J.test(e.id)&&e.iv instanceof Uint8Array&&12===e.iv.byteLength&&e.salt instanceof ArrayBuffer&&16===e.salt.byteLength&&e.data instanceof ArrayBuffer&&e.actualSize===e.data.byteLength)return e;throw new I("invalid Shard")}throw new I("invalid SBObjectHandle (null or undefined)")}(r),N(n.key,"object handle 'key' is missing, cannot decrypt"),n.iv=r.iv,n.salt=r.salt,n.data=new WeakRef(r.data),n.actualSize=r.actualSize,m&&console.log("fetchData(), handle (and data) at this point:",n,r.data);const s=re(n.key),o=await a.getObjectKey(s,n.salt),i=await crypto.subtle.decrypt({name:"AES-GCM",iv:n.iv},o,r.data),c=this.#P(i);return m&&console.log("shard.data (decrypted and unpadded):",c),n.payload=we(c).payload,n.data=new WeakRef(r.data),n}catch(t){return v&&console.log(`fetchData(): trying to get object on '${e}' failed: '${t}'`),null}}async fetchData(e){const t=A(e);if(v&&console.log("fetchData(), handle:",t),t.data&&t.data instanceof WeakRef&&t.data.deref())return t;const n=await t.verification,a=t.storageServer?t.storageServer:null,r=await this.getStorageServer();for(const e of[a,"http://localhost:3841",r]){if(!e)continue;v&&console.log("\n",_e,"fetchData(), trying server: ",e,"\n",_e);const a="/api/v2/fetchData?id="+t.id+"&verification="+n,r=await this.#E(e,a,t);if(null!==r)return v&&console.log(`[fetchData] success: fetched from '${e}'`,r),r.storageServer=e,r}throw new I("[fetchData] failed to fetch from any server")}static getData(e){const t=A(e);if(t.data){if(t.data instanceof WeakRef){return t.data.deref()||void 0}if(t.data instanceof ArrayBuffer)return t.data;throw new I("Invalid data type in handle")}}static getPayload(e){const t=A(e);if(t.payload)return t.payload;const n=a.getData(t);if(!n)throw new I("[getPayload] no data or payload in handle, use fetchData()");return we(n).payload}}a=Ve,r([Ke],Ve.prototype,"getStorageServer",null);const Qe={channelServer:""};class We{#D;#I;#x=s;#T;static lastTimeStamp=0;static activeFetches=new Map;static activeChannelSockets=new Set;static isShutdown=!1;constructor(e,t){console.warn(`==== CREATING Snackabra object generation: ${this.#x} ====`),N("string"==typeof e,"[Snackabra] Takes channel server URL as parameter"),Qe.channelServer=e,"boolean"==typeof t&&(t={DEBUG:t}),t&&t.DEBUG&&!0===t.DEBUG&&(v=!0),t&&v&&t.DEBUG2&&!0===t.DEBUG2&&(m=!0),v&&console.warn("++++ Snackabra constructor: setting DBG to TRUE ++++"),m&&console.warn("++++ Snackabra constructor: ALSO setting DBG2 to TRUE (verbose) ++++"),t&&t.sbFetch&&(console.log("++++ Snackabra constructor: setting custom fetch function ++++"),j=t.sbFetch),this.#D=e,this.#I=new Ve(new Promise(((e,t)=>{v&&console.log(`++++ Snackabra constructor: fetching storage server name from '${this.#D+"/api/v2/info"}' ++++`),$(this.#D+"/api/v2/info").then((t=>{v&&console.log("Channel server info:",t),N(t.storageServer,"Channel server did not provide storage server name, cannot initialize"),this.#T=t,v&&console.log("Channel server info:",this.#T),e(t.storageServer)})).catch((e=>{We.isShutdown||(console.error("[Snackabra] fetching storage server name failed (fatal):\n",e),t(e))}))})))}static async dateNow(){let e=Date.now();return e<=We.lastTimeStamp&&(e=We.lastTimeStamp+1),We.lastTimeStamp=e,e}static get defaultChannelServer(){const e=Qe.channelServer;if(e.length>0)return e;throw new I("No default channel server; you need to have 'new Snackabra(...)' somewhere.")}async getPage(e){return v&&console.log(`==== Snackabra.getPage: calling fetch with: ${e}`),we(await $(this.#D+"/api/v2/page/"+e))}create(e){return N(null!==e,"[create channel] Invalid parameter (null)"),new Promise((async(t,n)=>{try{var a;if(e instanceof ze){const t=e;await t.ready,t.channelServer||(t.channelServer=this.#D),a=await t.getStorageToken(o)}else try{a=l(e)}catch(e){return void n("Invalid parameter to create() - need a token or a budget channel")}N(a,"[create channel] Failed to get storage token for the provided channel");const r=await(new ze).ready;r.channelServer=this.#D,r.create(a).then((e=>{t(e.handle)})).catch((e=>{n(e)}))}catch(e){const t=`Creating channel did not succeed: ${e}`;console.error(t),n(t)}}))}connect(e,t){let n;if(n="string"==typeof e?{userPrivateKey:e}:e,N(n&&n.userPrivateKey,"[Snackabra.connect] Invalid parameter (at least need owner private key)"),n.channelServer&&n.channelServer!==this.#D)throw new I(`[Snackabra.connect] channel server in handle ('${n.channelServer}') does not match what SB was set up with ('${this.#D}')`);return n.channelServer||(n.channelServer=this.#D),v&&console.log("++++ Snackabra.connect() ++++",n),t?new qe(n,t):new ze(n)}async closeAll(){We.isShutdown||(We.isShutdown=!0,We.activeFetches.forEach((e=>e.abort("Snackabra.closeAll() called"))),We.activeFetches.clear(),await Promise.all(Array.from(We.activeChannelSockets).map(D)))}get storage(){return this.#I}async getStorageServer(){return this.#I.getStorageServer()}get crypto(){return Oe}get version(){return this.#x}}r([Ke],We.prototype,"storage",null),r([Ke],We.prototype,"getStorageServer",null);var Je={Snackabra:We,Channel:ze,SBCrypto:Be,SB384:Fe,arrayBufferToBase64url:q,base64ToArrayBuffer:V,arrayBufferToBase62:ae,base62ToArrayBuffer:re,sbCrypto:Oe,version:s,setDebugLevel:S};return globalThis.SB||(globalThis.SB=Je),console.warn(`==== SNACKABRA jslib (re)loaded, version '${globalThis.SB.version}' ====`),t})()));