!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.SB=t():e.SB=t()}(self,(()=>(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{Channel:()=>Se,ChannelSocket:()=>ke,KeyPrefix:()=>se,MessageBus:()=>h,NEW_CHANNEL_MINIMUM_BUDGET:()=>o,SB:()=>Ce,SB384:()=>we,SBChannelKeys:()=>be,SBCrypto:()=>ie,SBMessage:()=>me,SBObjectHandle:()=>Ae,Snackabra:()=>Ee,StorageApi:()=>Ke,arrayBuffer32ToBase62:()=>H,arrayBufferToBase62:()=>U,arrayBufferToBase64:()=>j,assemblePayload:()=>Q,assemblePayload2:()=>Z,base62ToArrayBuffer:()=>N,base62ToArrayBuffer32:()=>F,base62ToBase64:()=>G,base64ToArrayBuffer:()=>C,base64ToBase62:()=>V,compareBuffers:()=>I,decodeB64Url:()=>oe,encodeB64Url:()=>ae,extractPayload:()=>re,extractPayload2:()=>ee,getRandomValues:()=>f,isBase62Encoded:()=>z,jsonParseWrapper:()=>J,msgTtlToSeconds:()=>c,msgTtlToString:()=>l,partition:()=>W,sbCrypto:()=>pe,version:()=>a});var n,r=function(e,t,n,r){var a,o=arguments.length,s=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(s=(o<3?a(s):o>3?a(t,n,s):a(t,n))||s);return o>3&&s&&Object.defineProperty(t,n,s),s};const a="2.0.0-alpha.5 (build 28)",o=33554432;var s=!0,i=!1;const c=[0,60,300,1200,3600,14400,64800,259200,1036800,4147200,31622400,0,0,0,0,1/0],l=["Ephemeral","One minute","Five minutes","Twenty minutes","One hour","4 hours","18 hours","72 hours","12 days","48 days","One year","<reserved>","<reserved>","<reserved>","<reserved>","Permastore (no limit)"];class h{bus={};#e(e){return this.bus[e]||(this.bus[e]=[])}subscribe(e,t){this.#e(e).push(t)}unsubscribe(e,t){let n=-1;this.bus[e]?-1!=(n=this.bus[e].findLastIndex((e=>e==t)))?this.bus[e].splice(n,1):console.info("fyi: asked to remove a handler but it's not there"):console.info("fyi: asked to remove a handler but the event is not there")}publish(e,...t){for(const n of this.#e("*"))n(e,...t);for(const n of this.#e(e))n(...t)}}function y(e,t){return new Promise(((n,r)=>{try{fetch(e,t??{method:"GET"}).then((e=>{n(e)})).catch((e=>{const t=`[SBFetch] Error (fetch through a reject, might be normal): ${e}`;console.warn(t),r(t)}))}catch(e){const t=`[SBFetch] Error (fetch exception, might be normal operation): ${e}`;console.warn(t),r()}}))}function u(e){return e instanceof Error?e:new Error(String(e))}function d(e,t){if(!e){const e=`[_sb_assert] << SB assertion error: ${t} >>`;throw s&&console.trace(e),new Error(e)}}function f(e){if(e.byteLength<4096)return crypto.getRandomValues(e);{d(!(e.byteLength%1024),"getRandomValues(): large requested blocks must be multiple of 1024 in size");let t=0;try{for(t=0;t<e.byteLength;t+=1024){let n=new Uint8Array(1024);crypto.getRandomValues(n),e.set(n,t)}}catch(e){console.log(`got an error on index i=${t}`),console.log(e),console.trace()}return e}}const g=/^([A-Za-z0-9+/_\-=]*)$/;function p(e){return g.test(e)}const w=p,b=[],v=[],m=[],S="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",k=S+"+/",A=S+"-_",K="=",E=16383;for(let e=0,t=k.length;e<t;++e)b[e]=k[e],v[e]=A[e],m[k.charCodeAt(e)]=e;function C(e){if(!p(e))throw new Error(`invalid character in string '${e}'`);let t;switch(e.length%4){case 2:e+="==";break;case 3:e+="="}const[n,r]=function(e){const t=e.length;let n=e.indexOf(K);return-1===n&&(n=t),[n,n===t?0:4-n%4]}(e),a=new Uint8Array(function(e,t){return 3*(e+t)/4-t}(n,r));let o=0;const s=r>0?n-4:n;let i;for(i=0;i<s;i+=4)t=m[e.charCodeAt(i)]<<18|m[e.charCodeAt(i+1)]<<12|m[e.charCodeAt(i+2)]<<6|m[e.charCodeAt(i+3)],a[o++]=t>>16&255,a[o++]=t>>8&255,a[o++]=255&t;return 2===r&&(t=m[e.charCodeAt(i)]<<2|m[e.charCodeAt(i+1)]>>4,a[o++]=255&t),1===r&&(t=m[e.charCodeAt(i)]<<10|m[e.charCodeAt(i+1)]<<4|m[e.charCodeAt(i+2)]>>2,a[o++]=t>>8&255,a[o++]=255&t),a}function B(e,t){return e[t>>18&63]+e[t>>12&63]+e[t>>6&63]+e[63&t]}function P(e,t,n,r){let a;const o=new Array((r-n)/3);for(let s=n,i=0;s<r;s+=3,i++)a=(t.getUint8(s)<<16&16711680)+(t.getUint8(s+1)<<8&65280)+(255&t.getUint8(s+2)),o[i]=B(e,a);return o.join("")}m["-".charCodeAt(0)]=62,m["_".charCodeAt(0)]=63;const R=e=>e instanceof ArrayBuffer?new DataView(e):new DataView(e.buffer,e.byteOffset,e.byteLength);function I(e,t){if(typeof e!=typeof t)return!1;if(null==e||null==t)return!1;const n=R(e),r=R(t);if(n.byteLength!==r.byteLength)return!1;for(let e=0;e<n.byteLength;e++)if(n.getUint8(e)!==r.getUint8(e))return!1;return!0}function j(e,t="url"){if(null==e)return function(e,t){throw new Error("[_sb_exception] << SB lib error (L893: arrayBufferToBase64() -> null paramater) >>")}(),"";{const n=R(e),r=n.byteLength,a=r%3,o=r-a,s=new Array(Math.floor(o/E)+Math.sign(a)),i="url"==t?v:b,c="";let l=0;for(let e=0;e<o;e+=E)s[l++]=P(i,n,e,e+E>o?o:e+E);if(1===a){const e=n.getUint8(r-1);s[l]=i[e>>2]+i[e<<4&63]+c+c}else if(2===a){const e=(n.getUint8(r-2)<<8)+n.getUint8(r-1);s[l]=i[e>>10]+i[e>>4&63]+i[e<<2&63]+c}return s.join("")}}const O="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",D=/^(a32\.)?[0-9A-Za-z]{43}$/,x=/^[0-9a-zA-Z]*$/,T=new Map([[32,43],[16,22],[8,11],[4,6]]),M=new Map(Array.from(T,(([e,t])=>[t,e]))),_=Array.from(M.keys()).sort(((e,t)=>e-t));function $(e,t){if(e.byteLength!==t||!T.has(t))throw new Error("[arrayBufferToBase62] Decoding error");let n="";for(let t=BigInt("0x"+Array.from(new Uint8Array(e)).map((e=>e.toString(16).padStart(2,"0"))).join(""));t>0n;t/=62n)n=O[Number(t%62n)]+n;return n.padStart(T.get(t),"0")}function U(e){let t=e.byteLength;if(t%4!=0)throw new Error("[arrayBufferToBase62] Must be multiple of 4 bytes (32 bits).");let n=0,r="";for(;t>0;){let a=2**Math.min(Math.floor(Math.log2(t)),5);r+=$(e.slice(n,n+a),a),n+=a,t-=a}return r}function L(e,t){let n=0n;try{for(let t=0;t<e.length;t++)n=62n*n+BigInt(O.indexOf(e[t]));if(n>2n**BigInt(8*t)-1n)throw new Error(`base62ToArrayBuffer: value exceeds ${8*t} bits.`);const r=new ArrayBuffer(t),a=new DataView(r);for(let e=0;e<t/4;e++){const r=Number(BigInt.asUintN(32,n));a.setUint32(4*(t/4-e-1),r),n>>=32n}return r}catch(e){throw console.error("[_base62ToArrayBuffer] Error: ",e),e}}function N(e){if(!x.test(e))throw new Error("base62ToArrayBuffer32: must be alphanumeric (0-9A-Za-z).");let t,n=0,r=0,a=43,o=new Uint8Array(e.length);try{for(;n<e.length;){if(t=_.filter((t=>t<=e.length-n)).pop(),a<43&&t>=a)throw new Error("cannot decypher b62 string (incorrect length)");a=t;let s=e.slice(n,n+t);const i=new Uint8Array(L(s,M.get(t)));o.set(i,r),n+=t,r+=i.byteLength}return o.buffer.slice(0,r)}catch(e){throw console.error("[base62ToArrayBuffer] Error:",e),e}}function F(e){if(!D.test(e))throw new Error(`base62ToArrayBuffer32: string must match: ${D}, value provided was ${e}`);return N(e)}function H(e){if(32!==e.byteLength)throw new Error("arrayBufferToBase62: buffer must be exactly 32 bytes (256 bits).");return U(e)}function G(e){return j(F(e))}function V(e){return U(C(e))}function z(e){return D.test(e)}function q(e,t){const n=new Uint8Array(e.byteLength+t.byteLength);return n.set(new Uint8Array(e),0),n.set(new Uint8Array(t),e.byteLength),n.buffer}function W(e,t){throw`partition() not tested on TS yet - (${e}, ${t})`}function J(e,t,n){for(;e&&"string"==typeof e;)try{e=JSON.parse(e,n)}catch(n){throw new Error(`JSON.parse() error${t?` at ${t}`:""}: ${n}\nString (possibly nested) was: ${e}`)}return e}function Z(e){try{const t={version:"002"};let n=0,r=0;for(const a in e)n++,t[n.toString()]={name:a,start:r,size:e[a].byteLength},r+=e[a].byteLength;const a=(new TextEncoder).encode(JSON.stringify(t)),o=new Uint32Array([a.byteLength]);let s=q(new Uint8Array(o.buffer),new Uint8Array(a));for(const t in e)s=q(new Uint8Array(s),e[t]);return s}catch(e){return console.error(e),null}}function Y(e){return null===e?"0":void 0===e?"u":Array.isArray(e)?"a":e instanceof ArrayBuffer?"x":"boolean"==typeof e?"b":e instanceof DataView?"v":e instanceof Date?"d":e instanceof Map?"m":"number"==typeof e?"number"==typeof(t=e)&&t>=-2147483648&&t<=2147483647&&t%1==0?"i":"n":null!==e&&"object"==typeof e&&e.constructor===Object?"o":e instanceof Set?"t":"string"==typeof e?"s":!ArrayBuffer.isView(e)||e instanceof DataView?(console.error("[getType] Unsupported for object:",e),"<unsupported>"):"Uint8Array"===e.constructor.name?"8":(console.error("[getType] Unsupported typed array:",e.constructor.name),"<unsupported>");var t}function X(e){try{const t={};let n=0,r=0,a=[];for(const o in e)if(e.hasOwnProperty(o)){const s=e[o],i=Y(s);switch(i){case"o":const e=X(s);if(!e)throw new Error(`Failed to assemble payload for ${o}`);a.push(e);break;case"n":const t=new Uint8Array(8);new DataView(t.buffer).setFloat64(0,s),a.push(t.buffer);break;case"i":const n=new Uint8Array(4);new DataView(n.buffer).setInt32(0,s),a.push(n.buffer);break;case"d":const r=new Uint8Array(8);new DataView(r.buffer).setFloat64(0,s.getTime()),a.push(r.buffer);break;case"b":const c=new Uint8Array(1);c[0]=s?1:0,a.push(c.buffer);break;case"s":const l=(new TextEncoder).encode(s);a.push(l);break;case"x":a.push(s);break;case"8":a.push(s.buffer);break;case"m":const h=new Array;s.forEach(((e,t)=>{h.push([t,e])}));const y=X(h);if(!y)throw new Error(`Failed to assemble payload for ${o}`);a.push(y);break;case"a":const u=new Array;s.forEach((e=>{u.push(e)}));const d=X(u);if(!d)throw new Error(`Failed to assemble payload for ${o}`);a.push(d);break;case"t":const f=new Array;s.forEach((e=>{f.push(e)}));const g=X(f);if(!g)throw new Error(`Failed to assemble payload for ${o}`);a.push(g);break;case"0":case"u":a.push(new ArrayBuffer(0));break;default:throw console.error(`[assemblePayload] Unsupported type: ${i}`),new Error(`Unsupported type: ${i}`)}const c=a[a.length-1].byteLength;n++,t[n.toString()]={n:o,s:r,z:c,t:i},r+=c}const o=(new TextEncoder).encode(JSON.stringify(t)),s=new Uint32Array([o.byteLength]);let i=q(new Uint8Array(s.buffer),new Uint8Array(o));for(let e=0;e<a.length;e++)i=q(new Uint8Array(i),a[e]);return i}catch(e){return console.error(e),null}}function Q(e){return X({ver003:!0,payload:e})}function ee(e){try{const t=new Uint32Array(e.slice(0,4))[0],n=J((new TextDecoder).decode(e.slice(4,4+t)),"L533"),r=4+t;switch(n.version||(n.version="001"),n.version){case"001":throw new Error("extractPayload() exception: version 001 is no longer supported");case"002":{const t=[];for(let a=1;a<Object.keys(n).length;a++){const o=a.toString();if(n[o]){const a=n[o].start,s=n[o].size;t[n[o].name]=e.slice(r+a,r+a+s)}else console.log(`found nothing for index ${a}`)}return t}default:throw new Error("Unsupported payload version ("+n.version+") - fatal")}}catch(e){throw new Error("extractPayload() exception ("+e+")")}}function te(e,t){switch(t){case"o":return ne(e);case"n":return new DataView(e).getFloat64(0);case"i":return new DataView(e).getInt32(0);case"d":return new Date(new DataView(e).getFloat64(0));case"b":return 1===new Uint8Array(e)[0];case"s":return(new TextDecoder).decode(e);case"a":const n=ne(e);if(!n)throw new Error(`Failed to assemble payload for ${t}`);return Object.values(n);case"m":const r=ne(e);if(!r)throw new Error(`Failed to assemble payload for ${t}`);const a=new Map;for(const e in r)a.set(r[e][0],r[e][1]);return a;case"t":const o=ne(e);if(!o)throw new Error(`Failed to assemble payload for ${t}`);const s=new Set;for(const e in o)s.add(o[e]);return s;case"x":return e;case"8":return new Uint8Array(e);case"0":return null;case"u":return;default:throw new Error(`Unsupported type: ${t}`)}}function ne(e){try{const t=new Uint32Array(e.slice(0,4))[0],n=J((new TextDecoder).decode(e.slice(4,4+t)),"L1308"),r=4+t,a={};for(let t=1;t<=Object.keys(n).length;t++){const o=t.toString();if(n[o]){const t=n[o],s=t.s,i=t.z,c=t.t,l=e.slice(r+s,r+s+i);a[t.n]=te(l,c)}else console.log(`found nothing for index ${t}`)}return a}catch(e){throw new Error("extractPayload() exception ("+e+")")}}function re(e){return ne(e)}function ae(e){return e.replaceAll("+","-").replaceAll("/","_")}function oe(e){const t=(e=e.replaceAll("-","+").replaceAll("_","/")).length%4;return t&&(d(1!==t,"InvalidLengthError: Input base64url string is the wrong length to determine padding"),e+=new Array(5-t).join("=")),e}var se;!function(e){e.SBPublicKey="PNk2",e.SBPrivateKey="Xj3p"}(se||(se={}));class ie{generateIdKey(e){return new Promise(((t,n)=>{try{crypto.subtle.digest("SHA-512",e).then((e=>{const n=e.slice(0,32),r=e.slice(32);t({id_binary:n,key_material:r})}))}catch(e){n(e)}}))}extractPubKey(e){try{const t={...e};return delete t.d,delete t.dp,delete t.dq,delete t.q,delete t.qi,t.key_ops=[],t}catch(e){return console.error(e),null}}async#t(e,t){let n=0,r=j(e);for(;r!==t;){if(n++>160)return!1;r=j(e=await crypto.subtle.digest("SHA-384",e))}return!0}async compareHashWithKey(e,t){if(!e||!t)return!1;let n=t.x,r=t.y;if(!n||!r)try{const e=J(t,"L1787");e.x&&(n=e.x),e.y&&(r=e.y)}catch{return!1}const a=q(C(oe(n)),C(oe(r)));return U(await crypto.subtle.digest("SHA-256",a))===e||await this.#t(a,e)}async verifyChannelId(e,t){return await this.compareHashWithKey(t,e)}async generateKeys(){try{return await crypto.subtle.generateKey({name:"ECDH",namedCurve:"P-384"},!0,["deriveKey"])}catch(e){throw new Error("generateKeys() exception ("+e+")")}}async importKey(e,t,n,r,a){try{let o;const s={ECDH:{name:"ECDH",namedCurve:"P-384"},AES:{name:"AES-GCM"},PBKDF2:"PBKDF2"};if("jwk"===e){const e=t;if(void 0===e.kty)throw new Error("importKey() - invalid JsonWebKey");"ECDH"===e.alg&&(e.alg=void 0),o=await crypto.subtle.importKey("jwk",e,s[n],r,a)}else o=await crypto.subtle.importKey(e,t,s[n],r,a);return o}catch(o){const i=`... importKey() error: ${o}:`;throw s&&(console.error(i),console.log(e),console.log(t),console.log(n),console.log(r),console.log(a)),new Error(i)}}async exportKey(e,t){return crypto.subtle.exportKey(e,t).catch((()=>{s&&console.warn("... exportKey() protested, this just means we treat this as undefined")}))}deriveKey(e,t,n,r,a){return new Promise((async(o,s)=>{let i;switch(n){case"AES-GCM":i={name:"AES-GCM",length:256};break;case"HMAC":i={name:"HMAC",hash:"SHA-256",length:256};break;default:throw new Error(`deriveKey() - unknown type: ${n}`)}let c=t;if("private"===c.type){const e=await this.exportKey("jwk",c);d(e,"INTERNAL (L1878)"),delete e.d,delete e.alg,c=await this.importKey("jwk",e,"ECDH",!0,[]),d(c,"INTERNAL (L1882)")}d("public"===c.type,"INTERNAL (L1884)");try{o(await crypto.subtle.deriveKey({name:"ECDH",public:c},e,i,r,a))}catch(o){console.error(o,e,t,n,r,a),s(o)}}))}async encrypt(e,t,n){if(null===e)throw new Error("no contents");if(!n.iv)throw new Error("no nonce");return n.name?d("AES-GCM"===n.name,"Must be AES-GCM (L1951)"):n.name="AES-GCM",crypto.subtle.encrypt(n,t,e)}async wrap(e,t,n,r){const a=Q(e);d(a,"wrapMessage(): failed to assemble payload"),d(a.byteLength<ve,`wrapMessage(): body must be smaller than ${ve/1024} KiB (we got ${a.byteLength/1024} KiB)})`);const o=crypto.getRandomValues(new Uint8Array(12)),s=25*Math.round(Date.now()/25),i=new DataView(new ArrayBuffer(8));return i.setFloat64(0,s),{contents:a,encryptedContents:await pe.encrypt(a,n,{iv:o,additionalData:i}),iv:o,sender:t,sign:await pe.sign(r,a),timestamp:s}}unwrap(e,t){return new Promise((async(n,r)=>{try{if(!t.timestamp)throw new Error("unwrap() - no timestamp in encrypted message");const{encryptedContents:r,iv:a}=t;d(r,"no contents in encrypted message");const o=new DataView(new ArrayBuffer(8));o.setFloat64(0,t.timestamp),n(await crypto.subtle.decrypt({name:"AES-GCM",iv:a,additionalData:o},e,r))}catch(e){s&&console.error(`unwrap(): cannot unwrap/decrypt - rejecting: ${e}`),r(e)}}))}sign(e,t){return crypto.subtle.sign("HMAC",e,t)}verify(e,t,n){return crypto.subtle.verify("HMAC",e,t,n)}str2ab(e){return(new TextEncoder).encode(e)}ab2str(e){return new TextDecoder("utf-8").decode(e)}compareKeys(e,t){return null!=e&&null!=t&&"object"==typeof e&&"object"==typeof t&&e.x===t.x&&e.y===t.y}}function ce(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=`__${e.constructor.name}__${t}__`;if(this.hasOwnProperty(n))return this[n];{const e=r.call(this);return Object.defineProperty(this,n,{configurable:!1,enumerable:!1,writable:!1,value:e}),e}}}}function le(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=e.constructor.name,a=e.constructor.ReadyFlag;d(a in this,"'readyFlagSymbol' missing yet getter accessed with @Ready pattern (fatal)"),d(this[a],`'${n}.${t}' getter accessed but object not 'ready' (fatal)`);const o=r.call(this);return d(null!=o,`'${n}.${t}' getter accessed but return value will be NULL (fatal)`),o}}}function he(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=e.constructor.name;return"owner"in this&&d(!0===this.owner,`${t} getter or method accessed for object ${n} but callee is not channel owner`),r.call(this)}}}const ye=["SBMessage","SBObjectHandle","SBChannelHandle"],ue=Symbol("SBChannelHandle"),de=Symbol.for("SBMessage"),fe=Symbol.for("SBObjectHandle");function ge(e,t){switch(t){case"SBMessage":return de in e;case"SBObjectHandle":case"SBChannelHandle":return fe in e;default:return!1}}const pe=new ie;class we{sb384Ready;static ReadyFlag=Symbol("SB384ReadyFlag");#n;#r;#a;#o;#s;#i;#c;constructor(e,t){this[we.ReadyFlag]=!1,this.sb384Ready=new Promise((async(n,r)=>{try{if(e)if(e instanceof CryptoKey){const n=await pe.exportKey("jwk",e);d(n&&n.x&&n.y,"INTERNAL"),n.d?(this.#n=!0,this.#o=n.d):(this.#n=!1,d(!t,"ERROR creating SB384 object: key provided is not the requested private")),this.#r=n.x,this.#a=n.y}else if(e&&e instanceof Object&&"kty"in e){const n=e;d(n&&n.x&&n.y,"Cannot parse format of JWK key"),e.d?(this.#n=!0,this.#o=n.d):(this.#n=!1,d(!t,"ERROR creating SB384 object: key provided is not the requested private")),this.#r=n.x,this.#a=n.y}else{if("string"!=typeof e)throw new Error("ERROR creating SB384 object: invalid key (must be a JsonWebKey, SBUserId, or omitted)");{const n=function(e){try{if(e.length<=4)return;const t=e.slice(0,4),n=e.slice(4);switch(t){case se.SBPublicKey:{const e=N(n);if(96!==e.byteLength)return;return{prefix:se.SBPublicKey,x:j(e.slice(0,48)),y:j(e.slice(48,96))}}case se.SBPrivateKey:{const e=N(n);if(144!==e.byteLength)return;return{prefix:se.SBPrivateKey,x:j(e.slice(0,48)),y:j(e.slice(48,96)),d:j(e.slice(96,144))}}default:return}}catch(e){return void console.error("parseSB384string() - malformed input, exception: ",e)}}(e);if(!n)throw new Error("ERROR creating SB384 object: invalid key (must be a JsonWebKey | SBUserPublicKey | SBUserPrivateKey, or omitted)");const{x:r,y:a,d:o}=n;o?(this.#n=!0,this.#o=o):(this.#n=!1,d(!t,"ERROR creating SB384 object: key provided is not the requested private")),d(r&&a,"INTERNAL"),this.#r=r,this.#a=a}}else{s&&console.log("SB384() - generating new key pair");const e=await pe.generateKeys(),t=await pe.exportKey("jwk",e.privateKey);d(t&&t.x&&t.y&&t.d,"INTERNAL"),this.#n=!0,this.#r=t.x,this.#a=t.y,this.#o=t.d}i&&console.log("SB384() constructor; x/y/d:\n",this.#r,"\n",this.#a,"\n",this.#o),this.#n&&(this.#s=await pe.importKey("jwk",this.jwkPrivate,"ECDH",!0,["deriveKey"])),this.#i=await pe.importKey("jwk",this.jwkPublic,"ECDH",!0,[]);const r=q(C(this.#r),C(this.#a));this.#c=U(await crypto.subtle.digest("SHA-256",r)),i&&console.log("SB384() constructor; hash:\n",this.#c),this[we.ReadyFlag]=!0,n(this)}catch(e){r("ERROR creating SB384 object failed: "+u(e))}}))}get SB384ReadyFlag(){return this[we.ReadyFlag]}get ready(){return this.sb384Ready}get private(){return this.#n}get hash(){return this.#c}get userId(){return this.hash}get ownerChannelId(){return this.hash}get privateKey(){if(!this.private)throw new Error("this is a public key, there is no 'privateKey' value");return this.#s}get publicKey(){return this.#i}get jwkPrivate(){return d(this.#n,"jwkPrivate() - not a private key"),d(this.#r&&this.#a&&this.#o,"JWK key info is not available (fatal)"),{crv:"P-384",ext:!0,key_ops:["deriveKey"],kty:"EC",x:this.#r,y:this.#a,d:this.#o}}get jwkPublic(){return d(this.#r&&this.#a,"JWK key info is not available (fatal)"),{crv:"P-384",ext:!0,key_ops:[],kty:"EC",x:this.#r,y:this.#a}}get userPublicKey(){d(this.#r&&this.#a,"userPublicKey() - sufficient key info is not available (fatal)");const e=new Uint8Array(96);return e.set(C(this.#r),0),e.set(C(this.#a),48),se.SBPublicKey+U(e)}get userPrivateKey(){d(this.#n,"userPrivateKey() - not a private key, there is no userPrivateKey"),d(this.#r&&this.#a&&this.#o,"userPrivateKey() - sufficient key info is not available (fatal)");const e=new Uint8Array(144);return e.set(C(this.#r),0),e.set(C(this.#a),48),e.set(C(this.#o),96),se.SBPrivateKey+U(e)}}r([ce,le],we.prototype,"private",null),r([ce,le],we.prototype,"hash",null),r([ce,le],we.prototype,"userId",null),r([ce,le],we.prototype,"ownerChannelId",null),r([ce,le],we.prototype,"privateKey",null),r([ce,le],we.prototype,"publicKey",null),r([ce],we.prototype,"jwkPrivate",null),r([ce],we.prototype,"jwkPublic",null),r([ce],we.prototype,"userPublicKey",null),r([ce],we.prototype,"userPrivateKey",null);class be extends we{#l;sbChannelKeysReady;static ReadyFlag=Symbol("SBChannelKeysReadyFlag");#h;#y;#u;channelServer;#d;#f;constructor(e){e?(super(e.userPrivateKey,!0),e.channelServer&&(this.channelServer=e.channelServer,"/"===this.channelServer[this.channelServer.length-1]&&(this.channelServer=this.channelServer.slice(0,-1))),this.#l=e.channelId):super(),this[be.ReadyFlag]=!1,this.sbChannelKeysReady=new Promise((async(t,n)=>{s&&console.log("SBChannelKeys() constructor."),await this.sb384Ready;try{if(e){e.channelData?this.#h=e.channelData:(d(this.channelServer,"SBChannelKeys() constructor: need either channelKeys or channelServer"),s&&console.log("++++ SBChannelKeys initialized from channel server"),await y(this.channelServer+"/api/v2/channel/"+this.#l+"/getChannelKeys",{method:"GET",headers:{"Content-Type":"application/json"}}).then((e=>(e.ok||n("SBChannelKeys(): failed to get channel keys (network response not ok)"),e.json()))).then((e=>{e.error&&n("SBChannelKeys(): failed to get channel keys (error in response)"),d(e.channelId===this.#l&&e.channelPublicKey&&e.ownerPublicKey,"SBChannelKeys(): failed to get channel keys (invalid or incomplete response)"),this.#h=e})).catch((e=>{throw e})));const t=await new we(this.#h.channelPublicKey).ready;if(this.#d=t.publicKey,e.channelPrivateKey){const n=await new we(e.channelPrivateKey,!0).ready;d(t.userPublicKey===n.userPublicKey,"SBChannelKeys(): channel public key mismatch (?)"),this.#f=n.privateKey}}else{this.#l=this.ownerChannelId;const e=await crypto.subtle.generateKey({name:"ECDH",namedCurve:"P-384"},!0,["deriveKey"]);this.#f=e.privateKey,this.#d=e.publicKey;const t=await new we(this.#f,!0).ready;this.#h={channelId:this.#l,ownerPublicKey:this.userPublicKey,channelPublicKey:t.userPublicKey}}d(this.SB384ReadyFlag,"SBChannelKeys(): parent SB384 object is not ready (?)"),this.#y=await pe.deriveKey(this.privateKey,this.#d,"AES-GCM",!0,["encrypt","decrypt"]),this.#u=await pe.deriveKey(this.privateKey,this.#d,"HMAC",!0,["sign","verify"]),this[be.ReadyFlag]=!0,t(this)}catch(e){n("ERROR creating SBChannelKeys object failed: "+u(e))}}))}get ready(){return this.sbChannelKeysReady}get SBChannelKeysReadyFlag(){return this[be.ReadyFlag]}get channelData(){return this.#h}get owner(){return this.private&&this.ownerChannelId===this.channelId}get channelId(){return this.#l}get encryptionKey(){return this.#y}get signKey(){return this.#u}get channelPrivateKey(){return this.#f}get channelPublicKey(){return this.#d}}r([ce,le],be.prototype,"channelData",null),r([ce,le],be.prototype,"owner",null),r([ce,le],be.prototype,"channelId",null),r([ce,le],be.prototype,"encryptionKey",null),r([ce,le],be.prototype,"signKey",null),r([ce,le],be.prototype,"channelPrivateKey",null),r([ce,le],be.prototype,"channelPublicKey",null);const ve=98304;class me{channel;[de]=!0;ready;message;#y;constructor(e,t,n){this.channel=e,this.ready=new Promise((async r=>{await e.channelReady,this.#y=this.channel.encryptionKey,this.message=await pe.wrap(t,this.channel.userId,this.#y,this.channel.privateKey),this.message.ttl=n||15,r(this)}))}get encryptionKey(){return this.#y}send(){return new Promise(((e,t)=>{this.ready.then((()=>{this.channel.send(this).then((n=>{"success"===n?e(n):t(n)}))}))}))}}r([le],me.prototype,"encryptionKey",null);class Se extends be{channelReady;static ReadyFlag=Symbol("ChannelReadyFlag");motd="";locked=!1;adminData;verifiedGuest=!1;#g="";constructor(e){if(!e.channelServer)throw new Error("Channel(): no channel server provided");super(e),this.channelReady=this.sbChannelKeysReady.then((()=>(this[Se.ReadyFlag]=!0,this))).catch((e=>{throw e}))}get ready(){return this.channelReady}get ChannelReadyFlag(){return this[Se.ReadyFlag]}get api(){return this}#p(e,t){return s&&console.log("#callApi:",e),new Promise((async(n,r)=>{s&&console.log("ChannelApi.#callApi: calling fetch with path:",e,"body:",t),this.channelId||r("ChannelApi.#callApi: no channel ID (?)");let a="";const o=(new TextEncoder).encode((new Date).getTime().toString());s&&console.log("will sign using:",this.privateKey,o),a=o+"."+j(await pe.sign(this.signKey,o)),s&&console.log("finished signing, got authstring:",a);let i={method:"POST",headers:{"Content-Type":"application/json",authorization:a}},c={userId:this.userId,channelId:this.channelId,...t};i.body=JSON.stringify(c),s&&console.log("ChannelApi.#callApi: calling fetch with init:",i),y(this.channelServer+"/api/v2/channel/"+this.channelId+e,i).then((async e=>{const t=await e.json();if(!e.ok||t.error){let n="Network or Server error on Channel API call";e.status&&(n+=" ["+e.status+"]"),t.error&&(n+=": "+t.error),s&&console.error("ChannelApi.#callApi error:",n),r(new Error(n))}else s&&console.log("ChannelApi.#callApi: success"),n(t)})).catch((e=>{r("ChannelApi (SBFetch) Error [2]: "+u(e))}))}))}async deCryptChannelMessage(e,t){s&&console.log("Asked to decrypt:",e,t)}getLastMessageTimes(){throw new Error("Channel.getLastMessageTimes(): not supported in 2.0 yet")}getOldMessages(e=100,t=!1){return new Promise((async(n,r)=>{this.channelId||r("Channel.getOldMessages: no channel ID (?)"),this.channelReady||(s&&console.log("Channel.getOldMessages: channel not ready (we will wait)"),await this.ready);let a="";t&&(a="&cursor="+this.#g),y(this.channelServer+"/"+this.channelId+"/oldMessages?currentMessagesLength="+e+a,{method:"GET"}).then((async e=>(e.ok||r(new Error("Network response was not OK")),e.json()))).then((e=>{s&&(console.log("getOldMessages"),console.log(e)),Promise.all(Object.keys(e).filter((t=>e[t].hasOwnProperty("encrypted_contents"))).map((t=>this.deCryptChannelMessage(t,e[t].encrypted_contents)))).then((e=>e.filter((e=>Boolean(e))))).then((e=>{let t=e[e.length-1];t&&(this.#g=t._id||""),i&&console.log(e),n(e)})).catch((e=>{const t=`Channel.getOldMessages(): failed to decrypt messages: ${e}`;console.error(t),r(t)}))})).catch((e=>{const t=`Channel.getOldMessages(): SBFetch failed: ${e}`;console.error(t),r(t)}))}))}send(e){return Promise.reject("Channel.send(): abstract method, must be implemented in subclass")}updateCapacity(e){return this.#p("/updateRoomCapacity?capacity="+e)}getCapacity(){return this.#p("/getRoomCapacity")}getStorageLimit(){return this.#p("/getStorageLimit")}getMother(){return this.#p("/getMother")}getJoinRequests(){return this.#p("/getJoinRequests")}isLocked(){return new Promise((e=>this.#p("/roomLocked").then((t=>{this.locked=!0===t.locked,e(this.locked)}))))}setMOTD(e){return this.#p("/motd",{motd:e})}getAdminData(){return this.#p("/getAdminData")}authorize(e,t){return this.#p("/authorizeRoom",{roomId:this.channelId,SERVER_SECRET:t,ownerKey:e})}storageRequest(e){return this.#p("/storageRequest?size="+e)}acceptVisitor(e){console.warn(`WARNING: acceptVisitor(${e}) on channel api has not been tested/debugged fully ..`)}async getStorageToken(e){const t=await this.#p(`/storageRequest?size=${e}`);return d(!t.hasOwnProperty("error"),`storage token request error (${t.error})`),s&&console.log("getStorageToken():",t),t}budd(e){let{keys:t,storage:n,targetChannel:r}=e??{};return new Promise((async(a,o)=>{e&&e.hasOwnProperty("storage")&&void 0===e.storage&&o("If you omit 'storage' it defaults to Infinity, but you cannot set 'storage' to undefined");try{if(n||(n=1/0),r){if(this.channelId==r)throw new Error("[budd()]: You can't specify the same channel as targetChannel");if(t)throw new Error("[budd()]: You can't specify both a target channel and keys");a(this.#p(`/budd?targetChannel=${r}&transferBudget=${n}`))}else{const e=new we(t);await e.ready;const r={[ue]:!0,userPrivateKey:e.userPrivateKey,channelServer:this.channelServer,channelId:e.hash};let s=await this.#p(`/budd?targetChannel=${r.channelId}&transferBudget=${n}`,r);s.success?a(r):o(JSON.stringify(s))}}catch(e){o(e)}}))}}r([ce,le],Se.prototype,"api",null),r([le,he],Se.prototype,"updateCapacity",null),r([le,he],Se.prototype,"getCapacity",null),r([le],Se.prototype,"getStorageLimit",null),r([le,he],Se.prototype,"getMother",null),r([le,he],Se.prototype,"getJoinRequests",null),r([function(e,t,n){if(n&&n.value){const r=n.value;n.value=function(...a){try{return r.call(this,...a)}catch(r){return console.log(`ExceptionReject: ${u(r)}`),console.log(e),console.log(t),console.log(n),new Promise(((e,t)=>t(`Reject: ${u(r)}`)))}}}}],Se.prototype,"isLocked",null),r([le,he],Se.prototype,"setMOTD",null),r([le,he],Se.prototype,"getAdminData",null),r([le,he],Se.prototype,"authorize",null),r([le],Se.prototype,"storageRequest",null),r([le,he],Se.prototype,"acceptVisitor",null),r([le],Se.prototype,"getStorageToken",null),r([le,he],Se.prototype,"budd",null);class ke extends Se{channelSocketReady;static ReadyFlag=Symbol("ChannelSocketReadyFlag");#w;#b;#v=this.#m;#S=new Map;#k=!1;constructor(e,t){if(d(t,"ChannelSocket(): no onMessage handler provided"),!e.hasOwnProperty("channelId")||!e.hasOwnProperty("userPrivateKey"))throw new Error("ChannelSocket(): first argument must be valid SBChannelHandle");if(!e.channelServer)throw new Error("ChannelSocket(): no channel server provided (required)");super(e),this[n.ReadyFlag]=!1,this.#b=e.channelServer.replace(/^http/,"ws"),this.#v=t;const r=this.#b+"/api/v2/channel/"+e.channelId+"/websocket";this.#w={url:r,ready:!1,closed:!1,timeout:2e3},this.channelSocketReady=this.#A()}#m(e){d(!1,"NO MESSAGE HANDLER")}async#K(e){s&&console.log("Received socket message:",e)}#A(){return new Promise((async(e,t)=>{s&&console.log("++++ STARTED ChannelSocket.readyPromise()");const r=this.#w.url;this.#w.websocket&&3!==this.#w.websocket.readyState&&2!==this.#w.websocket.readyState||(this.#w.websocket=new WebSocket(r)),this.#w.websocket.addEventListener("open",(async()=>{this.#w.closed=!1,await this.ready,this.#w.init={userId:this.userId},s&&(console.log("++++++++ readyPromise() constructed init:"),console.log(this.#w.init)),this.#w.websocket.send(JSON.stringify(this.#w.init))})),this.#w.websocket.addEventListener("message",this.#K),this.#w.websocket.addEventListener("close",(e=>{this.#w.closed=!0,e.wasClean?e.reason.includes("does not have an owner")?t(`No such channel on this server (${this.channelServer})`):console.log("ChannelSocket() was closed (cleanly): ",e.reason):console.log(`ChannelSocket() was closed (and NOT cleanly: ${e.reason} from ${this.channelServer}`),t("wbSocket() closed before it was opened (?)")})),this.#w.websocket.addEventListener("error",(e=>{this.#w.closed=!0,console.log("ChannelSocket() error: ",e),t("ChannelSocket creation error (see log)")})),setTimeout((()=>{if(this[n.ReadyFlag])s&&console.log("ChannelSocket() - this socket resolved",this);else{const e="ChannelSocket() - this socket is not resolving (waited 10s) ...";console.warn(e),t(e)}}),1e4),this[n.ReadyFlag]=!0,e(this)}))}get ready(){return this.channelSocketReady}get ChannelSocketReadyFlag(){return this[n.ReadyFlag]}get status(){if(!this.#w.websocket)return"CLOSED";switch(this.#w.websocket.readyState){case 0:return"CONNECTING";case 1:return"OPEN";case 2:return"CLOSING";default:return"CLOSED"}}set onMessage(e){this.#v=e}get onMessage(){return this.#v}set enableTrace(e){this.#k=e,e&&console.log("==== jslib ChannelSocket: Tracing enabled ====")}send(e){const t=e instanceof me?e:new me(this,e);return d(this.#w.websocket,"ChannelSocket.send() called before ready"),this.#w.closed&&(this.#k&&console.info("send() triggered reset of #readyPromise() (normal)"),this.channelSocketReady=this.#A(),this[n.ReadyFlag]=!1),new Promise((async(e,n)=>{switch(await t.ready,await this.ready,this.ChannelSocketReadyFlag||n("ChannelSocket.send() is confused - ready or not?"),this.#w.websocket.readyState){case 1:this.#k&&console.log("++++++++ ChannelSocket.send() will send message:",Object.assign({},t));const r=Q(t);d(r,"ChannelSocket.send(): failed to assemble message");const a=j(await crypto.subtle.digest("SHA-256",r));this.#k&&(console.log("++++++++ ChannelSocket.send():Which has hash:"),console.log(a)),this.#S.set(a,e),this.#w.websocket.send(r),setTimeout((()=>{if(this.#S.has(a)){this.#S.delete(a);const e=`Websocket request timed out (no ack) after ${this.#w.timeout}ms (${a})`;console.error(e),n(e)}else this.#k&&console.log("++++++++ ChannelSocket.send() completed sending"),e("success")}),this.#w.timeout);break;case 3:case 0:case 2:n("socket not OPEN - either CLOSED or in the state of CONNECTING/CLOSING")}}))}}n=ke,r([le],ke.prototype,"onMessage",null),r([function(e,t,n){if(n&&n.value){const e=n.value;n.value=function(...t){for(let e of t){const t=e.constructor.name;"string"==typeof(n=t)&&ye.includes(n)&&d(ge(e,t),`invalid parameter: ${e} (expecting ${t})`)}var n;return e.call(this,...t)}}}],ke.prototype,"send",null);class Ae{version="2";#E="b";#C;#B;#P;shardServer;iv;salt;fileName;dateAndTime;fileType;lastModified;actualSize;savedSize;constructor(e){const{version:t,type:n,id:r,key:a,verification:o,iv:s,salt:i,fileName:c,dateAndTime:l,fileType:h,lastModified:y,actualSize:u,savedSize:d}=e;if(n&&(this.#E=n),t)this.version=t;else if(a&&r)if(z(a)&&z(r))this.version="2";else{if(!w(a)||!w(r))throw new Error("Unable to determine version from key and id");this.version="1"}else this.version="2";r&&(this.id=r),a&&(this.key=a),o&&(this.verification=o),this.iv=s,this.salt=i,this.fileName=c,this.dateAndTime=l,this.fileType=h,this.lastModified=y,this.actualSize=u,this.savedSize=d}set id_binary(e){if(!e)throw new Error("Invalid id_binary");if(32!==e.byteLength)throw new Error("Invalid id_binary length");this.#C=e,Object.defineProperty(this,"id64",{get:()=>j(this.#C),enumerable:!1,configurable:!1}),Object.defineProperty(this,"id32",{get:()=>U(this.#C),enumerable:!1,configurable:!1})}set key_binary(e){if(!e)throw new Error("Invalid key_binary");if(32!==e.byteLength)throw new Error("Invalid key_binary length");this.#B=e,Object.defineProperty(this,"key64",{get:()=>j(this.#B),enumerable:!1,configurable:!1}),Object.defineProperty(this,"key32",{get:()=>U(this.#B),enumerable:!1,configurable:!1})}set id(e){if("string"==typeof e){if("1"===this.version){if(!w(e))throw new Error("Requested version 1, but id is not b64");this.id_binary=C(e)}else if("2"===this.version){if(!z(e))throw new Error("Requested version 2, but id is not b62");this.id_binary=F(e)}}else{if(!(e instanceof ArrayBuffer))throw new Error("Invalid ID type");if(32!==e.byteLength)throw new Error("Invalid ID length");this.id_binary=e}}set key(e){if("string"==typeof e){if("1"===this.version){if(!w(e))throw new Error("Requested version 1, but key is not b64");this.#B=C(e)}else if("2"===this.version){if(!z(e))throw new Error("Requested version 2, but key is not b62");this.#B=F(e)}}else{if(!(e instanceof ArrayBuffer))throw new Error("Invalid key type");if(32!==e.byteLength)throw new Error("Invalid key length");this.#B=e}}get id(){if(d(this.#C,"object handle id is undefined"),"1"===this.version)return j(this.#C);if("2"===this.version)return U(this.#C);throw new Error("Invalid or missing version (internal error, should not happen)")}get key(){if(d(this.#B,"object handle key is undefined"),"1"===this.version)return j(this.#B);if("2"===this.version)return U(this.#B);throw new Error("Invalid or missing version (internal error, should not happen)")}get id64(){throw new Error("Invalid id_binary")}get id32(){throw new Error("Invalid id_binary")}get key64(){throw new Error("Invalid key_binary")}get key32(){throw new Error("Invalid key_binary")}set verification(e){this.#P=e}get verification(){return d(this.#P,"object handle verification is undefined"),this.#P}get type(){return this.#E}}class Ke{storageServer;constructor(e){if("string"!=typeof e)throw new Error("[StorageApi] Invalid parameter to constructor");this.storageServer=e}#R(e){const t=e.byteLength;let n;n=t+4<4096?4096:t+4<1048576?2**Math.ceil(Math.log2(t+4)):1048576*Math.ceil((t+4)/1048576);let r=q(e,new Uint8Array(n-t).buffer);return new DataView(r).setUint32(n-4,t),i&&console.log("#padBuf bytes:",r.slice(-4)),r}#I(e){const t=e.slice(-4);var n=new DataView(t).getUint32(0);const r=new DataView(t).getUint32(0,!0);return r<n&&(i&&console.warn("#unpadData - size of shard encoded as little endian (fixed upon read)"),n=r),i&&console.log(`#unpadData - size of object is ${n}`),e.slice(0,n)}#j(e,t){return new Promise(((n,r)=>{try{pe.importKey("raw",e,"PBKDF2",!1,["deriveBits","deriveKey"]).then((e=>{crypto.subtle.deriveKey({name:"PBKDF2",salt:t,iterations:1e5,hash:"SHA-256"},e,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]).then((e=>{n(e)}))}))}catch(e){r(e)}}))}#O(e,t){return new Promise(((n,r)=>{y(this.storageServer+"/api/v1/storeRequest?name="+U(e)+"&type="+t).then((e=>e.arrayBuffer())).then((e=>{const t=re(e);n({salt:t.salt,iv:t.iv})})).catch((e=>{console.warn(`**** ERROR: ${e}`),r(e)}))}))}async#D(e,t,n,r,a,o,s){return new Promise((async(i,c)=>{try{const l=await this.#j(n,s),h=await pe.encrypt(e,l,{iv:o}),y=await a.getStorageToken(h.byteLength),u=await this.storeObject(r,t,o,s,y,h);u.error&&c(`storeObject() failed: ${u.error}`),u.image_id!=t&&c(`received imageId ${u.image_id} but expected ${t}`),i(u.verification_token)}catch(e){const t=`storeObject() failed: ${e}`;console.error(t),c(t)}}))}storeObject(e,t,n,r,a,o){return new Promise(((s,i)=>{if("string"!=typeof e){const e="NEW in 1.2.x - storeData() and storeObject() have switched places, you probably meant to use storeData()";console.error(e),i("errMsg")}y(this.storageServer+"/storeData?type="+e+"&key="+t,{method:"POST",body:Q({iv:n,salt:r,image:o,storageToken:(new TextEncoder).encode(a),vid:crypto.getRandomValues(new Uint8Array(48))})}).then((e=>(e.ok||i("response from storage server was not OK"),e.json()))).then((e=>{s(e)})).catch((e=>{i(e)}))}))}storeData(e,t,n){return new Promise(((r,a)=>{if("string"==typeof e){const e="NEW in 1.2.x - storeData() and storeObject() have switched places, you probably meant to use storeObject()";console.error(e),a("errMsg")}e instanceof Uint8Array&&(i&&console.log("converting Uint8Array to ArrayBuffer"),e=new Uint8Array(e).buffer),e instanceof ArrayBuffer||"ArrayBuffer"==e.constructor.name||(i&&console.log("buf must be an ArrayBuffer:"),console.log(e),a("buf must be an ArrayBuffer"));const o=e.byteLength,s=n instanceof Se?n:new Se(n),c=this.#R(e);pe.generateIdKey(c).then((e=>{this.#O(e.id_binary,t).then((n=>{const a=U(e.id_binary),i=U(e.key_material),l={[fe]:!0,version:"2",type:t,id:a,key:i,iv:n.iv,salt:n.salt,actualSize:o,verification:this.#D(c,a,e.key_material,t,s,n.iv,n.salt)};r(l)})).catch((e=>a(e)))}))}))}#x(e,t){return new Promise(((n,r)=>{try{let t=J(pe.ab2str(new Uint8Array(e)),"L3062");t.error&&r(`#processData() error: ${t.error}`)}catch(e){}finally{const r=re(e);s&&(console.log("Payload (#processData) is:"),console.log(r));const o=new ArrayBuffer(r.iv),c=new ArrayBuffer(r.salt),l=t.iv?"string"==typeof t.iv?C(t.iv):t.iv:void 0,h=t.salt?"string"==typeof t.salt?C(t.salt):t.salt:void 0;var a;if(l&&!I(o,l)&&(console.error("WARNING: nonce from server differs from local copy"),console.log(`object ID: ${t.id}`),console.log(` local iv: ${j(l)}`),console.log(`server iv: ${j(r.iv)}`)),h&&!I(c,h)&&(console.error("WARNING: salt from server differs from local copy (will use server)"),t.salt?"string"==typeof t.salt?(console.log("h.salt is in string form (unprocessed):"),console.log(t.salt)):(console.log("h.salt is in arrayBuffer or Uint8Array"),console.log("h.salt as b64:"),console.log(j(t.salt)),console.log("h.salt unprocessed:"),console.log(t.salt)):console.log("h.salt is undefined"),console.log("handleSalt as b64:"),console.log(j(h)),console.log("handleSalt unprocessed:"),console.log(h)),i&&(console.log("will use nonce and salt of:"),console.log(`iv: ${j(o)}`),console.log(`salt : ${j(c)}`)),"1"===t.version)a=C(t.key);else{if("2"!==t.version)throw new Error("Invalid or missing version (internal error, should not happen)");a=F(t.key)}this.#j(a,c).then((e=>{const t=r.image;i&&(console.log("data.image:      "),console.log(r.image),console.log("encrypted_image: "),console.log(t)),pe.unwrap(e,{contents:t,iv:o}).then((e=>{const t=this.#I(e);s&&(console.log("#processData(), unwrapped img: "),console.log(t)),n(t)}))}))}}))}async#T(e,t,n,r){const a={method:"GET"};return new Promise((async(o,s)=>{y(e+t,a).then((e=>e.ok?e.arrayBuffer():null)).then((e=>null===e?null:this.#x(e,n))).then((e=>{null===e&&o(null),o("string"===r?pe.ab2str(new Uint8Array(e)):e)})).catch((e=>null))}))}fetchData(e,t="arrayBuffer"){return new Promise((async(n,r)=>{const a=new Ae(e);a||r("SBObjectHandle is null or undefined");const o=await a.verification,i=this.storageServer+"/api/v1";s&&console.log("fetchData(), fetching from server: "+i);const c="/fetchData?id="+a.id+"&type="+a.type+"&verification_token="+o,l=await this.#T(i,c,a,t);null!==l?(s&&console.log(`[fetchData] success: fetched from '${i}'`,l),n(l)):r("fetchData() failed")}))}}class Ee{channelServer;storageServer;#M;#_=a;sbFetch=y;constructor(e,t,n){if(console.warn(`==== CREATING Snackabra object generation: ${this.#_} ====`),t&&!0===t&&(s=!0),s&&n&&!0===n&&(i=!0),s&&console.warn("++++ Snackabra constructor ++++ setting DBG to TRUE ++++"),i&&console.warn("++++ Snackabra constructor ++++ ALSO setting DBG2 to TRUE ++++"),"string"!=typeof e)throw new Error("[Snackabra] Invalid parameter type for constructor");this.channelServer=e,this.storageServer="TODO",this.#M=new Ke(this.storageServer)}attach(e){return new Promise(((t,n)=>{e.channelId?(e.channelServer?e.channelServer!==this.channelServer&&n("SBChannelHandle channelId does not match channelServer"):e.channelServer=this.channelServer,t(new Se(e))):n("SBChannelHandle missing channelId")}))}create(e){return d(null!==e,"[create channel] Invalid parameter (null)"),new Promise((async(t,n)=>{try{let r;if("string"==typeof e)r=e;else if(e instanceof Se){const t=e;await t.ready,r=await t.getStorageToken(o),d(r,"[create channel] Failed to get storage token for the provided channel")}else n("Invalid parameter to create() - need a token or a budget channel");const a=await(new be).ready,i=a.channelData;i.storageToken=r,s&&console.log("Will try to create channel with channelData:",i);const c=(new TextEncoder).encode(JSON.stringify(i));let l=await y(this.channelServer+"/api/v2/channel/"+i.channelId+"/create",{method:"POST",body:c});if(l=await l.json(),!l.success){const e=`Creating channel did not succeed (${JSON.stringify(l)})`;return console.error(e),void n(e)}t({[ue]:!0,channelId:i.channelId,userPrivateKey:a.userPrivateKey,channelPrivateKey:(await new we(a.channelPrivateKey).ready).userPrivateKey,channelServer:this.channelServer,channelData:i})}catch(e){const t=`Creating channel did not succeed: ${e}`;console.error(t),n(t)}}))}connect(e,t){const n={[ue]:!0,channelId:e.channelId,userPrivateKey:e.userPrivateKey,channelServer:this.channelServer};return s&&console.log("++++ Snackabra.connect() ++++",n),new ke(n,t||(e=>{console.log("MESSAGE (not caught):",e)}))}get storage(){if("string"==typeof this.#M)throw new Error("StorageApi not initialized");return this.#M}get crypto(){return pe}get version(){return this.#_}}var Ce={Snackabra:Ee,SBMessage:me,Channel:Se,SBCrypto:ie,SB384:we,arrayBufferToBase64:j,sbCrypto:pe,version:a};return globalThis.SB||(globalThis.SB=Ce),console.warn(`==== SNACKABRA jslib loaded ${globalThis.SB.version} ====`),t})()));