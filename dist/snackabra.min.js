!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.SB=t():e.SB=t()}(self,(()=>(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{Channel:()=>xe,ChannelSocket:()=>_e,KeyPrefix:()=>oe,MessageBus:()=>E,NEW_CHANNEL_MINIMUM_BUDGET:()=>o,Protocol_AES_GCM_256:()=>Me,Protocol_ECDH:()=>Te,SB:()=>Le,SB384:()=>Pe,SBApiFetch:()=>M,SBChannelKeys:()=>Ie,SBCrypto:()=>ye,SBMessage:()=>De,SBStorageTokenPrefix:()=>i,Snackabra:()=>je,StorageApi:()=>Oe,arrayBufferToBase62:()=>Z,arrayBufferToBase64url:()=>F,assemblePayload:()=>ne,b62regex:()=>H,base62:()=>$,base62ToArrayBuffer:()=>Y,base62ToBase64:()=>X,base62regex:()=>G,base64ToArrayBuffer:()=>U,base64ToBase62:()=>Q,base64url:()=>j,compareBuffers:()=>I,composeMessageKey:()=>u,deComposeMessageKey:()=>g,extractPayload:()=>se,getRandomValues:()=>R,hydrateKey:()=>de,isBase62Encoded:()=>z,jsonParseWrapper:()=>A,msgTtlToSeconds:()=>k,msgTtlToString:()=>C,sbCrypto:()=>Ke,setDebugLevel:()=>m,stringify_SBObjectHandle:()=>K,stripChannelMessage:()=>v,validate_ChannelApiBody:()=>p,validate_ChannelMessage:()=>w,validate_Message:()=>f,validate_SBChannelData:()=>y,validate_SBChannelHandle:()=>h,validate_SBObjectHandle:()=>B,validate_SBStorageToken:()=>c,version:()=>s});var n,r,a=function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o};const s="2.0.0-alpha.5 (build 67)",o=33554432,i="LM2r";function c(e){if(e){if(e[ke])return e;if("string"==typeof e&&e.slice(0,4)===i)return{[ke]:!0,hash:e};if(!(e.hash&&"string"==typeof e.hash&&e.hash.length>0&&(!e.size||Number.isInteger(e.size)&&e.size>0))||e.motherChannel&&"string"!=typeof e.motherChannel||e.created&&!Number.isInteger(e.created)||e.used&&"boolean"!=typeof e.used)throw b&&console.error("invalid SBStorageToken ... trying to ingest:\n",e),new Error("invalid SBStorageToken");return{...e,[ke]:!0}}throw new Error("invalid SBStorageToken (null or undefined)")}function l(e){return e.channelId&&43===e.channelId.length&&e.userPrivateKey&&"string"==typeof e.userPrivateKey&&e.userPrivateKey.length>0&&(!e.channelServer||"string"==typeof e.channelServer)&&(!e.channelData||d(e.channelData))}function h(e){if(e){if(e[be])return e;if(l(e))return{...e,[be]:!0};throw S&&console.error("invalid SBChannelHandle ... trying to ingest:\n",e),new Error("invalid SBChannelHandle")}throw new Error("invalid SBChannelHandle (null or undefined)")}function d(e){return e.channelId&&43===e.channelId.length&&e.ownerPublicKey&&"string"==typeof e.ownerPublicKey&&e.ownerPublicKey.length>0&&(!e.storageToken||c(e.storageToken))}function y(e){if(e){if(d(e))return e;throw b&&console.error("invalid SBChannelData ... trying to ingest:\n",e),new Error("invalid SBChannelData")}throw new Error("invalid SBChannelData (null or undefined)")}function u(e,t,n="____"){return`${e}_${n??"____"}_${r=t,r.toString(4).padStart(22,"0")+"0000"}`;var r}function g(e){const t=e.slice(0,43),n=e.slice(44,48);var r;return{channelId:t,timestamp:(r=e.slice(49),parseInt(r,4)),subChannel:n}}function f(e){if(e){if(e.body&&"object"==typeof e.body&&e.channelId&&"string"==typeof e.channelId&&43===e.channelId.length&&e.sender&&"string"==typeof e.sender&&43===e.sender.length&&e.senderPublicKey&&"string"==typeof e.senderPublicKey&&e.senderPublicKey.length>0&&e.senderTimestamp&&Number.isInteger(e.senderTimestamp)&&e.serverTimestamp&&Number.isInteger(e.serverTimestamp)&&e._id&&"string"==typeof e._id&&86===e._id.length)return e;throw b&&console.error("invalid Message ... trying to ingest:\n",e),new Error("invalid Message")}throw new Error("invalid Message (null or undefined)")}function p(e){if(e){if(e[ve])return e;if(e.channelId&&43===e.channelId.length&&e.path&&"string"==typeof e.path&&e.path.length>0&&e.userId&&"string"==typeof e.userId&&43===e.userId.length&&e.userPublicKey&&e.userPublicKey.length>0&&(!e.isOwner||"boolean"==typeof e.isOwner)&&(!e.apiPayloadBuf||e.apiPayloadBuf instanceof ArrayBuffer)&&e.timestamp&&Number.isInteger(e.timestamp)&&e.sign&&e.sign instanceof ArrayBuffer)return{...e,[ve]:!0};throw b&&console.error("invalid ChannelApiBody ... trying to ingest:\n",e),new Error("invalid ChannelApiBody")}throw new Error("invalid ChannelApiBody (null or undefined)")}function w(e){if(e){if(e[we])return e;if(!(e.f&&"string"==typeof e.f&&43===e.f.length&&e.c&&e.c instanceof ArrayBuffer&&e.ts&&Number.isInteger(e.ts)&&e.iv&&e.iv instanceof Uint8Array&&12===e.iv.length&&e.s&&e.s instanceof ArrayBuffer)||e.sts&&!Number.isInteger(e.sts)||e.salt&&!(e.salt instanceof ArrayBuffer&&16===e.salt.byteLength)||e._id&&("string"!=typeof e._id||86!==e._id.length)||e.ready&&"boolean"!=typeof e.ready||e.timestampPrefix&&("string"!=typeof e.timestampPrefix||26!==e.timestampPrefix.length)||e.channelId&&("string"!=typeof e.channelId||43!==e.channelId.length)||e.i2&&("string"!=typeof e.i2||!/^[a-zA-Z0-9_]{4}$/.test(e.i2))||e.ttl&&!(Number.isInteger(e.ttl)&&e.ttl>=0&&e.ttl<=15))throw S&&console.error("invalid ChannelMessage ... trying to ingest:\n",e),new Error("invalid ChannelMessage");return{...e,[we]:!0}}throw new Error("invalid ChannelMessage (null or undefined)")}function v(e){b&&console.log("stripping message:\n",e);const t={};if(void 0===e.f)throw new Error("ERROR: missing 'f' ('from') in message");if(t.f=e.f,void 0===e.c)throw new Error("ERROR: missing 'ec' ('encrypted contents') in message");if(t.c=e.c,void 0===e.iv)throw new Error("ERROR: missing 'iv' ('nonce') in message");if(t.iv=e.iv,void 0===e.salt)throw new Error("ERROR: missing 'salt' in message");if(t.salt=e.salt,void 0===e.s)throw new Error("ERROR: missing 's' ('signature') in message");if(t.s=e.s,void 0===e.ts)throw new Error("ERROR: missing 'ts' ('timestamp') in message");if(t.ts=e.ts,void 0===e.sts)throw new Error("ERROR: missing 'sts' ('servertimestamp') in message");return t.sts=e.sts,void 0!==e.ttl&&15!==e.ttl&&(t.ttl=e.ttl),void 0!==e.t&&(t.t=e.t),void 0!==e.i2&&"____"!==e.i2&&(t.i2=e.i2),t}var b=!1,S=!1;function m(e,t){t&&(S=e&&t),(b=e)&&console.warn("++++ [setDebugLevel]: setting DBG to TRUE ++++"),S&&console.warn("++++ [setDebugLevel]: ALSO setting DBG2 to TRUE (verbose) ++++")}globalThis.configuration&&!0===globalThis.configuration.DEBUG&&((b=!0)&&console.warn("++++ Setting DBG to TRUE based on 'configuration.DEBUG' ++++"),!0===globalThis.configuration.DEBUG2&&(S=!0,b&&console.warn("++++ ALSO setting DBG2 (verbose) ++++")));const k=[0,-1,-1,60,300,1800,14400,129600,864e3,-1,-1,-1,-1,-1,1/0],C=["Ephemeral","<reserved>","<reserved>","One minute","Five minutes","Thirty minutes","Four hours","36 hours","10 days","<reserved>","<reserved>","<reserved>","<reserved>","<reserved>","Permastore (no TTL)"];function B(e){if(e){if(e[me])return e;if(!e.version||"string"!=typeof e.version||1!==e.version.length||e.type&&("string"!=typeof e.type||1!==e.type.length)||!e.id||"string"!=typeof e.id||43!==e.id.length||e.key&&("string"!=typeof e.key||43!==e.key.length)||e.verification&&"string"!=typeof e.verification&&"object"!=typeof e.verification||e.iv&&"string"!=typeof e.iv&&!(e.iv instanceof Uint8Array)||e.salt&&"string"!=typeof e.salt&&!(e.salt instanceof ArrayBuffer))throw b&&console.error("invalid SBObjectHandle ... trying to ingest:\n",e),new Error("invalid SBObjectHandle");return{...e,[me]:!0}}throw new Error("invalid SBObjectHandle (null or undefined)")}async function K(e){return e.iv&&(e.iv="string"==typeof e.iv?e.iv:Z(e.iv)),e.salt&&(e.salt="string"==typeof e.salt?e.salt:Z(e.salt)),e.verification=await e.verification,B(e)}class E{bus={};#e(e){return this.bus[e]||(this.bus[e]=[])}subscribe(e,t){this.#e(e).push(t)}unsubscribe(e,t){let n=-1;this.bus[e]?-1!=(n=this.bus[e].findLastIndex((e=>e==t)))?this.bus[e].splice(n,1):console.info("fyi: asked to remove a handler but it's not there"):console.info("fyi: asked to remove a handler but the event is not there")}publish(e,...t){for(const n of this.#e("*"))n(e,...t);for(const n of this.#e(e))n(...t)}}function A(e,t,n){for(;e&&"string"==typeof e;)try{e=JSON.parse(e,n)}catch(n){throw new Error(`JSON.parse() error${t?` at ${t}`:""}: ${n}\nString (possibly nested) was: ${e}`)}return e}const P=e=>e instanceof ArrayBuffer?new DataView(e):new DataView(e.buffer,e.byteOffset,e.byteLength);function I(e,t){if(typeof e!=typeof t)return!1;if(null==e||null==t)return!1;const n=P(e),r=P(t);if(n.byteLength!==r.byteLength)return!1;for(let e=0;e<n.byteLength;e++)if(n.getUint8(e)!==r.getUint8(e))return!1;return!0}function R(e){if(e.byteLength<4096)return crypto.getRandomValues(e);{_(!(e.byteLength%1024),"getRandomValues(): large requested blocks must be multiple of 1024 in size");let t=0;try{for(t=0;t<e.byteLength;t+=1024){let n=new Uint8Array(1024);crypto.getRandomValues(n),e.set(n,t)}}catch(e){console.log(`got an error on index i=${t}`),console.log(e),console.trace()}return e}}function D(e,t){return new Promise(((n,r)=>{try{fetch(e,t??{method:"GET",headers:{"Content-Type":"application/json"}}).then((e=>{n(e)})).catch((e=>{throw e}))}catch(e){const t=`[SBFetch] Error (fetch exception, might be normal operation): ${e}`;console.warn(t),r(t)}}))}function M(e,t){return new Promise(((n,r)=>{D(e,t).then((async t=>{var a;if(!t||!t.ok){const e=await t.json();let n="[SBApiFetch] Server responded with error\n";return t.statusText&&(n+=`Status text: ('${t.statusText}')\n`),e.error&&(n+=`Error msg:   ('${e.error}')\n`),b&&console.log(n),void r(n)}const s=t.headers.get("content-type");if(s){if(-1!==s.indexOf("application/json")){const e=await t.json();S&&console.log(`[SBApiFetch] json ('${e}'):\n`,e),a=A(e,"L489")}else{if(-1===s.indexOf("application/octet-stream"))return void r("SBApiFetch] Server responded with unknown content-type header (?)");a=se(await t.arrayBuffer()).payload}if(!a||a.error||a.success&&!a.success){let e="[SBApiFetch] Network or Server error or cannot parse response";t.status&&(e+=" ["+t.status+"]"),a?.error&&(e+=": "+a.error),b&&console.error("[SBApiFetch] error:\n",e),r(new Error(e))}else S&&console.log("[SBApiFetch] Success:\n",Ee,e,"\n",Ee,a,"\n",Ee),n(a)}else r("[SBApiFetch] Server response missing content-type header (?)")})).catch((e=>{r(e)}))}))}function T(e){const t=" ***ERRORMSGSTART*** ",n=" ***ERRORMSGEND*** ";return e instanceof Error?(b&&console.error("[WrapError] Error: \n",e),new Error(t+e.message+n)):new Error(t+String(e)+n)}function x(e,t){throw new Error("[_sb_exception] << SB lib error ("+e+": "+t+") >>")}function _(e,t){if(!e){const e=` <<<<[_sb_assert] assertion failed: '${t}'>>>> `;throw b&&console.trace(e),new Error(e)}}function O(e,t){const n=new Uint8Array(e.byteLength+t.byteLength);return n.set(new Uint8Array(e),0),n.set(new Uint8Array(t),e.byteLength),n.buffer}const j="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",L=/^([A-Za-z0-9\-_]*)(={0,2})$/;function F(e){const t=e instanceof ArrayBuffer?new Uint8Array(e):e;let n="";for(let e=0;e<t.length;e+=3){const r=t[e],a=t[e+1],s=t[e+2];n+=j[r>>2]+j[(3&r)<<4|a>>4]+(void 0!==a?j[(15&a)<<2|s>>6]:"")+(void 0!==s?j[63&s]:"")}return n}function U(e){if(e=e.replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,""),!L.test(e))throw new Error(`invalid character in b64 string (after cleanup: '${e}')`);const t=e.length,n=new Uint8Array(3*t/4);for(let r=0,a=0;r<t;r+=4){const[t,s,o,i]=[e[r],e[r+1],e[r+2],e[r+3]].map((e=>j.indexOf(e)));n[a++]=t<<2|s>>4,-1!==o&&(n[a++]=(15&s)<<4|o>>2),-1!==i&&(n[a++]=(3&o)<<6|i)}return n}const $="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",N=$[0],H=/^[A-Za-z0-9]*$/,G=H;function z(e){return H.test(e)}const V=32,W=new Map,q=new Map;for(let e=1;e<=V;e++){const t=Math.ceil(8*e/Math.log2(62));W.set(e,t),q.set(t,e)}const J=W.get(V);function Z(e){function t(e,t){let n="",r=0n;for(const t of e)r=r<<8n|BigInt(t);for(;r>0n;r/=62n)n=$[Number(r%62n)]+n;return n.padStart(W.get(t),N)}const n=e instanceof ArrayBuffer?new Uint8Array(e):e;let r="";for(let e,a=n.byteLength,s=0;a>0;s+=e,a-=e)e=a>=V?V:a,r+=t(n.slice(s,s+e),e);return r}function Y(e){if(!H.test(e))throw new Error("base62ToArrayBuffer32: must be alphanumeric (0-9A-Za-z).");function t(e,t){try{let n=0n,r=new Uint8Array(t);for(let t=0;t<e.length;t++)n=62n*n+BigInt($.indexOf(e[t]));if(n>2n**BigInt(8*t)-1n)throw new Error("base62ToArrayBuffer: Invalid Base62 string.");for(let e=t-1;e>=0;e--,n>>=8n)r[e]=Number(0xffn&n);return r}catch(e){throw new Error("base62ToArrayBuffer: Invalid Base62 string.")}}try{let n=0,r=new Uint8Array(6*e.length/8);for(let a,s,o=0;o<e.length;o+=a,n+=s.byteLength)a=Math.min(e.length-o,J),s=t(e.slice(o,o+a),q.get(a)),r.set(s,n);return r.buffer.slice(0,n)}catch(e){throw e}}function X(e){return F(Y(e))}function Q(e){return Z(U(e))}function ee(e){if(null===e)return"0";if(void 0===e)return"u";if(Array.isArray(e))return"a";if(e instanceof ArrayBuffer)return"x";if(e instanceof Uint8Array)return"8";if("boolean"==typeof e)return"b";if(e instanceof DataView)return"v";if(e instanceof Date)return"d";if(e instanceof Map)return"m";if("number"==typeof e)return"number"==typeof(t=e)&&t>=-2147483648&&t<=2147483647&&t%1==0?"i":"n";var t;if(null!==e&&"object"==typeof e&&e.constructor===Object)return"o";if(e instanceof Set)return"t";if("string"==typeof e)return"s";if(e instanceof WeakRef)return"w";throw"object"==typeof e&&"function"==typeof e.then?console.error("[getType] Trying to serialize a Promise - did you forget an 'await'?"):console.error("[getType] Unsupported for object:",e),new Error("Unsupported type")}function te(e){try{const t={};let n=0,r=0,a=[];for(const s in e)if(e.hasOwnProperty(s)){const o=e[s],i=ee(o);switch(i){case"o":const e=te(o);if(!e)throw new Error(`Failed to assemble payload for ${s}`);a.push(e);break;case"n":const t=new Uint8Array(8);new DataView(t.buffer).setFloat64(0,o),a.push(t.buffer);break;case"i":const n=new Uint8Array(4);new DataView(n.buffer).setInt32(0,o),a.push(n.buffer);break;case"d":const r=new Uint8Array(8);new DataView(r.buffer).setFloat64(0,o.getTime()),a.push(r.buffer);break;case"b":const c=new Uint8Array(1);c[0]=o?1:0,a.push(c.buffer);break;case"s":const l=(new TextEncoder).encode(o);a.push(l);break;case"x":a.push(o);break;case"8":a.push(o.buffer);break;case"m":const h=new Array;o.forEach(((e,t)=>{h.push([t,e])}));const d=te(h);if(!d)throw new Error(`Failed to assemble payload for ${s}`);a.push(d);break;case"a":const y=new Array;o.forEach((e=>{y.push(e)}));const u=te(y);if(!u)throw new Error(`Failed to assemble payload for ${s}`);a.push(u);break;case"t":const g=new Array;o.forEach((e=>{g.push(e)}));const f=te(g);if(!f)throw new Error(`Failed to assemble payload for ${s}`);a.push(f);break;case"w":case"0":case"u":a.push(new ArrayBuffer(0));break;default:throw console.error(`[assemblePayload] Unsupported type: ${i}`),new Error(`Unsupported type: ${i}`)}const c=a[a.length-1].byteLength;n++,t[n.toString()]={n:s,s:r,z:c,t:i},r+=c}const s=(new TextEncoder).encode(JSON.stringify(t)),o=new Uint32Array([s.byteLength]);let i=O(new Uint8Array(o.buffer),new Uint8Array(s));for(let e=0;e<a.length;e++)i=O(new Uint8Array(i),a[e]);return i}catch(e){return console.error(e),null}}function ne(e){return b&&e instanceof ArrayBuffer&&console.warn("[assemblePayload] Warning: data is already an ArrayBuffer, make sure you are not double-encoding"),te({ver003:!0,payload:e})}function re(e,t){switch(t){case"o":return ae(e);case"n":return new DataView(e).getFloat64(0);case"i":return new DataView(e).getInt32(0);case"d":return new Date(new DataView(e).getFloat64(0));case"b":return 1===new Uint8Array(e)[0];case"s":return(new TextDecoder).decode(e);case"a":const n=ae(e);if(!n)throw new Error(`Failed to assemble payload for ${t}`);return Object.values(n);case"m":const r=ae(e);if(!r)throw new Error(`Failed to assemble payload for ${t}`);const a=new Map;for(const e in r)a.set(r[e][0],r[e][1]);return a;case"t":const s=ae(e);if(!s)throw new Error(`Failed to assemble payload for ${t}`);const o=new Set;for(const e in s)o.add(s[e]);return o;case"x":return e;case"8":return new Uint8Array(e);case"0":return null;case"u":return;default:throw new Error(`Unsupported type: ${t}`)}}function ae(e){const t="Cannot parse metadata, this is not a well-formed payload";try{const n=new Uint32Array(e.slice(0,4))[0],r=(new TextDecoder).decode(e.slice(4,4+n));let a;try{a=A(r,"L1290")}catch(e){throw b&&console.error("[extractPayload] Error parsing metadata for payload: ",r),new Error(t)}const s=4+n,o={};for(let t=1;t<=Object.keys(a).length;t++){const n=t.toString();if(a[n]){const t=a[n],r=t.s,i=t.z,c=t.t,l=e.slice(s+r,s+r+i);o[t.n]=re(l,c)}else console.log(`found nothing for index ${t}`)}return o}catch(e){if(e instanceof Error&&e.message===t)throw e;throw new Error("[extractPayload] exception <<"+e+">> [/extractPayload]")}}function se(e){return ae(e)}var oe,ie;function ce(e){"string"==typeof e&&(e=U(e));const t=new Uint8Array(e);return 1==(1&t[t.length-1])?1:0}function le(e){try{if(e.length<=4)return;const t=e.slice(0,4),n=e.slice(4);switch(t.slice(0,3)){case oe.SBPublicKey:switch(t[3]){case ie.Uncompressed:{const e=Y(n);if(96!==e.byteLength)return;const t=e.slice(48,96);return{x:F(e.slice(0,48)),y:F(t),ySign:ce(t)}}case ie.CompressedEven:case ie.CompressedOdd:{const e=t[3]===ie.CompressedEven?0:1,r=Y(n);if(48!==r.byteLength)return;const{x:a,y:s}=Ae(F(r),e);return{x:a,y:s,ySign:e}}default:console.error("KeySubPrefix not recognized")}break;case oe.SBPrivateKey:switch(t[3]){case ie.Uncompressed:{const e=Y(n);if(144!==e.byteLength)return;const t=e.slice(48,96);return{x:F(e.slice(0,48)),y:F(t),ySign:ce(t),d:F(e.slice(96,144))}}case ie.CompressedEven:case ie.CompressedOdd:{const e=t[3]===ie.CompressedEven?0:1,r=Y(n);if(96!==r.byteLength)return;const a=r.slice(0,48),{x:s,y:o}=Ae(F(a),e);return{x:s,y:o,ySign:e,d:F(r.slice(48,96))}}case ie.Dehydrated:return void console.error("parseSB384string() - you need to rehydrate first ('hydrateKey()')");default:console.error("KeySubPrefix not recognized")}break;default:console.error("KeyPrefix not recognized")}return}catch(e){return void console.error("parseSB384string() - malformed input, exception: ",e)}}function he(e,t,n){if(!e||64!==e.length||!t||64!==t.length||void 0===n)return;const r=new Uint8Array(96);return r.set(U(e),0),r.set(U(t),48),oe.SBPrivateKey+(0===n?ie.CompressedEven:ie.CompressedOdd)+Z(r)}function de(e,t){if(e.length<=4)return;const n=e.slice(0,4);switch(n.slice(0,3)){case oe.SBPublicKey:return e;case oe.SBPrivateKey:switch(n[3]){case ie.Uncompressed:case ie.CompressedEven:case ie.CompressedOdd:return e;case ie.Dehydrated:{if(!t)return void console.error("hydrateKey() - you need to provide pubKey to hydrate");const n=F(Y(e.slice(4)).slice(0,48)),r=le(t);return r&&r.x&&void 0!==r.ySign?he(r.x,n,r.ySign):void console.error("hydrateKey() - failed to parse public key")}default:console.error("KeySubPrefix not recognized")}break;default:console.error("KeyPrefix not recognized")}}!function(e){e.SBPublicKey="PNk",e.SBPrivateKey="Xj3",e.SBDehydratedKey="XjZ"}(oe||(oe={})),function(e){e.CompressedEven="2",e.CompressedOdd="3",e.Uncompressed="4",e.Dehydrated="x"}(ie||(ie={}));class ye{generateIdKey(e){if(!(e instanceof ArrayBuffer))throw new TypeError("Input must be an ArrayBuffer");return new Promise(((t,n)=>{try{crypto.subtle.digest("SHA-512",e).then((e=>{const n=e.slice(0,32),r=e.slice(32);t({id_binary:n,key_material:r})}))}catch(e){n(e)}}))}async generateKeys(){try{return await crypto.subtle.generateKey({name:"ECDH",namedCurve:"P-384"},!0,["deriveKey"])}catch(e){throw new Error("generateKeys() exception ("+e+")")}}async importKey(e,t,n,r,a){try{let s;const o={ECDH:{name:"ECDH",namedCurve:"P-384"},AES:{name:"AES-GCM"},PBKDF2:"PBKDF2"};if("jwk"===e){const e=t;if(void 0===e.kty)throw new Error("importKey() - invalid JsonWebKey");"ECDH"===e.alg&&(e.alg=void 0),s=await crypto.subtle.importKey("jwk",e,o[n],r,a)}else s=await crypto.subtle.importKey(e,t,o[n],r,a);return s}catch(s){const o=`... importKey() error: ${s}:`;throw b&&(console.log(Ee,Ee),console.error(o),console.log(e),console.log(t),console.log(n),console.log(r),console.log(a),console.log(Ee,Ee)),new Error(o)}}async exportKey(e,t){return crypto.subtle.exportKey(e,t).catch((()=>{b&&console.warn("... exportKey() protested, this just means we treat this as undefined")}))}async encrypt(e,t,n){if(null===e)throw new Error("no contents");if(!n.iv)throw new Error("no nonce");return n.name?_("AES-GCM"===n.name,"Must be AES-GCM (L1951)"):n.name="AES-GCM",crypto.subtle.encrypt(n,t,e)}async wrap(e,t,n,r,a,s){_(e&&t&&n&&a,"wrapMessage(): missing required parameter(2)");const o=ne(e);_(o,"wrapMessage(): failed to assemble payload"),_(o.byteLength<Re,`wrapMessage(): body must be smaller than ${Re/1024} KiB (we got ${o.byteLength/1024} KiB)})`),_(r,"wrapMessage(): missing salt"),S&&console.log("will wrap() body, payload:\n",Ee,"\n",e,"\n",Ee,o,"\n",Ee);const i=crypto.getRandomValues(new Uint8Array(12)),c=25*Math.round(Date.now()/25),l=new DataView(new ArrayBuffer(8));l.setFloat64(0,c);var h={f:t,c:await Ke.encrypt(o,n,{iv:i,additionalData:l}),iv:i,salt:r,s:await Ke.sign(a,o),ts:c};if(S&&console.log("wrap() message is\n",h),s&&(s.sendTo&&(h.t=s.sendTo),s.ttl&&(h.ttl=s.ttl),s.subChannel))throw new Error("wrapMessage(): subChannel not yet supported");try{h=w(h)}catch(e){const t=`wrapMessage(): failed to validate message: ${e}`;throw console.error(t),new Error(t)}return h}unwrap(e,t){return new Promise((async(n,r)=>{try{if(!t.ts)throw new Error("unwrap() - no timestamp in encrypted message");const{c:r,iv:a}=t;_(r,"[unwrap] No contents in encrypted message (probably an error)");const s=new DataView(new ArrayBuffer(8));s.setFloat64(0,t.ts),n(await crypto.subtle.decrypt({name:"AES-GCM",iv:a,additionalData:s},e,r))}catch(e){b&&console.error(`unwrap(): cannot unwrap/decrypt - rejecting: ${e}`),S&&console.log("message was \n",t),r(e)}}))}sign(e,t){return crypto.subtle.sign({name:"ECDSA",hash:{name:"SHA-384"}},e,t)}verify(e,t,n){return crypto.subtle.verify({name:"ECDSA",hash:{name:"SHA-384"}},e,t,n)}str2ab(e){return(new TextEncoder).encode(e)}ab2str(e){return new TextDecoder("utf-8").decode(e)}}function ue(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=`__${e.constructor.name}__${t}__`;if(this.hasOwnProperty(n))return this[n];{const e=r.call(this);return Object.defineProperty(this,n,{configurable:!1,enumerable:!1,writable:!1,value:e}),e}}}}function ge(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=e.constructor.name,a=e.constructor.ReadyFlag;_(a in this,"'readyFlagSymbol' missing yet getter accessed with @Ready pattern (fatal)"),_(this[a],`'${n}.${t}' getter accessed but object not 'ready' (fatal)`);const s=r.call(this);return _(null!=s,`'${n}.${t}' getter accessed but return value will be NULL (fatal)`),s}}}function fe(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=e.constructor.name;return"owner"in this&&_(!0===this.owner,`${t} getter or method accessed for object ${n} but callee is not channel owner`),r.call(this)}}}const pe=["SBMessage","SBObjectHandle","SBChannelHandle","ChannelApiBody"],we=Symbol("SB_CHANNEL_MESSAGE_SYMBOL"),ve=Symbol("SB_CHANNEL_API_BODY_SYMBOL"),be=Symbol("SBChannelHandle"),Se=Symbol.for("SBMessage"),me=Symbol.for("SBObjectHandle"),ke=Symbol.for("SBStorageToken");function Ce(e,t){switch(t){case"SBMessage":return Se in e;case"SBObjectHandle":case"SBChannelHandle":return me in e;default:return!1}}const Be="SBMessageCache";"indexedDB"in globalThis&&(globalThis.sbMessageCache=new class{dbName;readyPromise;db;constructor(e,t=1){this.dbName=e,this.readyPromise=new Promise(((n,r)=>{if(!("indexedDB"in globalThis))return console.warn("IndexedDB is not supported in this environment. SBMessageCache will not be functional."),void r("IndexedDB not supported");const a=indexedDB.open(e,t);a.onsuccess=()=>{this.db=a.result,n(this)},a.onerror=()=>{r(`Database error ('${e}): `+a.error)}}))}getObjStore(e,t="readonly"){e||(e=this.dbName),_(this.db,"Internal Error [L2009]");const n=this.db?.transaction(Be,t),r=n?.objectStore(Be);return _(r,"Internal Error [L2013]"),r}async add(e,t){return new Promise((async(n,r)=>{const a=this.getObjStore("readwrite").put({key:e,value:t});a.onsuccess=()=>{n()},a.onerror=()=>{r("[add] Received error accessing keys")}}))}async get(e){return new Promise((async(t,n)=>{await this.readyPromise;const r=this.getObjStore().get(e);r.onsuccess=()=>{t(r.result?.value)},r.onerror=()=>{n("[get] Received error accessing keys")}}))}getLowerUpper(e,t,n){const r=t.padEnd(26,"3");return[e+(n?`_${n}_`:"______")+t,r]}async getKnownMessageKeys(e,t,n){return new Promise((async(r,a)=>{await this.readyPromise;const s=this.getObjStore(),[o,i]=this.getLowerUpper(e,t,n),c=IDBKeyRange.bound(o,i,!1,!1),l=s?.getAllKeys(c);l||r(new Set),l.onsuccess=()=>{r(new Set(l.result))},l.onerror=()=>{a("[getKnownMessageKeys] Received error accessing keys")}}))}async getKnownMessages(e,t,n){return new Promise((async(r,a)=>{await this.readyPromise;const s=this.getObjStore(),[o,i]=this.getLowerUpper(e,t,n),c=IDBKeyRange.bound(o,i,!1,!1),l=s?.getAll(c);l||r(new Map),l.onsuccess=()=>{r(new Map(l.result))},l.onerror=()=>{a("[getKnownMessages] Received error accessing keys")}}))}}(Be,1));const Ke=new ye,Ee="============================================================\n";function Ae(e,t){const n=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff"),r=BigInt("0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef"),a=(n+1n)/4n,s=new Uint8Array(U(e)),o="0x"+Array.from(s,(e=>e.toString(16).padStart(2,"0"))).join("");var i=BigInt(o),c=function(e,t,n){if(1n===n)return 0n;let r=1n;for(e%=n;t>0n;)t%2n===1n&&(r=r*e%n),t>>=1n,e=e*e%n;return r}(i*i*i-3n*i+r,a,n);c%2n!==BigInt(t)&&(c=n-c);const l=c.toString(16).padStart(96,"0");return{x:e,y:F(new Uint8Array(l.match(/.{1,2}/g).map((e=>parseInt(e,16)))))}}class Pe{sb384Ready;static ReadyFlag=Symbol("SB384ReadyFlag");#t;#n;#r;#a;#s;#o;#i;#c;#l;constructor(e,t){this[Pe.ReadyFlag]=!1,this.sb384Ready=new Promise((async(n,r)=>{try{if(e)if(e instanceof CryptoKey){const n=await Ke.exportKey("jwk",e);_(n&&n.x&&n.y,"INTERNAL"),n.d?(this.#t=!0,this.#s=n.d):(this.#t=!1,_(!t,"ERROR creating SB384 object: key provided is not the requested private")),this.#n=n.x,this.#r=n.y}else if(e&&e instanceof Object&&"kty"in e){const n=e;_(n&&n.x&&n.y,"Cannot parse format of JWK key"),e.d?(this.#t=!0,this.#s=n.d):(this.#t=!1,_(!t,"ERROR creating SB384 object: key provided is not the requested private")),this.#n=n.x,this.#r=n.y}else{if("string"!=typeof e)throw new Error("ERROR creating SB384 object: invalid key (must be a JsonWebKey, SBUserId, or omitted)");{const n=le(e);if(!n)throw new Error("ERROR creating SB384 object: invalid key (must be a JsonWebKey | SBUserPublicKey | SBUserPrivateKey, or omitted)");const{x:r,y:a,d:s}=n;s?(this.#t=!0,this.#s=s):(this.#t=!1,_(!t,"ERROR creating SB384 object: key provided is not the requested private")),_(r&&a,"INTERNAL"),this.#n=r,this.#r=a}}else{S&&console.log("SB384() - generating new key pair");const e=await Ke.generateKeys(),t=await Ke.exportKey("jwk",e.privateKey);_(t&&t.x&&t.y&&t.d,"INTERNAL"),this.#t=!0,this.#n=t.x,this.#r=t.y,this.#s=t.d,S&&console.log("#### FROM SCRATCH",this.#t)}if(S&&console.log("SB384() constructor; x/y/d:\n",this.#n,"\n",this.#r,"\n",this.#s),this.#t&&(this.#o=await Ke.importKey("jwk",this.jwkPrivate,"ECDH",!0,["deriveKey"])),this.#i=await Ke.importKey("jwk",this.jwkPublic,"ECDH",!0,[]),this.#t){const e={...this.jwkPrivate,key_ops:["sign"]};S&&console.log("starting jwk (private):\n",e),this.#c=await crypto.subtle.importKey("jwk",e,{name:"ECDSA",namedCurve:"P-384"},!0,["sign"])}else{const e={...this.jwkPublic,key_ops:["verify"]};S&&console.log("starting jwk (public):\n",e),this.#c=await crypto.subtle.importKey("jwk",e,{name:"ECDSA",namedCurve:"P-384"},!0,["verify"])}const r=O(U(this.#n),U(this.#r));this.#l=Z(await crypto.subtle.digest("SHA-256",r)),S&&console.log("SB384() constructor; hash:\n",this.#l),this.#a=ce(this.#r),S&&console.log("SB384() - constructor wrapping up",this),this[Pe.ReadyFlag]=!0,n(this)}catch(e){r("ERROR creating SB384 object failed: "+T(e))}}))}get SB384ReadyFlag(){return this[Pe.ReadyFlag]}get ready(){return this.sb384Ready}get private(){return this.#t}get hash(){return this.#l}get userId(){return this.hash}get ownerChannelId(){return this.hash}get privateKey(){if(!this.private)throw new Error("this is a public key, there is no 'privateKey' value");return this.#o}get signKey(){return this.#c}get publicKey(){return this.#i}get jwkPrivate(){return _(this.#t,"jwkPrivate() - not a private key"),_(this.#n&&this.#r&&this.#s,"JWK key info is not available (fatal)"),{crv:"P-384",ext:!0,key_ops:["deriveKey"],kty:"EC",x:this.#n,y:this.#r,d:this.#s}}get jwkPublic(){return _(this.#n&&this.#r,"JWK key info is not available (fatal)"),{crv:"P-384",ext:!0,key_ops:[],kty:"EC",x:this.#n,y:this.#r}}get ySign(){return _(null!==this.#a,"ySign() - ySign is not available (fatal)"),this.#a}get userPublicKey(){return _(this.#n&&void 0!==this.#a,"userPublicKey() - sufficient key info is not available (fatal)"),oe.SBPublicKey+(0===this.#a?ie.CompressedEven:ie.CompressedOdd)+Q(this.#n)}get userPrivateKey(){_(this.#t,"userPrivateKey() - not a private key, there is no userPrivateKey");const e=he(this.#n,this.#s,this.#a);return _(void 0!==e,"userPrivateKey() - failed to construct key, probably missing info (fatal)"),e}get userPrivateKeyDehydrated(){return _(this.#t&&this.#s,"userPrivateKey() - not a private key, and/or 'd' is missing, there is no userPrivateKey"),oe.SBPrivateKey+ie.Dehydrated+Q(this.#s)}}a([ue,ge],Pe.prototype,"private",null),a([ue,ge],Pe.prototype,"hash",null),a([ue,ge],Pe.prototype,"userId",null),a([ue,ge],Pe.prototype,"ownerChannelId",null),a([ue,ge],Pe.prototype,"privateKey",null),a([ue,ge],Pe.prototype,"signKey",null),a([ue,ge],Pe.prototype,"publicKey",null),a([ue],Pe.prototype,"jwkPrivate",null),a([ue],Pe.prototype,"jwkPublic",null),a([ue],Pe.prototype,"ySign",null),a([ue],Pe.prototype,"userPublicKey",null),a([ue],Pe.prototype,"userPrivateKey",null),a([ue],Pe.prototype,"userPrivateKeyDehydrated",null);class Ie extends Pe{#h;sbChannelKeysReady;static ReadyFlag=Symbol("SBChannelKeysReadyFlag");#d;channelServer;constructor(e){if(null===e)throw new Error("SBChannelKeys constructor: you cannot pass 'null'");if(e)if("string"==typeof e)super(e,!0);else{if(!l(e))throw new Error("SBChannelKeys() constructor: invalid parameter (must be SBChannelHandle or SBUserPrivateKey)");{const t=h(e);super(t.userPrivateKey,!0),t.channelServer&&(this.channelServer=t.channelServer,"/"===this.channelServer[this.channelServer.length-1]&&(this.channelServer=this.channelServer.slice(0,-1))),this.#h=t.channelId,this.#d=t.channelData}}else super();this[Ie.ReadyFlag]=!1,this.sbChannelKeysReady=new Promise((async(e,t)=>{try{if(b&&console.log("SBChannelKeys() constructor."),await this.sb384Ready,_(this.private,"Internal Error (L2476)"),this.#h){if(!this.#d){if(!this.channelServer)throw new Error("SBChannelKeys() constructor: either key is owner key, or handle contains channelData, or channelServer is provided ...");b&&console.log("++++ SBChannelKeys being initialized from server");var n=await this.callApi("/getChannelKeys");_((n=y(n)).channelId===this.#h,"Internal Error (L2493)"),this.#d=n}}else this.#h=this.ownerChannelId,this.#d={channelId:this.#h,ownerPublicKey:this.userPublicKey};this[Ie.ReadyFlag]=!0,e(this)}catch(e){t("[SBChannelKeys] constructor failed. "+T(e))}}))}get ready(){return this.sbChannelKeysReady}get SBChannelKeysReadyFlag(){return this[Ie.ReadyFlag]}get channelData(){return this.#d}get owner(){return this.private&&this.ownerChannelId&&this.channelId&&this.ownerChannelId===this.channelId}get channelId(){return this.#h}get handle(){return{[be]:!0,channelId:this.channelId,userPrivateKey:this.userPrivateKey,channelServer:this.channelServer,channelData:this.channelData}}async buildApiBody(e,t){await this.sb384Ready;const n=25*Math.round(Date.now()/25),r=new ArrayBuffer(8);new DataView(r).setFloat64(0,n);const a=O(r,(new TextEncoder).encode(e).buffer),s=t?ne(t):void 0,o=await Ke.sign(this.signKey,s?O(a,s):a),i={channelId:this.#h,path:e,userId:this.userId,userPublicKey:this.userPublicKey,timestamp:n,sign:o};return s&&(i.apiPayloadBuf=s),p(i)}callApi(e,t){return _(this.channelServer,"[ChannelApi.callApi] channelServer is unknown"),b&&console.log("ChannelApi.callApi: calling fetch with path:",e),S&&console.log("... and body:",t),_(this.#h&&e,"Internal Error (L2528)"),new Promise((async(n,r)=>{const a={method:"POST",headers:{"Content-Type":'application/octet-stream"'},body:ne(await this.buildApiBody(e,t))};S&&console.log("==== ChannelApi.callApi: calling fetch with init:\n",a),M(this.channelServer+"/api/v2/channel/"+this.#h+e,a).then((e=>{n(e)})).catch((e=>{r("[Channel.callApi] Error: "+T(e))}))}))}}a([ue,ge],Ie.prototype,"channelData",null),a([ue,ge],Ie.prototype,"owner",null),a([ue,ge],Ie.prototype,"channelId",null),a([ue,ge],Ie.prototype,"handle",null);const Re=65536;class De{channel;contents;options;[Se]=!0;sbMessageReady;static ReadyFlag=Symbol("SBMessageReadyFlag");#y;salt;constructor(e,t,n={}){this.channel=e,this.contents=t,this.options=n,this.salt=crypto.getRandomValues(new Uint8Array(16)).buffer,this.sbMessageReady=new Promise((async t=>{if(await e.channelReady,this.options.protocol||(this.options.protocol=e.protocol),!this.options.protocol)throw new Error("SBMessage() - no protocol provided");this.#y=await Ke.wrap(this.contents,this.channel.userId,await this.options.protocol.encryptionKey(this),this.salt,this.channel.signKey,n),this[De.ReadyFlag]=!0,t(this)}))}get ready(){return this.sbMessageReady}get SBMessageReadyFlag(){return this[De.ReadyFlag]}get message(){return this.#y}async send(){return S&&console.log("SBMessage.send() - sending message:",this.message),this.channel.send(this)}}a([ge],De.prototype,"message",null);class Me{#u;#g;constructor(e,t){this.#g=t,this.#u=this.initializeMasterKey(e)}async initializeMasterKey(e){const t=this.#g.salt1,n=this.#g.iterations1,r=this.#g.hash1;_(t&&n&&r,"Protocol_AES_GCM_256.initializeMasterKey() - insufficient key info (fatal)");const a=await crypto.subtle.importKey("raw",(new TextEncoder).encode(e),{name:"PBKDF2"},!1,["deriveBits","deriveKey"]),s=await crypto.subtle.deriveBits({name:"PBKDF2",salt:t,iterations:n,hash:r},a,256);return crypto.subtle.importKey("raw",s,{name:"PBKDF2"},!1,["deriveBits","deriveKey"])}static async genKey(){return{salt1:crypto.getRandomValues(new Uint8Array(16)).buffer,iterations1:1e5,iterations2:1e4,hash1:"SHA-256",summary:"PBKDF2 - SHA-256 - AES-GCM"}}async#f(e){return await crypto.subtle.deriveKey({name:"PBKDF2",salt:e,iterations:this.#g.iterations2,hash:this.#g.hash1},await this.#u,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"])}async encryptionKey(e){return b&&console.log("CALLING Protocol_AES_GCM_384.encryptionKey(), salt:",e.salt),this.#f(e.salt)}async decryptionKey(e,t){if(t.salt)return b&&console.log("CALLING Protocol_AES_GCM_384.decryptionKey(), salt:",t.salt),this.#f(t.salt);console.warn("Salt should always be present in ChannelMessage")}}class Te{#p=new Map;constructor(){}async encryptionKey(e){await e.channel.ready;const t=e.channel.channelId;_(t,"Internal Error (L2565)");const n=e.options.sendTo?e.options.sendTo:e.channel.channelData.ownerPublicKey;return this.#w(t,n,e.channel.privateKey)}async decryptionKey(e,t){await e.ready;const n=e.channelId;_(n,"Internal Error (L2594)");const r=e.visitors.get(t.f);if(r)return this.#w(n,r,e.privateKey);b&&console.log("Protocol_ECDH.key() - sentFrom is unknown")}async#w(e,t,n){const r=e+"_"+t;if(!this.#p.has(r)){const e=await crypto.subtle.deriveKey({name:"ECDH",public:(await new Pe(t).ready).publicKey},n,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]);this.#p.set(r,e),S&&console.log("++++ Protocol_ECDH.key() - newKey:",e)}const a=this.#p.get(r);return _(a,"Internal Error (L2584/2611)"),S&&console.log("++++ Protocol_ECDH.key() - res:",a),a}}class xe extends Ie{protocol;channelReady;static ReadyFlag=Symbol("ChannelReadyFlag");locked=!1;#v="";visitors=new Map;constructor(e,t){if(null===e)throw new Error("Channel() constructor: you cannot pass 'null'");S&&console.log("Channel() constructor called with handleOrKey:",e),super(e),this.protocol=t,this.channelReady=this.sbChannelKeysReady.then((()=>(this[xe.ReadyFlag]=!0,this))).catch((e=>{throw e}))}get ready(){return this.channelReady}get ChannelReadyFlag(){return this[xe.ReadyFlag]}get api(){return this}async deCryptChannelMessage(e,t){try{const n=t.f;if(!n)return;if(!this.visitors.has(n)){S&&console.log("++++ deCryptChannelMessage: need to update visitor table ...");const e=await this.callApi("/getPubKeys");if(!(e&&e instanceof Map))return;S&&console.log(Ee,"visitorMap:\n",e,"\n",Ee);for(const[t,n]of e)S&&console.log("++++ deCryptChannelMessage: adding visitor:",t,n),this.visitors.set(t,n)}_(this.visitors.has(n),`Cannot find sender userId hash ${n} in public key map`);const r=await(e.protocol?.decryptionKey(this,t));if(!r)return;try{const e=se(await Ke.unwrap(r,t)).payload;return S&&console.log("++++ deCryptChannelMessage: decrypted message:\n",e),e}catch(e){return void(b&&console.error("Message was not a payload of a ChannelMessage:\n"))}}catch(e){return void(b&&console.error("Message was not a payload of a ChannelMessage:\n",e))}}create(e,t=this.channelServer){return b&&console.log("==== Channel.create() called with storageToken:",e,"and channelServer:",t),_(null!==e,"[Channel.create] Missing storage token"),_(t,"[Channel.create] Missing channel server"),new Promise((async(n,r)=>{await this.channelReady,this.channelData.storageToken=c(e),b&&console.log("Will try to create channel with channelData:",this.channelData),this.callApi("/budd",this.channelData).then((()=>{this.channelServer=t,_(this.channelData&&this.channelData.channelId&&this.userPrivateKey,"Internal Error [L2546]"),n({[be]:!0,channelId:this.channelData.channelId,userPrivateKey:this.userPrivateKey,channelServer:this.channelServer,channelData:this.channelData})})).catch((e=>{r("Channel.create() failed: "+T(e))}))}))}getLastMessageTimes(){throw new Error("Channel.getLastMessageTimes(): not supported in 2.0 yet")}getMessageKeys(e=100,t=!1){return new Promise((async(n,r)=>{_(this.channelId,"Channel.getMessageKeys: no channel ID (?)");const a=await this.callApi("/getMessageKeys",{currentMessagesLength:e,cursor:t?this.#v:void 0});_(a,"Channel.getMessageKeys: no messages (empty/null response)"),S&&console.log("getMessageKeys\n",a),n(a)}))}getMessages(e){return new Promise((async(t,n)=>{_(this.channelId,"Channel.getMessages: no channel ID (?)");const r=await this.callApi("/getMessages",e);_(r,"Channel.getMessages: no messages (empty/null response)"),S&&console.log(Ee,Ee,"getMessages - here are the raw ones\n",r,Ee,Ee);const a=new Map;for(const[e,t]of r.entries()){if(!this.protocol)throw new Error("Channel.getMessages(): need protocol to decrypt messages");const n=se(t).payload;S&&console.log("++++ deCryptChannelMessage: msgBuf:\n",n);const r=w(n);S&&console.log("++++ deCryptChannelMessage: validated");const s=await this.deCryptChannelMessage(this,r);s&&a.set(e,s)}S&&console.log(Ee,"and here are decrypted ones, hopefully\n",Ee,a,"\n",Ee),t(a)}))}async send(e){const t=e instanceof De?e:new De(this,e);return await t.ready,this.callApi("/send",t.message)}acceptVisitor(e){return this.callApi("/acceptVisitor",{userId:e})}getCapacity(){return this.callApi("/getCapacity")}getAdminData(){return this.callApi("/getAdminData")}getMother(){return this.getAdminData().then((e=>e.motherChannel))}isLocked(){return this.getAdminData().then((e=>e.locked))}lock(){return this.callApi("/lockChannel")}updateCapacity(e){return this.callApi("/setCapacity",{capacity:e})}getChannelKeys(){return this.callApi("/getChannelKeys")}getPubKeys(){return this.callApi("/getPubKeys")}getStorageLimit(){return this.callApi("/getStorageLimit")}async getStorageToken(e){return c(await this.callApi("/getStorageToken",{size:e}))}budd(e){return new Promise((async(t,n)=>{var{targetChannel:r,size:a}=e||{};if(r){if(this.channelId===r.channelId)return void n(new Error("[budd()]: source and target channels are the same, probably an error"))}else r=(await(new xe).ready).handle,b&&console.log("\n",Ee,"[budd()]: no target channel provided, using new channel:\n",Ee,r,"\n",Ee);if(a||(a=o),a!==1/0&&Math.abs(a)>await this.getStorageLimit())return void n(new Error(`[budd()]: storage amount (${a}) is more than current storage limit`));const s=r.channelData;if(s)try{s.storageToken=await this.getStorageToken(a),b&&console.log(`[budd()]: requested ${a}, got storage token:`,s.storageToken);const e=await new xe(r).ready;e.channelServer||(e.channelServer=this.channelServer);const o=y(await e.callApi("/budd",s));if(r.channelId!==o.channelId)return console.warn("[budd()]: target channel ID changed, should not happen, error somewhere\n",Ee),console.warn("targetChannel:",r,"\n",Ee),console.warn("newChannelData:",o,"\n",Ee),void n(new Error("[budd()]: target channel ID changed, should not happen, error somewhere"));o.storageToken||console.warn("[budd()]: target channel has no storage token, possibly an error, should be returned from server");const i={[be]:!0,channelId:o.channelId,userPrivateKey:r.userPrivateKey,channelServer:this.channelServer,channelData:o};b&&console.log("[budd()]: success, newHandle:",i),t(h(i))}catch(e){return void n("[budd] Could not get storage token from server, are you sure about the size?")}else n(new Error("[budd()]: target channel has no channel data, probably an error"))}))}downloadChannel(){}}a([ue,ge],xe.prototype,"api",null),a([ge],xe.prototype,"send",null),a([ge,fe],xe.prototype,"acceptVisitor",null),a([ge,fe],xe.prototype,"getCapacity",null),a([ge,fe],xe.prototype,"getAdminData",null),a([ge,fe],xe.prototype,"getMother",null),a([ge,fe],xe.prototype,"isLocked",null),a([ge,fe],xe.prototype,"lock",null),a([ge,fe],xe.prototype,"updateCapacity",null),a([ge,ue],xe.prototype,"getChannelKeys",null),a([ge],xe.prototype,"getPubKeys",null),a([ge],xe.prototype,"getStorageLimit",null),a([ge],xe.prototype,"getStorageToken",null),a([ge,fe],xe.prototype,"budd",null),a([ge],xe.prototype,"downloadChannel",null);class _e extends xe{channelSocketReady;static ReadyFlag=Symbol("ChannelSocketReadyFlag");#b;#S;onMessage=e=>{_(!1,"[ChannelSocket] NO MESSAGE HANDLER")};#m=new Map;#k=!1;constructor(e,t){if(_(t,"ChannelSocket(): no onMessage handler provided"),!e.hasOwnProperty("channelId")||!e.hasOwnProperty("userPrivateKey"))throw new Error("ChannelSocket(): first argument must be valid SBChannelHandle");if(!e.channelServer)throw new Error("ChannelSocket(): no channel server provided (required)");super(e),this[n.ReadyFlag]=!1,this.#S=e.channelServer.replace(/^http/,"ws"),this.onMessage=t;const r=this.#S+"/api/v2/channel/"+e.channelId+"/websocket";this.#b={url:r,ready:!1,closed:!1,timeout:2e3},this.channelSocketReady=this.#C()}#B=async e=>{b&&console.log("Received socket message:",e);const t=e.data;var n=null;_(t,"[ChannelSocket] received empty message"),"string"==typeof t?(console.error("ChannelSocket receiving string (json?) message, this is getting deprecated"),n=A(t,"L3589")):t instanceof ArrayBuffer?n=se(t).payload:t instanceof Blob?n=se(await t.arrayBuffer()).payload:x("L3594","[ChannelSocket] received unknown message type"),_(n,"[ChannelSocket] cannot parse message"),n=w(n),console.log(Ee,"Received socket message:\n",n,"\n",Ee),n.channelId||(n.channelId=this.channelId),_(n.channelId===this.channelId,"[ChannelSocket] received message for wrong channel?"),this.#k&&console.log("Received socket message:",n),n._id||(n._id=u(n.channelId,n.sts,n.i2));const r=F(await crypto.subtle.digest("SHA-256",n.c));b&&console.log("Received message with hash:",r);const a=this.#m.get(r);a&&((b||this.#k)&&console.log(`++++++++ #processMessage: found matching ack for id ${r}`),this.#m.delete(r),a("success"));const s={body:await this.deCryptChannelMessage(this,n),channelId:n.channelId,sender:n.f,senderPublicKey:this.visitors.get(n.f),senderTimestamp:n.ts,serverTimestamp:n.sts,_id:n._id};b&&console.log("Repackaged and will deliver 'Message':",s),this.onMessage(s)};#C(){return new Promise((async(e,t)=>{b&&console.log("++++ STARTED ChannelSocket.readyPromise()");const r=this.#b.url;if(!this.#b.websocket||3===this.#b.websocket.readyState||2===this.#b.websocket.readyState){const e=ne(await this.buildApiBody(r));_(e,"Internal Error [L3598]"),this.#b.websocket=new WebSocket(r+"?apiBody="+Z(e))}this.#b.websocket.addEventListener("message",(r=>{r.data&&"string"==typeof r.data&&A(r.data,"L3618")?.hasOwnProperty("ready")?(this.#b.websocket.addEventListener("message",this.#B),this[n.ReadyFlag]=!0,e(this)):(b&&console.log(Ee,"Received non-ready:\n",r.data,"\n",Ee),t("[ChannelSocket] received something other than 'ready' as first message"))})),this.#b.websocket.addEventListener("open",(async()=>{this.#b.closed=!1,await this.ready,b&&console.log("++++++++ readyPromise() sending init"),this.#b.websocket.send(ne({ready:!0}))})),this.#b.websocket.addEventListener("close",(e=>{this.#b.closed=!0,e.wasClean?e.reason.includes("does not have an owner")?t(`No such channel on this server (${this.channelServer})`):console.log("ChannelSocket() was closed (cleanly): ",e.reason):console.log(`ChannelSocket() was closed (and NOT cleanly: ${e.reason} from ${this.channelServer}`),t("wbSocket() closed before it was opened (?)")})),this.#b.websocket.addEventListener("error",(e=>{this.#b.closed=!0,console.log("ChannelSocket() error: ",e),t("ChannelSocket creation error (see log)")})),setTimeout((()=>{if(this[n.ReadyFlag])b&&console.log("ChannelSocket() - this socket resolved",this);else{const e="[ChannelSocket] - this socket is not resolving (waited 10s) ...";console.warn(e),t(e)}}),1e4)}))}get ready(){return this.channelSocketReady}get ChannelSocketReadyFlag(){return this[n.ReadyFlag]}get status(){if(!this.#b.websocket)return"CLOSED";switch(this.#b.websocket.readyState){case 0:return"CONNECTING";case 1:return"OPEN";case 2:return"CLOSING";default:return"CLOSED"}}set enableTrace(e){this.#k=e,e&&console.log("==== jslib ChannelSocket: Tracing enabled ====")}async send(e){await this.ready;const t=e instanceof De?e:new De(this,e);return _(this.#b.websocket,"ChannelSocket.send() called before ready"),this.#b.closed&&(this.#k&&console.info("send() triggered reset of #readyPromise() (normal)"),this.channelSocketReady=this.#C(),this[n.ReadyFlag]=!1),new Promise((async(e,n)=>{await t.ready,await this.ready,this.ChannelSocketReadyFlag||n("ChannelSocket.send() is confused - ready or not?");const r=this.#b.websocket.readyState;switch(r){case 1:this.#k&&console.log("++++++++ ChannelSocket.send() will send message:",Object.assign({},t.message));const a=ne(t.message);_(a,"ChannelSocket.send(): failed to assemble message");const s=F(await crypto.subtle.digest("SHA-256",t.message.c));(b||this.#k)&&console.log("++++++++ ChannelSocket.send(): Which has hash:",s),this.#m.set(s,e),this.#b.websocket.send(a),setTimeout((()=>{if(this.#m.has(s)){this.#m.delete(s);const e=`Websocket request timed out (no ack) after ${this.#b.timeout}ms (${s})`;console.error(e),n(e)}else this.#k&&console.log("++++++++ ChannelSocket.send() completed sending"),e("success")}),this.#b.timeout);break;case 0:case 2:case 3:n("socket not OPEN - it is "+(0===r?"CONNECTING":2===r?"CLOSING":"CLOSED"));break;default:x("ChannelSocket",`socket in unknown state (${r})`)}}))}}n=_e,a([function(e,t,n){if(n&&n.value){const e=n.value;n.value=function(...t){for(let e of t){const t=e.constructor.name;"string"==typeof(n=t)&&pe.includes(n)&&_(Ce(e,t),`invalid parameter: ${e} (expecting ${t})`)}var n;return e.call(this,...t)}}}],_e.prototype,"send",null);class Oe{#K;constructor(e){this.#K=Promise.resolve(e).then((e=>{const t=e;return _("string"==typeof t,"StorageApi() constructor requires a string (for storageServer)"),t}))}async getStorageServer(){return this.#K}static padBuf(e){const t=e.byteLength;let n;n=t+4<4096?4096:t+4<1048576?2**Math.ceil(Math.log2(t+4)):1048576*Math.ceil((t+4)/1048576);let r=O(e,new Uint8Array(n-t).buffer);return new DataView(r).setUint32(n-4,t),S&&console.log("padBuf bytes:",r.slice(-4)),r}#E(e){const t=e.slice(-4);var n=new DataView(t).getUint32(0);const r=new DataView(t).getUint32(0,!0);return r<n&&(S&&console.warn("#unpadData - size of shard encoded as little endian (fixed upon read)"),n=r),S&&console.log(`#unpadData - size of object is ${n}`),e.slice(0,n)}static getObjectKey(e,t){return new Promise(((n,r)=>{try{Ke.importKey("raw",e,"PBKDF2",!1,["deriveBits","deriveKey"]).then((e=>{crypto.subtle.deriveKey({name:"PBKDF2",salt:t,iterations:1e5,hash:"SHA-256"},e,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]).then((e=>{n(e)}))}))}catch(e){r(e)}}))}static storeObject(e,t,n,r,a,s){return new Promise((async(o,i)=>{const c=e+"/api/v2/storeData?id="+t,l=ne({id:t,iv:n,salt:r,storageToken:a,image:s}),h=await M(c,{method:"POST",body:l});h.error&&i(`storeObject() failed: ${h.error}`),h.image_id!=t&&i(`received imageId ${h.image_id} but expected ${t}`),o(h)}))}storeData(e,t,n){return new Promise((async(a,s)=>{const o=(e=e instanceof Uint8Array?e.buffer:e).byteLength,i=n instanceof xe?n:new xe(n),c=r.padBuf(e),l=await Ke.generateIdKey(c),h=await this.getStorageServer()+"/api/v2/storeRequest?id="+Z(l.id_binary),d=await M(h);if(!d.salt||!d.iv)throw new Error("Failed to get key info (salt, nonce) from storage server");const y=Z(l.id_binary),u=await r.getObjectKey(l.key_material,d.salt),g=await Ke.encrypt(c,u,{iv:d.iv}),f=await i.getStorageToken(g.byteLength),p=await r.storeObject(t,y,d.iv,d.salt,f,g);p.error&&s(`storeObject() failed: ${p.error}`),p.image_id!=y&&s(`received imageId ${p.image_id} but expected ${y}`),a({[me]:!0,version:"3",type:t,id:y,key:Z(l.key_material),iv:d.iv,salt:d.salt,actualSize:o,verification:p.verification})}))}#A(e,t){return new Promise((async(n,a)=>{const s=function(e){if(e){if("3"===e.version&&"string"==typeof e.id&&43===e.id.length&&H.test(e.id)&&e.iv instanceof Uint8Array&&12===e.iv.byteLength&&e.salt instanceof ArrayBuffer&&16===e.salt.byteLength&&"string"==typeof e.type&&1===e.type.length&&e.data instanceof ArrayBuffer&&e.actualSize===e.data.byteLength)return e;throw new Error("invalid Shard")}throw new Error("invalid SBObjectHandle (null or undefined)")}(se(e).payload);_(t.key,"object handle 'key' is missing, cannot decrypt");const o=Y(t.key),i=await r.getObjectKey(o,s.salt),c=s.data;b&&console.log("shard.data (encrypted):",s.data);const l=await Ke.unwrap(i,{c,iv:s.iv}),h=this.#E(l);b&&console.log("#processData(), final decrypted and unwrapped data:",h),n(h)}))}async#P(e,t,n){return M(e+t,{method:"GET"}).then((async e=>{if(!e.ok)return null;const t=await e.arrayBuffer();return t?this.#A(t,n):null})).catch((t=>(b&&console.log(`fetchData(): trying to get object on '${e}' failed: '${t}'`),null)))}fetchData(e){return new Promise((async(t,n)=>{const r=B(e);if(r.data&&r.data instanceof WeakRef&&r.data.deref())return void t(r);const a=await r.verification,s=r.storageServer?r.storageServer:null,o=await this.getStorageServer(),i=await this.getStorageServer()+"/api/v2";for(const e in[s,"http://localhost:3841",o]){b&&console.log("fetchData(), trying server: "+e);const n="/api/v2/fetchData?id="+r.id+"&verification="+a,s=await this.#P(i,n,r);if(null!==s)return b&&console.log(`[fetchData] success: fetched from '${i}'`,s),r.data=new WeakRef(s),void t(r)}n("[fetchData] failed to fetch from any server")}))}static getData(e){const t=B(e);if(t.data){if(t.data instanceof WeakRef){const e=t.data?.deref();return e||void 0}if(t.data instanceof ArrayBuffer)return t.data;throw new Error("Invalid data type in handle")}}}r=Oe,a([ue],Oe.prototype,"getStorageServer",null);class je{#I;#R;#D=s;#M;sbFetch=D;constructor(e,t,n){console.warn(`==== CREATING Snackabra object generation: ${this.#D} ====`),_("string"==typeof e,"[Snackabra] Invalid parameter type for constructor"),t&&!0===t&&(b=!0),b&&n&&!0===n&&(S=!0),b&&console.warn("++++ Snackabra constructor: setting DBG to TRUE ++++"),S&&console.warn("++++ Snackabra constructor: ALSO setting DBG2 to TRUE (verbose) ++++"),this.#I=e,this.#R=new Oe(new Promise(((e,t)=>{D(this.#I+"/api/v2/info").then((e=>(e.ok||t("response from channel server was not OK"),e.json()))).then((n=>{n.error?t(`fetching storage server name failed: ${n.error}`):(this.#M=n,b&&console.log("Channel server info:",this.#M)),_(n.storageServer,"Channel server did not provide storage server name, cannot initialize"),e(n.storageServer)})).catch((e=>{t(e)}))})))}attach(e){return new Promise(((t,n)=>{e.channelId?(e.channelServer?e.channelServer!==this.#I&&n("SBChannelHandle channelId does not match channelServer"):e.channelServer=this.#I,t(new xe(e))):n("SBChannelHandle missing channelId")}))}create(e){return _(null!==e,"[create channel] Invalid parameter (null)"),new Promise((async(t,n)=>{try{var r;if(e instanceof xe){const t=e;await t.ready,t.channelServer||(t.channelServer=this.#I),r=await t.getStorageToken(o)}else try{r=c(e)}catch(e){return void n("Invalid parameter to create() - need a token or a budget channel")}_(r,"[create channel] Failed to get storage token for the provided channel");const a=await(new xe).ready;a.channelServer=this.#I,a.create(r).then((e=>{t(e)})).catch((e=>{n(e)}))}catch(e){const t=`Creating channel did not succeed: ${e}`;console.error(t),n(t)}}))}connect(e,t){if(_(e&&e.channelId&&e.userPrivateKey,"[connect] Invalid parameter (missing info)"),e.channelServer&&e.channelServer!==this.#I)throw new Error("SBChannelHandle channelId does not match channelServer (use a different Snackabra object)");const n={...e,[be]:!0,channelServer:this.#I};return b&&console.log("++++ Snackabra.connect() ++++",n),t?new _e(n,t):new xe(n)}get storage(){return this.#R}async getStorageServer(){return this.#R.getStorageServer()}get crypto(){return Ke}get version(){return this.#D}}a([ue],je.prototype,"storage",null),a([ue],je.prototype,"getStorageServer",null);var Le={Snackabra:je,SBMessage:De,Channel:xe,SBCrypto:ye,SB384:Pe,arrayBufferToBase64url:F,base64ToArrayBuffer:U,arrayBufferToBase62:Z,base62ToArrayBuffer:Y,sbCrypto:Ke,version:s,setDebugLevel:m};return globalThis.SB||(globalThis.SB=Le),console.warn(`==== SNACKABRA jslib (re)loaded, version '${globalThis.SB.version}' ====`),t})()));