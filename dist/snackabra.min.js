!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.SB=t():e.SB=t()}(self,(()=>(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{Channel:()=>Le,ChannelSocket:()=>je,KeyPrefix:()=>fe,Memoize:()=>Se,MessageBus:()=>K,MessageQueue:()=>B,NEW_CHANNEL_MINIMUM_BUDGET:()=>o,Protocol_AES_GCM_256:()=>Re,Protocol_ECDH:()=>De,Ready:()=>ke,SB:()=>Ne,SB384:()=>Ee,SBApiFetch:()=>O,SBChannelKeys:()=>Oe,SBCrypto:()=>be,SBError:()=>A,SBStorageTokenPrefix:()=>i,Snackabra:()=>$e,StorageApi:()=>_e,_check_SBChannelData:()=>u,_check_SBChannelHandle:()=>h,_check_SBObjectHandle:()=>k,_check_SBStorageToken:()=>c,arrayBufferToBase62:()=>X,arrayBufferToBase64url:()=>U,assemblePayload:()=>he,b32decode:()=>ie,b32encode:()=>se,b32process:()=>oe,b62regex:()=>q,base62:()=>z,base62ToArrayBuffer:()=>ee,base62ToBase64:()=>te,base62regex:()=>G,base64ToArrayBuffer:()=>H,base64ToBase62:()=>ne,base64url:()=>$,compareBuffers:()=>E,extractPayload:()=>ye,getRandomValues:()=>R,hydrateKey:()=>me,isBase62Encoded:()=>W,jsonOrString:()=>x,jsonParseWrapper:()=>I,msgTtlToSeconds:()=>m,msgTtlToString:()=>b,sbCrypto:()=>Me,setDebugLevel:()=>v,stringify_SBObjectHandle:()=>P,stripChannelMessage:()=>w,validate_ChannelApiBody:()=>g,validate_ChannelMessage:()=>p,validate_Message:()=>f,validate_SBChannelData:()=>y,validate_SBChannelHandle:()=>d,validate_SBObjectHandle:()=>C,validate_SBStorageToken:()=>l,version:()=>s});var n,r,a=function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o};const s="2.0.0-alpha.5 (build 118)",o=8388608,i="LM2r";function c(e){return Object.getPrototypeOf(e)===Object.prototype&&e.hash&&"string"==typeof e.hash&&e.hash.length>0&&(!e.size||Number.isInteger(e.size)&&e.size>0)&&(!e.motherChannel||"string"==typeof e.motherChannel)&&(!e.created||Number.isInteger(e.created))&&(!e.used||"boolean"==typeof e.used)}function l(e){if(e){if(e[Ie])return e;if("string"==typeof e&&e.slice(0,4)===i)return{[Ie]:!0,hash:e};if(c(e))return{...e,[Ie]:!0};throw new A("invalid SBStorageToken")}throw new A("invalid SBStorageToken (null or undefined)")}function h(e){return!!e&&Object.getPrototypeOf(e)===Object.prototype&&e.userPrivateKey&&"string"==typeof e.userPrivateKey&&e.userPrivateKey.length>0&&(!e.channelId||"string"==typeof e.channelId&&43===e.channelId.length)&&(!e.channelServer||"string"==typeof e.channelServer)&&(!e.channelData||u(e.channelData))}function d(e){if(e){if(e[Be])return e;if(h(e))return{...e,[Be]:!0};throw new A("invalid SBChannelHandle")}throw new A("invalid SBChannelHandle (null or undefined)")}function u(e){return Object.getPrototypeOf(e)===Object.prototype&&e.channelId&&43===e.channelId.length&&e.ownerPublicKey&&"string"==typeof e.ownerPublicKey&&e.ownerPublicKey.length>0&&(!e.storageToken||l(e.storageToken))}function y(e){if(e){if(u(e))return e;throw new A("invalid SBChannelData")}throw new A("invalid SBChannelData (null or undefined)")}function f(e){if(e){if(void 0!==e.body&&null!==e.body&&e.channelId&&"string"==typeof e.channelId&&43===e.channelId.length&&e.sender&&"string"==typeof e.sender&&43===e.sender.length&&e.senderPublicKey&&"string"==typeof e.senderPublicKey&&e.senderPublicKey.length>0&&e.senderTimestamp&&Number.isInteger(e.senderTimestamp)&&e.serverTimestamp&&Number.isInteger(e.serverTimestamp)&&e._id&&"string"==typeof e._id&&75===e._id.length)return e;throw new A("invalid Message")}throw new A("invalid Message (null or undefined)")}function g(e){if(e){if(e[Ke])return e;if(e.channelId&&43===e.channelId.length&&e.path&&"string"==typeof e.path&&e.path.length>0&&e.userId&&"string"==typeof e.userId&&43===e.userId.length&&e.userPublicKey&&e.userPublicKey.length>0&&(!e.isOwner||"boolean"==typeof e.isOwner)&&(!e.apiPayloadBuf||e.apiPayloadBuf instanceof ArrayBuffer)&&e.timestamp&&Number.isInteger(e.timestamp)&&e.sign&&e.sign instanceof ArrayBuffer)return{...e,[Ke]:!0};throw new A("invalid ChannelApiBody")}throw new A("invalid ChannelApiBody (null or undefined)")}function p(e){if(e){if(e[Pe])return e;if(!(e.f&&"string"==typeof e.f&&43===e.f.length&&e.c&&e.c instanceof ArrayBuffer&&e.ts&&Number.isInteger(e.ts)&&e.iv&&e.iv instanceof Uint8Array&&12===e.iv.length&&e.s&&e.s instanceof ArrayBuffer)||e.sts&&!Number.isInteger(e.sts)||e.salt&&!(e.salt instanceof ArrayBuffer&&16===e.salt.byteLength)||e._id&&("string"!=typeof e._id||86!==e._id.length)||e.ready&&"boolean"!=typeof e.ready||e.timestampPrefix&&("string"!=typeof e.timestampPrefix||26!==e.timestampPrefix.length)||e.channelId&&("string"!=typeof e.channelId||43!==e.channelId.length)||e.i2&&("string"!=typeof e.i2||!/^[a-zA-Z0-9_]{4}$/.test(e.i2))||!(void 0===e.ttl||Number.isInteger(e.ttl)&&e.ttl>=0&&e.ttl<=15))throw new A("invalid ChannelMessage");return{...e,[Pe]:!0}}throw new A("invalid ChannelMessage (null or undefined)")}function w(e,t=!1){const n={};if(void 0===e.f)throw new A("ERROR: missing 'f' ('from') in message");if(n.f=e.f,void 0===e.c)throw new A("ERROR: missing 'ec' ('encrypted contents') in message");if(n.c=e.c,void 0!==e.iv)n.iv=e.iv;else if(1==!e.stringMessage)throw new A("ERROR: missing 'iv' ('nonce') in message");if(void 0===e.salt)throw new A("ERROR: missing 'salt' in message");if(n.salt=e.salt,void 0!==e.s)n.s=e.s;else if(1==!e.stringMessage)throw new A("ERROR: missing 's' ('signature') in message");if(void 0===e.ts)throw new A("ERROR: missing 'ts' ('timestamp') in message");if(n.ts=e.ts,void 0!==e.sts)n.sts=e.sts;else if(t)throw new A("ERROR: missing 'sts' ('servertimestamp') in message");return void 0!==e.ttl&&15!==e.ttl&&(n.ttl=e.ttl),void 0!==e.t&&(n.t=e.t),void 0!==e.i2&&"____"!==e.i2&&(n.i2=e.i2),n}function v(e,t){}console.log("++++ Setting DBG0 to TRUE ++++");const m=[0,-1,-1,60,300,1800,14400,129600,864e3,-1,-1,-1,-1,-1,1/0],b=["Ephemeral","<reserved>","<reserved>","One minute","Five minutes","Thirty minutes","Four hours","36 hours","10 days","<reserved>","<reserved>","<reserved>","<reserved>","<reserved>","Permastore (no TTL)"],S="3";if("undefined"==typeof WeakRef){class e{_target;constructor(e){this._target=e}deref(){return this._target}}Object.defineProperty(e.prototype,Symbol.toStringTag,{value:"WeakRef",configurable:!0}),globalThis.WeakRef=e}function k(e){return Object.getPrototypeOf(e)===Object.prototype&&(!e.version||e.version===S)&&e.id&&"string"==typeof e.id&&43===e.id.length&&(!e.key||"string"==typeof e.key&&43===e.key.length)&&(!e.verification||"string"==typeof e.verification||"object"==typeof e.verification)&&(!e.iv||"string"==typeof e.iv||e.iv instanceof Uint8Array)&&(!e.salt||"string"==typeof e.salt||e.salt instanceof ArrayBuffer)}function C(e){if(e){if(e[Ae])return e;if(k(e))return{...e,[Ae]:!0};throw new A("invalid SBObjectHandle")}throw new A("invalid SBObjectHandle (null or undefined)")}async function P(e){return e.iv&&(e.iv="string"==typeof e.iv?e.iv:X(e.iv)),e.salt&&(e.salt="string"==typeof e.salt?e.salt:X(e.salt)),e.verification=await e.verification,C(e)}class K{bus={};#e(e){return this.bus[e]||(this.bus[e]=[])}subscribe(e,t){this.#e(e).push(t)}unsubscribe(e,t){let n=-1;this.bus[e]?-1!=(n=this.bus[e].findLastIndex((e=>e==t)))?this.bus[e].splice(n,1):console.info("fyi: asked to remove a handler but it's not there"):console.info("fyi: asked to remove a handler but the event is not there")}publish(e,...t){for(const n of this.#e("*"))n(e,...t);for(const n of this.#e(e))n(...t)}}class B{queue=[];resolve=null;reject=null;closed=!1;error=null;enqueue(e){if(this.closed)throw new A("[MessageQueue] Error, trying to enqueue to closed queue");this.resolve?(this.resolve(e),this.resolve=null,this.reject=null):this.queue.push(e)}async dequeue(){if(this.queue.length>0){const e=this.queue.shift();return this.closed?Promise.reject(e):Promise.resolve(e)}return this.closed?null:new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}isEmpty(){return 0===this.queue.length}close(e){console.log(`[MessageQueue] Closing. There are ${this.queue.length} messages left. Close reason: ${e}`),this.closed=!0,this.error=e||"close",this.reject&&this.reject(this.error)}async drain(e){for(console.log("[MessageQueue] Draining."),this.closed||this.close(e||"drain");this.queue.length>0;)await new Promise((e=>setTimeout(e,0)))}}class A extends Error{constructor(e){super(e),this.name=this.constructor.name,"function"==typeof Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error(e).stack}}function I(e,t,n){for(;e&&"string"==typeof e;)try{e=JSON.parse(e,n)}catch(n){throw new A(`JSON.parse() error${t?` at ${t}`:""}: ${n}\nString (possibly nested) was: ${e}`)}return e}const M=/^\s*[\[\{].*[\]\}]\s*$/;function x(e){if(null===e)return null;if("string"!=typeof e)return null;if(!M.test(e))return e;try{return JSON.parse(e)}catch(e){return null}}const T=e=>e instanceof ArrayBuffer?new DataView(e):new DataView(e.buffer,e.byteOffset,e.byteLength);function E(e,t){if(typeof e!=typeof t)return!1;if(null==e||null==t)return!1;const n=T(e),r=T(t);if(n.byteLength!==r.byteLength)return!1;for(let e=0;e<n.byteLength;e++)if(n.getUint8(e)!==r.getUint8(e))return!1;return!0}function R(e){if(e.byteLength<4096)return crypto.getRandomValues(e);{_(!(e.byteLength%1024),"getRandomValues(): large requested blocks must be multiple of 1024 in size");let t=0;try{for(t=0;t<e.byteLength;t+=1024){let n=new Uint8Array(1024);crypto.getRandomValues(n),e.set(n,t)}}catch(e){console.log(`got an error on index i=${t}`),console.log(e),console.trace()}return e}}var D=async function(e,t){const n=new AbortController,r=Symbol("fetch");$e.activeFetches.set(r,n);try{const r=await fetch(e,{...t,signal:n.signal});if($e.isShutdown)throw await(r.body?.cancel("shutDown")),new A("Fetch aborted (shutDown)");return r}catch(r){if(r instanceof A)throw r;const a=`${r}`;if(-1===a.indexOf("connection closed before message completed")&&-1===a.indexOf("Connection reset by peer")&&-1===a.indexOf("The connection was reset")&&-1===a.indexOf("The server closed the connection")&&-1===a.indexOf("Please try sending the request again."))throw new A(`[SBFetch] Error performing fetch() (this might be normal): ${r}`);console.warn(`... got error ('${a}'), retrying fetch() once again`);try{return await new Promise((r=>{setTimeout((()=>{r(fetch(e,{...t,signal:n.signal}))}),0)}))}catch(e){throw console.error("... got an error on retrying fetch()"),new A(`[SBFetch] Error performing fetch() (after RETRY): ${r}`)}}finally{$e.activeFetches.delete(r)}};async function O(e,t){let n;try{if(n=await D(e,t),!n)throw new A("[SBApiFetch] Server did not respond (might be expected)");if(!n.ok){const e=await n.text();let t="[SBApiFetch] Server responded with error\n";throw n.status&&(t+=`  Status code: ('${n.status}')\n`),n.statusText&&(t+=`  Status text: ('${n.statusText}')\n`),e&&(t+=`  Error msg:   ('${e}')\n`),new A(t)}const a=n.headers.get("content-type");var r;if(!a)throw new A("[SBApiFetch] No content header in server response");if(-1!==a.indexOf("application/json"))r=I(await n.json(),"L489");else{if(-1===a.indexOf("application/octet-stream"))throw-1!==a.indexOf("text/plain")?(r=await n.text(),new A(`[SBApiFetch] Server responded with text/plain (?):\n('${r}')`)):new A(`[SBApiFetch] Server responded with unknown content-type header ('${a}')`);r=ye(await n.arrayBuffer()).payload}if(!r||r.error||!1===r.success){let e="[SBApiFetch] No server response, or cannot parse, or error in response";throw n.status&&(e+=" ["+n.status+"]"),r?.error&&(e+=": "+r.error),new A(e)}return r}catch(e){throw n&&n.body&&!n.body.locked&&await n.body.cancel(),e instanceof A?e:new A(`[SBApiFetch] caught error: ${e}`)}}function L(e){const t=" *ErrorStart* ",n=" *ErrorEnd* ";return e instanceof A?e:e instanceof Error?new A(t+e.message+n):new A(t+String(e)+n)}function j(e,t){throw new A("[_sb_exception] << SB lib error ("+e+": "+t+") >>")}function _(e,t){if(!e)throw new A(` <<<<[_sb_assert] assertion failed: '${t}'>>>> `)}function F(e){let t=0;for(const n of e)t+=n.byteLength;const n=new Uint8Array(t);let r=0;for(const t of e)n.set(new Uint8Array(t),r),r+=t.byteLength;return n.buffer}const $="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",N=/^([A-Za-z0-9\-_]*)(={0,2})$/;function U(e){const t=e instanceof ArrayBuffer?new Uint8Array(e):e;let n="";for(let e=0;e<t.length;e+=3){const r=t[e],a=t[e+1],s=t[e+2];n+=$[r>>2]+$[(3&r)<<4|a>>4]+(void 0!==a?$[(15&a)<<2|s>>6]:"")+(void 0!==s?$[63&s]:"")}return n}function H(e){if(e=e.replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,""),!N.test(e))throw new A(`invalid character in b64 string (after cleanup: '${e}')`);const t=e.length,n=new Uint8Array(3*t/4);for(let r=0,a=0;r<t;r+=4){const[t,s,o,i]=[e[r],e[r+1],e[r+2],e[r+3]].map((e=>$.indexOf(e)));n[a++]=t<<2|s>>4,-1!==o&&(n[a++]=(15&s)<<4|o>>2),-1!==i&&(n[a++]=(3&o)<<6|i)}return n}const z="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",V=z[0],q=/^[A-Za-z0-9]*$/,G=q;function W(e){return q.test(e)}const Q=32,J=new Map,Z=new Map;for(let e=1;e<=Q;e++){const t=Math.ceil(8*e/Math.log2(62));J.set(e,t),Z.set(t,e)}const Y=J.get(Q);function X(e){function t(e,t){let n="",r=0n;for(const t of e)r=r<<8n|BigInt(t);for(;r>0n;r/=62n)n=z[Number(r%62n)]+n;return n.padStart(J.get(t),V)}if(null==e)throw new A("arrayBufferToBase62: buffer is null or undefined");const n=e instanceof ArrayBuffer?new Uint8Array(e):e;let r="";for(let e,a=n.byteLength,s=0;a>0;s+=e,a-=e)e=a>=Q?Q:a,r+=t(n.slice(s,s+e),e);return r}function ee(e){if(!q.test(e))throw new A("base62ToArrayBuffer32: must be alphanumeric (0-9A-Za-z).");function t(e,t){try{let n=0n,r=new Uint8Array(t);for(let t=0;t<e.length;t++)n=62n*n+BigInt(z.indexOf(e[t]));if(n>2n**BigInt(8*t)-1n)throw new A("base62ToArrayBuffer: Invalid Base62 string.");for(let e=t-1;e>=0;e--,n>>=8n)r[e]=Number(0xffn&n);return r}catch(e){throw new A("base62ToArrayBuffer: Invalid Base62 string.")}}try{let n=0,r=new Uint8Array(6*e.length/8);for(let a,s,o=0;o<e.length;o+=a,n+=s.byteLength)a=Math.min(e.length-o,Y),s=t(e.slice(o,o+a),Z.get(a)),r.set(s,n);return r.buffer.slice(0,n)}catch(e){throw e}}function te(e){return U(ee(e))}function ne(e){return X(H(e))}const re="0123456789ADMRTxQjrEywcLBdHpNufk",ae=new RegExp(`[${re}.concat(' ')]`);function se(e){const t=re;if(e<0||e>524287)throw new Error("Input number is out of range. Expected a 19-bit integer.");let n=[e>>14&31,e>>9&31,e>>4&31,15&e];return n[3]|=16&(n[0]^n[1]^n[2]),n.map((e=>t[e])).join("")}function oe(e){const t={o:"0",O:"0",i:"1",I:"1",l:"1",z:"2",Z:"2",s:"5",S:"5",b:"6",G:"6",a:"9",g:"9",q:"9",m:"M",t:"T",X:"x",J:"j",e:"E",Y:"y",W:"w",C:"c",P:"p",n:"N",h:"N",U:"u",v:"u",V:"u",F:"f",K:"k"};let n="";for(let r of e)n+=t[r]||r;return n}function ie(e){if(!ae.test(e))throw new Error(`Input string contains invalid characters (${e}) - use 'process()'.`);let t=Array.from(e).map((e=>re.indexOf(e)));return 16&t.reduce(((e,t)=>e^t))?null:16*(32*(32*t[0]+t[1])+t[2])+(15&t[3])}function ce(e){if(null===e)return"0";if(void 0===e)return"u";if(Array.isArray(e))return"a";if(e instanceof ArrayBuffer)return"x";if(e instanceof Uint8Array)return"8";if("boolean"==typeof e)return"b";if(e instanceof DataView)return"v";if(e instanceof Date)return"d";if(e instanceof Map)return"m";if("number"==typeof e)return"number"==typeof(t=e)&&t>=-2147483648&&t<=2147483647&&t%1==0?"i":"n";var t;if(null!==e&&"object"==typeof e&&e.constructor===Object)return"o";if(e instanceof Set)return"t";if("string"==typeof e)return"s";if(e instanceof WeakRef)return"w";if("object"==typeof e&&"function"==typeof e.then)console.error("[getType] Trying to serialize a Promise - did you forget an 'await'?");else{if("object"==typeof e&&"function"==typeof e.toJSON)return"j";console.error("[getType] Unsupported for object:",e)}throw new A("Unsupported type")}function le(e){try{const t={};let n=0,r=0,a=[];for(const s in e)if(e.hasOwnProperty(s)){const o=e[s],i=ce(o);switch(i){case"o":const e=le(o);if(!e)throw new A(`Failed to assemble payload for ${s}`);a.push(e);break;case"j":const t=(new TextEncoder).encode(JSON.stringify(o));a.push(t.buffer);break;case"n":const n=new Uint8Array(8);new DataView(n.buffer).setFloat64(0,o),a.push(n.buffer);break;case"i":const r=new Uint8Array(4);new DataView(r.buffer).setInt32(0,o),a.push(r.buffer);break;case"d":const c=new Uint8Array(8);new DataView(c.buffer).setFloat64(0,o.getTime()),a.push(c.buffer);break;case"b":const l=new Uint8Array(1);l[0]=o?1:0,a.push(l.buffer);break;case"s":const h=(new TextEncoder).encode(o);a.push(h);break;case"x":a.push(o);break;case"8":a.push(o.buffer);break;case"m":const d=new Array;o.forEach(((e,t)=>{d.push([t,e])}));const u=le(d);if(!u)throw new A(`Failed to assemble payload for ${s}`);a.push(u);break;case"a":const y=new Array;o.forEach((e=>{y.push(e)}));const f=le(y);if(!f)throw new A(`Failed to assemble payload for ${s}`);a.push(f);break;case"t":const g=new Array;o.forEach((e=>{g.push(e)}));const p=le(g);if(!p)throw new A(`Failed to assemble payload for ${s}`);a.push(p);break;case"w":case"0":case"u":a.push(new ArrayBuffer(0));break;default:throw console.error(`[assemblePayload] Unsupported type: ${i}`),new A(`Unsupported type: ${i}`)}const c=a[a.length-1].byteLength;n++,t[n.toString()]={n:s,s:r,z:c,t:i},r+=c}const s=(new TextEncoder).encode(JSON.stringify(t));return F([new Uint32Array([s.byteLength]).buffer,s,...a])}catch(e){return console.error(e),null}}function he(e){const t=le({ver003:!0,payload:e});return t?F([new Uint8Array([170,187,187,170]),t]):null}function de(e,t){switch(t){case"o":return ue(e);case"j":return I((new TextDecoder).decode(e),"L1322");case"n":return new DataView(e).getFloat64(0);case"i":return new DataView(e).getInt32(0);case"d":return new Date(new DataView(e).getFloat64(0));case"b":return 1===new Uint8Array(e)[0];case"s":return(new TextDecoder).decode(e);case"a":const n=ue(e);if(!n)throw new A(`Failed to assemble payload for ${t}`);return Object.values(n);case"m":const r=ue(e);if(!r)throw new A(`Failed to assemble payload for ${t}`);const a=new Map;for(const e in r)a.set(r[e][0],r[e][1]);return a;case"t":const s=ue(e);if(!s)throw new A(`Failed to assemble payload for ${t}`);const o=new Set;for(const e in s)o.add(s[e]);return o;case"x":return e;case"8":return new Uint8Array(e);case"0":return null;case"u":return;default:throw new A(`Unsupported type: ${t}`)}}function ue(e){const t="Cannot parse metadata, this is not a well-formed payload";try{const n=new Uint32Array(e.slice(0,4))[0],r=(new TextDecoder).decode(e.slice(4,4+n));let a;try{a=I(r,"L1290")}catch(e){throw new A(t)}const s=4+n,o={};for(let t=1;t<=Object.keys(a).length;t++){const n=t.toString();if(a[n]){const t=a[n],r=t.s,i=t.z,c=t.t,l=e.slice(s+r,s+r+i);o[t.n]=de(l,c)}else console.log(`found nothing for index ${t}`)}return o}catch(e){if(e instanceof Error&&e.message===t)throw e;throw new A("[extractPayload] exception <<"+e+">> [/extractPayload]")}}function ye(e){if(2864429994!==new Uint32Array(e,0,1)[0])throw new A("Invalid payload signature (this is not a payload)");return ue(e.slice(4))}var fe,ge;function pe(e){"string"==typeof e&&(e=H(e));const t=new Uint8Array(e);return 1==(1&t[t.length-1])?1:0}function we(e){try{if(e.length<=4)return;const t=e.slice(0,4),n=e.slice(4);switch(t.slice(0,3)){case fe.SBPublicKey:switch(t[3]){case ge.Uncompressed:{const e=ee(n);if(96!==e.byteLength)return;const t=e.slice(48,96);return{x:U(e.slice(0,48)),y:U(t),ySign:pe(t)}}case ge.CompressedEven:case ge.CompressedOdd:{const e=t[3]===ge.CompressedEven?0:1,r=ee(n);if(48!==r.byteLength)return;const{x:a,y:s}=Te(U(r),e);return{x:a,y:s,ySign:e}}default:console.error("KeySubPrefix not recognized")}break;case fe.SBPrivateKey:switch(t[3]){case ge.Uncompressed:{const e=ee(n);if(144!==e.byteLength)return;const t=e.slice(48,96);return{x:U(e.slice(0,48)),y:U(t),ySign:pe(t),d:U(e.slice(96,144))}}case ge.CompressedEven:case ge.CompressedOdd:{const e=t[3]===ge.CompressedEven?0:1,r=ee(n);if(96!==r.byteLength)return;const a=r.slice(0,48),{x:s,y:o}=Te(U(a),e);return{x:s,y:o,ySign:e,d:U(r.slice(48,96))}}case ge.Dehydrated:return void console.error("parseSB384string() - you need to rehydrate first ('hydrateKey()')");default:console.error("KeySubPrefix not recognized")}break;default:console.error("KeyPrefix not recognized")}return}catch(e){return void console.error("parseSB384string() - malformed input, exception: ",e)}}function ve(e,t,n){if(!e||64!==e.length||!t||64!==t.length||void 0===n)return;const r=new Uint8Array(96);return r.set(H(e),0),r.set(H(t),48),fe.SBPrivateKey+(0===n?ge.CompressedEven:ge.CompressedOdd)+X(r)}function me(e,t){if(e.length<=4)return;const n=e.slice(0,4);switch(n.slice(0,3)){case fe.SBPublicKey:return e;case fe.SBPrivateKey:switch(n[3]){case ge.Uncompressed:case ge.CompressedEven:case ge.CompressedOdd:return e;case ge.Dehydrated:{if(!t)return void console.error("hydrateKey() - you need to provide pubKey to hydrate");const n=U(ee(e.slice(4)).slice(0,48)),r=we(t);return r&&r.x&&void 0!==r.ySign?ve(r.x,n,r.ySign):void console.error("hydrateKey() - failed to parse public key")}default:console.error("KeySubPrefix not recognized")}break;default:console.error("KeyPrefix not recognized")}}!function(e){e.SBPublicKey="PNk",e.SBPrivateKey="Xj3",e.SBDehydratedKey="XjZ"}(fe||(fe={})),function(e){e.CompressedEven="2",e.CompressedOdd="3",e.Uncompressed="4",e.Dehydrated="x"}(ge||(ge={}));class be{generateIdKey(e){if(!(e instanceof ArrayBuffer))throw new TypeError("Input must be an ArrayBuffer");return new Promise(((t,n)=>{try{crypto.subtle.digest("SHA-512",e).then((e=>{const n=e.slice(0,32),r=e.slice(32);t({idBinary:n,keyMaterial:r})}))}catch(e){n(e)}}))}async generateKeys(){try{return await crypto.subtle.generateKey({name:"ECDH",namedCurve:"P-384"},!0,["deriveKey"])}catch(e){throw new A("generateKeys() exception ("+e+")")}}async importKey(e,t,n,r,a){try{let s;const o={ECDH:{name:"ECDH",namedCurve:"P-384"},AES:{name:"AES-GCM"},PBKDF2:"PBKDF2"};if("jwk"===e){const e=t;if(void 0===e.kty)throw new A("importKey() - invalid JsonWebKey");"ECDH"===e.alg&&(e.alg=void 0),s=await crypto.subtle.importKey("jwk",e,o[n],r,a)}else s=await crypto.subtle.importKey(e,t,o[n],r,a);return s}catch(e){throw new A(`... importKey() error: ${e}:`)}}async exportKey(e,t){return crypto.subtle.exportKey(e,t).catch((()=>{}))}async encrypt(e,t,n){if(null===e)throw new A("no contents");if(!n.iv)throw new A("no nonce");return n.name?_("AES-GCM"===n.name,"Must be AES-GCM (L1951)"):n.name="AES-GCM",crypto.subtle.encrypt(n,t,e)}async wrap(e,t,n,r,a){const s=he(e),o=crypto.getRandomValues(new Uint8Array(12)),i=await $e.dateNow(),c=new DataView(new ArrayBuffer(8));return c.setFloat64(0,i),{f:t,c:await Me.encrypt(s,n,{iv:o,additionalData:c}),iv:o,salt:r,s:await Me.sign(a,s),ts:i}}sign(e,t){return crypto.subtle.sign({name:"ECDSA",hash:{name:"SHA-384"}},e,t)}verify(e,t,n){return crypto.subtle.verify({name:"ECDSA",hash:{name:"SHA-384"}},e,t,n)}str2ab(e){return(new TextEncoder).encode(e)}ab2str(e){return new TextDecoder("utf-8").decode(e)}}function Se(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=`__${e.constructor.name}__${t}__`;if(this.hasOwnProperty(n))return this[n];{const e=r.call(this);return Object.defineProperty(this,n,{configurable:!1,enumerable:!1,writable:!1,value:e}),e}}}}function ke(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=e.constructor.name,a=e.constructor.ReadyFlag;_(a in this,"'readyFlagSymbol' missing yet getter accessed with @Ready pattern (fatal)"),_(this[a],`'${n}.${t}' getter accessed but object not 'ready' (fatal)`);const s=r.call(this);return _(null!=s,`'${n}.${t}' getter accessed but return value will be NULL (fatal)`),s}}}function Ce(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=e.constructor.name;return"owner"in this&&_(!0===this.owner,`${t} getter or method accessed for object ${n} but callee is not channel owner`),r.call(this)}}}const Pe=Symbol("SB_CHANNEL_MESSAGE_SYMBOL"),Ke=Symbol("SB_CHANNEL_API_BODY_SYMBOL"),Be=Symbol("SBChannelHandle"),Ae=Symbol.for("SBObjectHandle"),Ie=Symbol.for("SBStorageToken"),Me=new be,xe="\n"+"=".repeat(76)+"\n";function Te(e,t){const n=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff"),r=BigInt("0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef"),a=(n+1n)/4n,s=new Uint8Array(H(e)),o="0x"+Array.from(s,(e=>e.toString(16).padStart(2,"0"))).join("");var i=BigInt(o),c=function(e,t,n){if(1n===n)return 0n;let r=1n;for(e%=n;t>0n;)t%2n===1n&&(r=r*e%n),t>>=1n,e=e*e%n;return r}(i*i*i-3n*i+r,a,n);c%2n!==BigInt(t)&&(c=n-c);const l=c.toString(16).padStart(96,"0");return{x:e,y:U(new Uint8Array(l.match(/.{1,2}/g).map((e=>parseInt(e,16)))))}}"=".repeat(76);class Ee{sb384Ready;static ReadyFlag=Symbol("SB384ReadyFlag");#t;#n;#r;#a;#s;#o;#i;#c;#l;#h;errorState=!1;constructor(e,t){this[Ee.ReadyFlag]=!1,this.sb384Ready=new Promise((async(n,r)=>{try{if(e)if(e instanceof CryptoKey){const n=await Me.exportKey("jwk",e);_(n&&n.x&&n.y,"INTERNAL"),n.d?(this.#t=!0,this.#s=n.d):(this.#t=!1,_(!t,"ERROR creating SB384 object: key provided is not the requested private")),this.#n=n.x,this.#r=n.y}else if(e&&e instanceof Object&&"kty"in e){const n=e;_(n&&n.x&&n.y,"Cannot parse format of JWK key"),e.d?(this.#t=!0,this.#s=n.d):(this.#t=!1,_(!t,"ERROR creating SB384 object: key provided is not the requested private")),this.#n=n.x,this.#r=n.y}else{if("string"!=typeof e)throw new A("ERROR creating SB384 object: invalid key (must be a JsonWebKey, SBUserId, or omitted)");{const n=we(e);if(!n)throw new A("ERROR creating SB384 object: invalid key (must be a JsonWebKey | SBUserPublicKey | SBUserPrivateKey, or omitted)");const{x:r,y:a,d:s}=n;s?(this.#t=!0,this.#s=s):(this.#t=!1,_(!t,"ERROR creating SB384 object: key provided is not the requested private")),_(r&&a,"INTERNAL"),this.#n=r,this.#r=a}}else{const e=await Me.generateKeys(),t=await Me.exportKey("jwk",e.privateKey);_(t&&t.x&&t.y&&t.d,"INTERNAL"),this.#t=!0,this.#n=t.x,this.#r=t.y,this.#s=t.d}if(this.#t&&(this.#o=await Me.importKey("jwk",this.jwkPrivate,"ECDH",!0,["deriveKey"])),this.#i=await Me.importKey("jwk",this.jwkPublic,"ECDH",!0,[]),this.#t){const e={...this.jwkPrivate,key_ops:["sign"]};this.#c=await crypto.subtle.importKey("jwk",e,{name:"ECDSA",namedCurve:"P-384"},!0,["sign"])}else{const e={...this.jwkPublic,key_ops:["verify"]};this.#c=await crypto.subtle.importKey("jwk",e,{name:"ECDSA",namedCurve:"P-384"},!0,["verify"])}const r=F([H(this.#n),H(this.#r)]),a=await crypto.subtle.digest("SHA-256",r);this.#l=X(a);const s=BigInt("0x"+Array.from(new Uint8Array(a)).map((e=>e.toString(16).padStart(2,"0"))).join(""))>>28n;this.#h=Array.from({length:12},((e,t)=>se(Number(s>>BigInt(19*(11-t))&0x7ffffn)))).join(""),this.#a=pe(this.#r),this[Ee.ReadyFlag]=!0,n(this)}catch(e){r("ERROR creating SB384 object failed: "+L(e))}}))}get SB384ReadyFlag(){return this[Ee.ReadyFlag]}get ready(){return this.sb384Ready}get private(){return this.#t}get hash(){return this.#l}get hashB32(){return this.#h}get userId(){return this.hash}get ownerChannelId(){return this.hash}get privateKey(){if(!this.private)throw new A("this is a public key, there is no 'privateKey' value");return this.#o}get signKey(){return this.#c}get publicKey(){return this.#i}get jwkPrivate(){return _(this.#t,"jwkPrivate() - not a private key"),_(this.#n&&this.#r&&this.#s,"JWK key info is not available (fatal)"),{crv:"P-384",ext:!0,key_ops:["deriveKey"],kty:"EC",x:this.#n,y:this.#r,d:this.#s}}get jwkPublic(){return _(this.#n&&this.#r,"JWK key info is not available (fatal)"),{crv:"P-384",ext:!0,key_ops:[],kty:"EC",x:this.#n,y:this.#r}}get ySign(){return _(null!==this.#a,"ySign() - ySign is not available (fatal)"),this.#a}get userPublicKey(){return _(this.#n&&void 0!==this.#a,"userPublicKey() - sufficient key info is not available (fatal)"),fe.SBPublicKey+(0===this.#a?ge.CompressedEven:ge.CompressedOdd)+ne(this.#n)}get userPrivateKey(){_(this.#t,"userPrivateKey() - not a private key, there is no userPrivateKey");const e=ve(this.#n,this.#s,this.#a);return _(void 0!==e,"userPrivateKey() - failed to construct key, probably missing info (fatal)"),e}get userPrivateKeyDehydrated(){return _(this.#t&&this.#s,"userPrivateKey() - not a private key, and/or 'd' is missing, there is no userPrivateKey"),fe.SBPrivateKey+ge.Dehydrated+ne(this.#s)}}a([Se,ke],Ee.prototype,"private",null),a([Se,ke],Ee.prototype,"hash",null),a([Se,ke],Ee.prototype,"hashB32",null),a([Se,ke],Ee.prototype,"userId",null),a([Se,ke],Ee.prototype,"ownerChannelId",null),a([Se,ke],Ee.prototype,"privateKey",null),a([Se,ke],Ee.prototype,"signKey",null),a([Se,ke],Ee.prototype,"publicKey",null),a([Se],Ee.prototype,"jwkPrivate",null),a([Se],Ee.prototype,"jwkPublic",null),a([Se],Ee.prototype,"ySign",null),a([Se],Ee.prototype,"userPublicKey",null),a([Se],Ee.prototype,"userPrivateKey",null),a([Se],Ee.prototype,"userPrivateKeyDehydrated",null);class Re{#d;#u;constructor(e,t){this.#u=t,this.#d=this.initializeMasterKey(e)}async ready(){await this.#d}setChannel(e){}async initializeMasterKey(e){const t=this.#u.salt1,n=this.#u.iterations1,r=this.#u.hash1;_(t&&n&&r,"Protocol_AES_GCM_256.initializeMasterKey() - insufficient key info (fatal)");const a=await crypto.subtle.importKey("raw",(new TextEncoder).encode(e),{name:"PBKDF2"},!1,["deriveBits","deriveKey"]),s=await crypto.subtle.deriveBits({name:"PBKDF2",salt:t,iterations:n,hash:r},a,256);return crypto.subtle.importKey("raw",s,{name:"PBKDF2"},!1,["deriveBits","deriveKey"])}static async genKey(){return{salt1:crypto.getRandomValues(new Uint8Array(16)).buffer,iterations1:1e5,iterations2:1e4,hash1:"SHA-256",summary:"PBKDF2 - SHA-256 - AES-GCM"}}async#y(e){return await crypto.subtle.deriveKey({name:"PBKDF2",salt:e,iterations:this.#u.iterations2,hash:this.#u.hash1},await this.#d,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"])}async encryptionKey(e){return _(e.salt,"Protocol called without salt (Internal Error)"),this.#y(e.salt)}async decryptionKey(e,t){if(t.salt)return this.#y(t.salt);console.warn("Salt should always be present in ChannelMessage")}}class De{#f;#g=new Map;constructor(){}setChannel(e){this.#f=e}async encryptionKey(e){_(this.#f,"[Protocol_ECDH] Error, need to know channel (L2511)"),await this.#f.ready;const t=this.#f.channelId;_(t,"Internal Error (L2565)");const n=e.t?e.t:this.#f.channelData.ownerPublicKey;return this.#p(t,n,this.#f.privateKey)}async decryptionKey(e,t){await e.ready;const n=e.channelId;_(n,"Internal Error (L2594)");const r=e.visitors.get(t.f);if(r)return this.#p(n,r,e.privateKey);console.error("Protocol_ECDH.key() - sentFrom is unknown")}async#p(e,t,n){const r=e+"_"+t;if(!this.#g.has(r)){const e=await crypto.subtle.deriveKey({name:"ECDH",public:(await new Ee(t).ready).publicKey},n,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]);this.#g.set(r,e)}const a=this.#g.get(r);return _(a,"Internal Error (L2584/2611)"),a}}class Oe extends Ee{#w;sbChannelKeysReady;static ReadyFlag=Symbol("SBChannelKeysReadyFlag");#v;channelServer;constructor(e){let t;if(null===e)throw new A("SBChannelKeys constructor: you cannot pass 'null'");if(e)if("string"==typeof e)super(e,!0);else{if(!h(e))throw new A("SBChannelKeys() constructor: invalid parameter (must be SBChannelHandle or SBUserPrivateKey)");{const n=d(e);t=n.channelServer,super(n.userPrivateKey,!0),this.#w=n.channelId,this.#v=n.channelData}}else super();t||(t=$e.defaultChannelServer),"/"===t[t.length-1]&&(this.channelServer=t.slice(0,-1)),this.channelServer=t,this[Oe.ReadyFlag]=!1,this.sbChannelKeysReady=new Promise((async(e,t)=>{try{if(await this.sb384Ready,_(this.private,"Internal Error (L2476)"),this.#w){if(!this.#v){if(!this.channelServer)throw new A("SBChannelKeys() constructor: either key is owner key, or handle contains channelData, or channelServer is provided ...");var n=await this.callApi("/getChannelKeys");_((n=y(n)).channelId===this.#w,"Internal Error (L2493)"),this.#v=n}}else this.#w=this.ownerChannelId,this.#v={channelId:this.#w,ownerPublicKey:this.userPublicKey};this[Oe.ReadyFlag]=!0,e(this)}catch(e){t("[SBChannelKeys] constructor failed. "+L(e))}}))}get ready(){return this.sbChannelKeysReady}get SBChannelKeysReadyFlag(){return this[Oe.ReadyFlag]}get channelData(){return this.#v}get owner(){return this.private&&this.ownerChannelId&&this.channelId&&this.ownerChannelId===this.channelId}get channelId(){return this.#w}get handle(){return{[Be]:!0,channelId:this.channelId,userPrivateKey:this.userPrivateKey,channelServer:this.channelServer,channelData:this.channelData}}async buildApiBody(e,t){await this.sb384Ready;const n=await $e.dateNow(),r=new ArrayBuffer(8);new DataView(r).setFloat64(0,n);const a=F([r,(new TextEncoder).encode(e).buffer]),s=t?he(t):void 0,o=await Me.sign(this.signKey,s?F([a,s]):a),i={channelId:this.#w,path:e,userId:this.userId,userPublicKey:this.userPublicKey,timestamp:n,sign:o};return s&&(i.apiPayloadBuf=s),g(i)}callApi(e,t){return _(this.channelServer,"[ChannelApi.callApi] channelServer is unknown (you can just set it, eg 'channel.channelServer = ...')"),_(this.#w&&e,"Internal Error (L2528)"),new Promise((async(n,r)=>{const a={method:"POST",headers:{"Content-Type":'application/octet-stream"'},body:he(await this.buildApiBody(e,t))};O(this.channelServer+"/api/v2/channel/"+this.#w+e,a).then((e=>{n(e)})).catch((e=>{r(e instanceof A?e:"[Channel.callApi] Error: "+L(e))}))}))}}a([Se,ke],Oe.prototype,"channelData",null),a([Se,ke],Oe.prototype,"owner",null),a([Se,ke],Oe.prototype,"channelId",null),a([Se,ke],Oe.prototype,"handle",null);class Le extends Oe{channelReady;static ReadyFlag=Symbol("ChannelReadyFlag");locked=!1;static defaultProtocol=new De;protocol=Le.defaultProtocol;visitors=new Map;sendQueue=new B;isClosed=!1;previous=void 0;constructor(e,t){null===e?super():super(e),this.protocol=t||Le.defaultProtocol,this.messageQueueManager().then((()=>{console.log("Channel() constructor - messageQueueManager() is DONE")})).catch((e=>{throw e})),this.channelReady=this.sbChannelKeysReady.then((()=>(this.visitors.set(this.channelId,this.channelData.ownerPublicKey),this[Le.ReadyFlag]=!0,this.protocol.setChannel(this),this))).catch((e=>{throw e}))}get ready(){return _(!this.isClosed,"[Channel] Channel is closed, blocking on'ready' will reject"),this.channelReady}get ChannelReadyFlag(){return this[Le.ReadyFlag]}get api(){return this}async extractMessage(e){if(e){if(e instanceof ArrayBuffer)throw new A("[Channel.extractMessage] Message is an ArrayBuffer (did you forget extractPayload()?)");try{if(!(e=p(e)))return void console.warn("++++ [extractMessage]: message is not valid (probably an error)",e);const t=e.f;if(!t)return void console.error("++++ [extractMessage]: no sender userId hash in message (probably an error)");if(!this.visitors.has(t)){console.log("++++ [extractMessage]: need to update visitor table ...");const e=await this.callApi("/getPubKeys");if(!(e&&e instanceof Map))return void console.error("++++ [extractMessage]: visitorMap is not valid (probably an error)");console.log(xe,"visitorMap:\n",e,"\n",xe);for(const[t,n]of e)console.log("++++ [extractMessage]: adding visitor:",t,n),this.visitors.set(t,n)}_(this.visitors.has(t),`Cannot find sender userId hash ${t} in public key map`),_(this.protocol,"Protocol not set (internal error)");const n=await(this.protocol?.decryptionKey(this,e));if(!n)return void console.error("++++ [extractMessage]: no decryption key provided by protocol (probably an error)");if(!e.ts)throw new A("unwrap() - no timestamp in encrypted message");const{c:r,iv:a}=e;_(r,"[unwrap] No contents in encrypted message (probably an error)");const s=new DataView(new ArrayBuffer(8));let o;s.setFloat64(0,e.ts);try{o=await crypto.subtle.decrypt({name:"AES-GCM",iv:a,additionalData:s},n,r)}catch(e){return void console.error("[extractMessage] Could not decrypt message (exception) [L2898]:",e.message)}return e._id||(e._id=Le.composeMessageKey(this.channelId,e.sts,e.i2)),f({body:ye(o).payload,channelId:this.channelId,sender:t,senderPublicKey:this.visitors.get(t),senderTimestamp:e.ts,serverTimestamp:e.sts,_id:e._id})}catch(e){return void console.error("[extractMessage] Could not process message (exception) [L2782]:",e.message)}}}async extractMessageMap(e){const t=new Map;for(const[n,r]of e){const e=await this.extractMessage(r);e?t.set(n,e):console.warn("[extractMessageMap] - message not valid, skipping:",n,r)}return t}packageMessage(e,t={}){let n={f:this.userId,unencryptedContents:e};if(t){if(t.sendTo&&(n.t=t.sendTo),t.subChannel)throw new A("wrapMessage(): subChannel not yet supported");void 0!==t.ttl&&(n.ttl=t.ttl),t.sendString&&(_("string"==typeof e,"[packageMessage] sendString is true, but contents is not a string"),_(void 0===t.ttl||0===t.ttl,`[packageMessage] sendString implies TTL=0 (we got ${t.ttl})`),n.ttl=0,n.stringMessage=!0)}return!0!==n.stringMessage&&(n.protocol=t.protocol?t.protocol:this.protocol,void 0===n.ttl&&(n.ttl=15),n.salt||(n.salt=crypto.getRandomValues(new Uint8Array(16)).buffer),n.iv||(n.iv=crypto.getRandomValues(new Uint8Array(12)))),n}async finalizeMessage(e){e.ts||(e.ts=await $e.dateNow()),_(!(!0===e.stringMessage),"[Channel.finalizeMessage()] stringMessage is true, finalizing should not be called (internal error)");const t=he(e.unencryptedContents);_(t,"wrapMessage(): failed to assemble payload"),_(t.byteLength<65536,`[Channel.finalizeMessage]: body must be smaller than 64 KiB (we got ${t.byteLength/1024} KiB)})`),e.ts=await $e.dateNow();const n=new DataView(new ArrayBuffer(8));return n.setFloat64(0,e.ts),_(e.protocol,"[Channel.finalizeMessage()] Protocol not set (internal error)"),e.c=await Me.encrypt(t,await e.protocol.encryptionKey(e),{iv:e.iv,additionalData:n}),e.s=await Me.sign(this.signKey,e.c),w(e)}#m(e){return new Promise((async(t,n)=>{await this.ready;const r=!0===e.stringMessage?e.unencryptedContents:await this.finalizeMessage(e);await this.callApi("/send",r).then((e=>{t(e)})).catch((e=>{n(e)}))}))}async send(e,t={}){return new Promise((async(n,r)=>{const a=this.packageMessage(e,t);void 0!==a.ttl&&console.log(xe,"enqueuing message with TTL value: ",a.ttl,xe),this.sendQueue.enqueue({msg:a,resolve:n,reject:r,_send:this.#m.bind(this),retryCount:void 0!==t.retries?t.retries:0})}))}create(e,t=this.channelServer){return _(null!==e,"[Channel.create] Missing storage token"),t&&(this.channelServer=t),_(this.channelServer,"[Channel.create] Missing channel server (neither provided nor in channelKeys)"),new Promise((async(n,r)=>{await this.channelReady,this.channelData.storageToken=l(e),this.callApi("/budd",this.channelData).then((()=>{this.channelServer=t,_(this.channelData&&this.channelData.channelId&&this.userPrivateKey,"Internal Error [L2546]"),n(this)})).catch((e=>{r("Channel.create() failed: "+L(e))}))}))}getLastMessageTimes(){throw new A("Channel.getLastMessageTimes(): deprecated")}getLatestTimestamp(){return this.callApi("/getLatestTimestamp")}async messageQueueManager(){await this.ready;let e=!0;for(;e;)await this.sendQueue.dequeue().then((async t=>{if(t){let e=null;for(;t.retryCount-- >=0;)try{const e=await t._send(t.msg);t.resolve(e);break}catch(t){e="[ERROR] "+t}t.reject(e)}else e=!1})).catch((e=>{if("shutDown"!==e)throw new A("[messageQueueManager] Channel message queue is shutting down with error: "+e.message)}))}async close(){this.isClosed=!0,await this.sendQueue.drain("shutDown")}getMessageKeys(e="0"){return new Promise((async(t,n)=>{await this.channelReady,_(this.channelId,"Channel.getMessageKeys: no channel ID (?)");const{keys:r,historyShard:a}=await this.callApi("/getMessageKeys",{prefix:e});r&&0!==r.size||console.warn("[Channel.getMessageKeys] Warning: no messages (empty/null response); not an error but perhaps unexpected?"),t({keys:r,historyShard:a})}))}getRawMessageMap(e){if(0===e.size)throw new A("[getRawMessageMap] no message keys provided");return new Promise((async(t,n)=>{await this.channelReady,_(this.channelId,"[getRawMessageMap] no channel ID (?)");const r=await this.callApi("/getMessages",e);_(r,"[getRawMessageMap] no messages (empty/null response)"),t(r)}))}getMessageMap(e){if(0===e.size)throw new A("[getMessageMap] no message keys provided");return new Promise((async(t,n)=>{await this.channelReady;const r=await this.callApi("/getMessages",e),a=new Map;for(const[e,t]of r)try{a.set(e,p(ye(t).payload))}catch(e){}t(await this.extractMessageMap(a))}))}getHistory(){return new Promise((async(e,t)=>{await this.channelReady,_(this.channelId,"Channel.getHistory: no channel ID (?)"),e(await this.callApi("/getHistory"))}))}setPage(e){var{page:t,prefix:n,type:r}=e;return _(t,"Channel.setPage: no page (contents) provided"),n=n||12,(r=r||"sb384payloadV3")?this.callApi("/setPage",{page:t,type:r,prefix:n}):this.callApi("/setPage",t)}async getPage(){const e=this.hashB32,t=await D(this.channelServer+"/api/v2/page/"+e).catch((e=>{throw new A(`[Channel.getPage] fetch failed: ${e}`)}));if("sb384payloadV3"!==t.headers.get("content-type"))throw new A("[Channel.getPage] Can only handle 'sb384payloadV3' content type, use 'fetch()'");return ye(await t.arrayBuffer()).payload}acceptVisitor(e){return this.callApi("/acceptVisitor",{userId:e})}getCapacity(){return this.callApi("/getCapacity")}getAdminData(){return this.callApi("/getAdminData")}getMother(){return this.getAdminData().then((e=>e.motherChannel))}isLocked(){return this.getAdminData().then((e=>e.locked))}lock(){return this.callApi("/lockChannel")}updateCapacity(e){return this.callApi("/setCapacity",{capacity:e})}getChannelKeys(){return this.callApi("/getChannelKeys")}getPubKeys(){return this.callApi("/getPubKeys")}getStorageLimit(){return this.callApi("/getStorageLimit")}async getStorageToken(e){return l(await this.callApi("/getStorageToken",{size:e}))}budd(e){return new Promise((async(t,n)=>{var{targetChannel:r,size:a}=e||{};if(r){if(this.channelId===r.channelId)return void n(new Error("[budd()]: source and target channels are the same, probably an error"))}else r=(await(new Le).ready).handle;if(a||(a=o),a!==1/0&&Math.abs(a)>await this.getStorageLimit())return void n(new Error(`[budd()]: storage amount (${a}) is more than current storage limit`));const s=r.channelData;if(s)try{s.storageToken=await this.getStorageToken(a);const e=await new Le(r).ready;e.channelServer||(e.channelServer=this.channelServer);const o=y(await e.callApi("/budd",s));if(r.channelId!==o.channelId)return console.warn("[budd()]: target channel ID changed, should not happen, error somewhere\n",xe),console.warn("targetChannel:",r,"\n",xe),console.warn("newChannelData:",o,"\n",xe),void n(new Error("[budd()]: target channel ID changed, should not happen, error somewhere"));o.storageToken||console.warn("[budd()]: target channel has no storage token, possibly an error, should be returned from server"),t(d({[Be]:!0,channelId:o.channelId,userPrivateKey:r.userPrivateKey,channelServer:this.channelServer,channelData:o}))}catch(e){return void n("[budd] Could not get storage token from server, are you sure about the size?")}else n(new Error("[budd()]: target channel has no channel data, probably an error"))}))}static LOWEST_TIMESTAMP="0".repeat(26);static HIGHEST_TIMESTAMP="3".repeat(26);static timestampToBase4String(e){return e.toString(4).padStart(22,"0")+"0000"}static base4stringToDate(e){const t=parseInt(e.slice(0,-4),4);return new Date(t).toISOString()}static getLexicalExtremes(e){if(0===e.size)return[];let t,n=t=e.values().next().value;for(const r of e)r<t&&(t=r),r>n&&(n=r);return[t,n]}static messageKeySetToPrefix=e=>{if(0===e.size)return"0";const[t,n]=Le.getLexicalExtremes(e);_(t&&n,"[timestampLongestPrefix]: no lowest or highest (internal error?)");const{timestamp:r}=Le.deComposeMessageKey(t),{timestamp:a}=Le.deComposeMessageKey(n);let s=0;for(;s<r.length&&s<a.length&&r[s]===a[s];)s++;return r.substring(0,s)};static timestampLongestPrefix=(e,t)=>{if(e&&t&&"string"==typeof e&&"string"==typeof t&&26===e.length&&26===t.length){let n=0;for(;n<e.length&&n<t.length&&e[n]===t[n];)n++;return e.substring(0,n)}throw new A(`[timestampLongestPrefix]: invalid input:\n '${e}' or '${t}'`)};static timestampRegex=/^[0-3]{26}$/;static base4StringToTimestamp(e){return e&&"string"==typeof e&&26===e.length&&Le.timestampRegex.test(e)?parseInt(e.slice(0,-4),4):0}static base4StringToDate(e){const t=Le.base4StringToTimestamp(e);return t?new Date(t).toISOString():""}static deComposeMessageKey(e){const t=e.match(/^([a-zA-Z0-9]{43})_([_a-zA-Z0-9]{4})_([0-3]{26})$/);return t&&t.length>=4?{channelId:t[1],i2:t[2],timestamp:t[3]}:{channelId:"",i2:"",timestamp:""}}static composeMessageKey(e,t,n="____"){return`${e}_${n??"____"}_${Le.timestampToBase4String(t)}`}}a([Se,ke],Le.prototype,"api",null),a([ke],Le.prototype,"getLatestTimestamp",null),a([ke,Ce],Le.prototype,"setPage",null),a([ke],Le.prototype,"getPage",null),a([ke,Ce],Le.prototype,"acceptVisitor",null),a([ke,Ce],Le.prototype,"getCapacity",null),a([ke,Ce],Le.prototype,"getAdminData",null),a([ke,Ce],Le.prototype,"getMother",null),a([ke,Ce],Le.prototype,"isLocked",null),a([ke,Ce],Le.prototype,"lock",null),a([ke,Ce],Le.prototype,"updateCapacity",null),a([ke,Se],Le.prototype,"getChannelKeys",null),a([ke],Le.prototype,"getPubKeys",null),a([ke],Le.prototype,"getStorageLimit",null),a([ke],Le.prototype,"getStorageToken",null),a([ke,Ce],Le.prototype,"budd",null);class je extends Le{channelSocketReady;static ReadyFlag=Symbol("ChannelSocketReadyFlag");#b;#S;onMessage=e=>{_(!1,"[ChannelSocket] NO MESSAGE HANDLER")};#k=new Map;#C=new Map;#P=!1;lastTimestampPrefix="0".repeat(26);#K=0;constructor(e,t,r){if(_(t,"[ChannelSocket] constructor: no onMessage handler provided"),"string"==typeof e)super(e,r);else{const t=d(e);super(t,r),t.channelServer&&(this.channelServer=t.channelServer)}this.channelServer||(this.channelServer=$e.defaultChannelServer),this[n.ReadyFlag]=!1,this.#S=this.channelServer.replace(/^http/,"ws"),this.onMessage=t,this.channelSocketReady=this.#B()}#A(){console.log(xe,"[ChannelSocket] Setting up 'ping' messages ... ",xe),this.#K=setInterval((()=>{if(this.isClosed)return console.error("[ChannelSocket] we are closed, removing ping interval"),void clearInterval(this.#K);$e.haveNotHeardFromServer()}),500),this.#b.websocket.send("ping")}#B(){return new Promise((async(e,t)=>{await this.sbChannelKeysReady;const r=this.#S+"/api/v2/channel/"+this.channelId+"/websocket";if(this.#b={url:r,ready:!1,closed:!1,timeout:2e4},!this.#b.websocket||3===this.#b.websocket.readyState||2===this.#b.websocket.readyState){this.#b.websocket&&(console.warn("[ChannelSocket] websocket is in a bad state, closing it ... will await"),await async function(e){console.log("[closeSocket] closing socket",e),e.readyState!==WebSocket.CLOSED?await new Promise((t=>{e.addEventListener("close",(()=>{console.log("[Snackabra.closeSocket] ... socket confirmed closed",e),t()}),{once:!0}),e.close(1e3)})):console.warn("[Snackabra] websocket already closed")}(this.#b.websocket),$e.addChannelSocket(this));const e=he(await this.buildApiBody(r));_(e,"Internal Error [L3598]"),this.#b.websocket=new WebSocket(r+"?apiBody="+X(e)),$e.addChannelSocket(this)}const a=this.#b.websocket,s=async r=>{r.data||(console.error("[ChannelSocket] received empty message"),t("[ChannelSocket] received empty message (should be a 'ready' message)"));let o=null;if("string"==typeof r.data?o=I(r.data,"L3909"):r.data instanceof ArrayBuffer?o=ye(r.data).payload:r.data instanceof Blob?o=ye(await r.data.arrayBuffer()).payload:j("L3987","[ChannelSocket] received something other than string or ArrayBuffer"),o)o.ready?(console.log("++++ readyPromise() - received ready message, switching to main message processor:\n",r.data),o.latestTimestamp?this.lastTimestampPrefix=o.latestTimestamp:console.warn("[ChannelSocket] received 'ready' message without 'latestTimestamp'"),a.removeEventListener("message",s),a.addEventListener("message",this.#I),this.#A(),this[n.ReadyFlag]=!0,e(this)):t("[ChannelSocket] received something other than 'ready' as first message:\n"+JSON.stringify(r.data));else{const e="[ChannelSocket] received empty message, or could not parse it (should be a 'ready' message)";console.error(e),t(e)}};this.#b.websocket.addEventListener("message",s);let o=setTimeout((()=>{if(this[n.ReadyFlag]);else{const e="[ChannelSocket] Socket not resolving after waiting, fatal.";console.warn(e),t(e)}}),2e3);this.#b.websocket.addEventListener("open",(async()=>{this.#b.closed=!1,o&&(clearTimeout(o),o=void 0),await this.ready,this.#b.websocket.send("ready")})),this.#b.websocket.addEventListener("close",(e=>{this.#b.closed=!0,e.wasClean?e.reason.includes("does not have an owner")?t(`No such channel on this server (${this.channelServer})`):console.log("[ChannelSocket] Closed (cleanly), with reason: ",e.reason):console.log(`[ChannelSocket] closed but NOT cleanly: ${e.reason} from ${this.channelServer}`),t("wbSocket() closed before it was opened (?)")})),this.#b.websocket.addEventListener("error",(e=>{this.#b.closed=!0,t("[ChannelSocket] Websocket error event "+e)}))}))}#I=async e=>{_(!this.errorState,"[ChannelSocket] in error state (Internal Error L4018)");const t=e.data;var r=null;if(_(t,"[ChannelSocket] received empty message"),$e.heardFromServer(),"string"==typeof t&&Le.timestampRegex.test(t))return $e.heardFromServer(),t>this.lastTimestampPrefix&&(console.log(xe,"[ChannelSocket] Received newer timestamp, will request those messages",xe),this.#b.websocket.send(this.lastTimestampPrefix)),void setTimeout((()=>{this.#b.closed||this.#b.websocket.send("ping")}),1e3);if("string"==typeof t){const e=x(t);if(e)return console.log("[ChannelSocket] Received unrecognized 'string' message, will discard:\n",e),void this.#b.websocket.send(he({error:`Cannot parse 'string' message (''${e})`}));j("L3287","[ChannelSocket] Cannot parse message: "+t)}else if(t instanceof ArrayBuffer)r=ye(t).payload;else{if(!(t instanceof Blob))return void this.#b.websocket.send(he({error:"Received unknown 'type' of message (??)"}));r=ye(await t.arrayBuffer()).payload}if(_(r,"[ChannelSocket] cannot extract message"),r.ready)return void console.log("++++++++ #processMessage: received ready message\n",r);if(r.error)return void console.error("++++++++ #processMessage: received error message\n",r);(r=p(r)).channelId||(r.channelId=this.channelId),_(r.channelId===this.channelId,"[ChannelSocket] received message for wrong channel?"),this.#P&&console.log("[ChannelSocket] Received socket message:",r),console.log("[ChannelSocket] Updated 'latestTimestamp' to:",t),_(r.sts,"[ChannelSocket] Message missing server timestamp Internal Error (L4145)"),this.lastTimestampPrefix=n.timestampToBase4String(r.sts),_(r.c&&r.c instanceof ArrayBuffer,"[ChannelSocket] Internal Error (L3675)");const a=U(await crypto.subtle.digest("SHA-256",r.c));this.previous&&(r.p=this.previous),this.previous=a;const s=this.#k.get(a);s&&(this.#P&&console.log(`++++++++ #processMessage: found matching ack for id ${a}`),this.#k.delete(a),s("success"));const o=this.#C.get(a);o&&(this.#P&&console.log(`++++++++ #processMessage: clearing matching ack timeout for id ${a}`),clearTimeout(o),this.#C.delete(a));const i=await this.extractMessage(r);i&&this.onMessage(i)};get ready(){return _(!this.errorState,"[ChannelSocket] in error state (Internal Error L4104)"),_(!this.isClosed,"[ChannelSocket] We are closed, blocking on'ready' will reject"),this.channelSocketReady}get ChannelSocketReadyFlag(){return this[n.ReadyFlag]}get status(){if(!this.#b||!this.#b.websocket)return"CLOSED";switch(this.#b.websocket.readyState){case 0:return"CONNECTING";case 1:return"OPEN";case 2:return"CLOSING";default:return"CLOSED"}}set enableTrace(e){this.#P=e,e&&console.log("==== jslib ChannelSocket: Tracing enabled ====")}#m(e){return _(!this.errorState,"[ChannelSocket] in error state (Internal Error L4130)"),new Promise((async(t,n)=>{if(this.#b.closed)n("<websocket closed>");else if(!0===e.stringMessage)try{const n=e.unencryptedContents;this.#b.websocket.send(n),t("success")}catch(e){return void n(`<websocket error upon send() of a string message: ${e}>`)}else{const r=he(e=await this.finalizeMessage(e));if(!r)return void n("ChannelSocket.send(): no message payload (Internal Error)");const a=U(await crypto.subtle.digest("SHA-256",e.c));this.#P&&console.log("++++++++ ChannelSocket.send(): Which has hash:",a),this.#k.set(a,t),this.#C.set(a,setTimeout((async()=>{if(this.#k.has(a))return this.#k.delete(a),$e.isShutdown?void n("shutDown"):void n(`<websocket request timed out (no ack) after ${this.#b.timeout}ms (${a})>`);this.#P&&console.log("++++++++ ChannelSocket.send() completed sending"),t("<received ACK, success, message sent and mirrored back>")}),this.#b.timeout));try{this.#b.websocket.send(r)}catch(e){return console.error("Failed to send on socket:\n",e,"\n",(new Error).stack),void n(`<websocket error upon send() of a message: ${e}>`)}}}))}async send(e,t){return await this.ready,_(this.#b&&this.#b.websocket,"[ChannelSocket.send()] called before ready"),this.#b.closed&&(this.#P&&console.info("send() triggered reset of #readyPromise() (normal)"),this.channelSocketReady=this.#B(),this[n.ReadyFlag]=!1),new Promise((async(n,r)=>{this.ChannelSocketReadyFlag||r("ChannelSocket.send() is NOT ready, perhaps it's resetting?");const a=this.#b.websocket.readyState;switch(a){case 1:this.sendQueue.enqueue({msg:this.packageMessage(e,t),resolve:n,reject:r,_send:this.#m.bind(this),retryCount:3});break;case 0:case 2:case 3:r("[ChannelSocket.send()] Tried sending but socket not OPEN - it is "+(0===a?"CONNECTING":2===a?"CLOSING":"CLOSED"));break;default:j("ChannelSocket",`socket in unknown state (${a})`)}}))}reset(){console.trace("++++ ChannelSocket.reset() called ... for ChannelID:",this.channelId),this.#b&&this.#b.websocket&&(1===this.#b.websocket.readyState&&this.#b.websocket.close(),this.#b.closed=!0,$e.removeChannelSocket(this),this.channelSocketReady=this.#B())}async close(){console.log("++++ ChannelSocket.close() called ... closing down stuff ..."),this.isClosed=!0,clearInterval(this.#K),this.#b&&this.#b.websocket&&1===this.#b.websocket.readyState?(console.log("++++ ChannelSocket.close() ... sending close message ..."),this.#b.websocket.send("close")):console.log("++++ ChannelSocket.close() ... no open socket to send close message ...",this.#b?.websocket),await super.close(),$e.removeChannelSocket(this),this[n.ReadyFlag]=!1}}n=je;class _e{#M;constructor(e){this.#M=Promise.resolve(e).then((e=>{const t=e;return _("string"==typeof t,"StorageApi() constructor requires a string (for storageServer)"),t}))}async getStorageServer(){return this.#M}static padBuf(e){const t=e.byteLength;let n;n=t+4<4096?4096:t+4<1048576?2**Math.ceil(Math.log2(t+4)):1048576*Math.ceil((t+4)/1048576);let r=F([e,new Uint8Array(n-t).buffer]);return new DataView(r).setUint32(n-4,t),r}#x(e){const t=e.slice(-4);var n=new DataView(t).getUint32(0);const r=new DataView(t).getUint32(0,!0);return r<n&&(n=r),e.slice(0,n)}static getObjectKey(e,t){return new Promise(((n,r)=>{try{Me.importKey("raw",e,"PBKDF2",!1,["deriveBits","deriveKey"]).then((e=>{crypto.subtle.deriveKey({name:"PBKDF2",salt:t,iterations:1e5,hash:"SHA-256"},e,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]).then((e=>{n(e)}))}))}catch(e){r(e)}}))}static async getObjectId(e,t,n){return X(await crypto.subtle.digest("SHA-256",F([e,t,n])))}async storeData(e,t){try{const n=he(e);if(!n)throw new A("[storeData] failed to assemble payload");const a=r.padBuf(n),s=await Me.generateIdKey(a),o=await this.getStorageServer(),i=o+"/api/v2/storeRequest?id="+X(s.idBinary),d=await O(i);if(!d.salt||!d.iv)throw new A("[storeData] Failed to get key info (salt, nonce) from storage server");const u=await r.getObjectKey(s.keyMaterial,d.salt),y=await Me.encrypt(a,u,{iv:d.iv});let f;if(t instanceof Le)f=await t.getStorageToken(y.byteLength);else if(h(t))f=await(await new Le(t).ready).getStorageToken(y.byteLength);else{if(!c(t))throw new A("[storeData] invalid budget source (needs to be a channel, channel handle, or storage token)");f=l(t)}const g=await r.getObjectId(d.iv,d.salt,y),p=o+"/api/v2/storeData?id="+g,w={method:"POST",headers:{"Content-Type":'application/octet-stream"'},body:he({id:g,iv:d.iv,salt:d.salt,storageToken:f,data:y})};console.log("5555 5555 [storeData] storeQuery:",xe,p,xe);const v=await O(p,w);return{[Ae]:!0,version:S,id:g,key:X(s.keyMaterial),iv:d.iv,salt:d.salt,verification:v.verification,storageServer:o}}catch(e){if(console.error("[storeData] failed:",e),e instanceof A)throw e;throw new A(`[storeData] failed to store data: ${e}`)}}async#T(e,t,n){try{let a=function(e){if(e){if("3"===e.version&&"string"==typeof e.id&&43===e.id.length&&q.test(e.id)&&e.iv instanceof Uint8Array&&12===e.iv.byteLength&&e.salt instanceof ArrayBuffer&&16===e.salt.byteLength&&e.data instanceof ArrayBuffer&&e.actualSize===e.data.byteLength)return e;throw new A("invalid Shard")}throw new A("invalid SBObjectHandle (null or undefined)")}(await O(e+t,{method:"GET"}));_(n.key,"object handle 'key' is missing, cannot decrypt"),n.iv=a.iv,n.salt=a.salt,n.data=new WeakRef(a.data);const s=ee(n.key),o=await r.getObjectKey(s,n.salt),i=await crypto.subtle.decrypt({name:"AES-GCM",iv:n.iv},o,a.data),c=this.#x(i),l=X(await window.crypto.subtle.digest("SHA-256",c)).slice(0,12);return n.payload=ye(c).payload,n.data=new WeakRef(a.data),{hash:l,handle:n}}catch(e){return}}async fetchData(e){const t=C(e),n=await t.verification,r=t.storageServer?t.storageServer:null,a=await this.getStorageServer();for(const e of[r,"http://localhost:3841",a]){if(!e)continue;const r="/api/v2/fetchData?id="+t.id+"&verification="+n,a=await this.#T(e,r,t);if(a){const{hash:t,handle:n}=a;return n.storageServer=e,$e.knownShards.set(t,n),n}}throw new A("[fetchData] failed to fetch from any server")}static getData(e){if(void 0===e)return;const t=C(e);if(t.data){if(t.data instanceof WeakRef){return t.data.deref()||void 0}if(t.data instanceof ArrayBuffer)return t.data;throw new A("Invalid data type in handle")}}async fetchPayload(e){if(!e)throw new A("[fetchPayload] No handle provided (cannot accept null or undefined)");if(e.payload||e.data||(e=await this.fetchData(e)),e.payload)return e.payload;if(e.data)return r.getData(e);throw new A("[fetchPayload] Failed to fetch data or payload")}}r=_e,a([Se],_e.prototype,"getStorageServer",null);class Fe{static events={};static on(e,t){this.events[e]||(this.events[e]=[]),this.events[e].push(t)}static off(e,t){if(!this.events[e])return;const n=this.events[e].indexOf(t);n>-1&&this.events[e].splice(n,1)}static emit(e,...t){const n=this.events[e];n&&0!==n.length&&n.forEach((e=>e(...t)))}}class $e extends Fe{static knownShards=new Map;#E;#R;#D=s;#O;static lastTimeStamp=0;static activeFetches=new Map;static#L=new Set;static isShutdown=!1;static lastTimestampPrefix="0".repeat(26);static#j=Date.now();static onlineStatus="unknown";static defaultChannelServer="http://localhost:3845";constructor(e,t){super(),console.warn(`==== CREATING Snackabra object generation: ${this.#D} ====`),_("string"==typeof e,"[Snackabra] Takes channel server URL as parameter"),e&&($e.defaultChannelServer=e),"boolean"==typeof t&&(t={DEBUG:t}),t&&t.sbFetch&&(console.log("++++ Snackabra constructor: setting custom fetch function ++++"),D=t.sbFetch),this.#E=e,this.#R=new _e(new Promise(((e,t)=>{O(this.#E+"/api/v2/info").then((t=>{_(t.storageServer,"Channel server did not provide storage server name, cannot initialize"),this.#O=t,e(t.storageServer)})).catch((e=>{$e.isShutdown||(console.error("[Snackabra] fetching storage server name failed (fatal):\n",e),t(e))}))})))}static async dateNow(){let e=Date.now();return e<=$e.lastTimeStamp&&(e=$e.lastTimeStamp+1),$e.lastTimeStamp=e,e}static heardFromServer(){switch($e.#j=Date.now(),$e.onlineStatus){case"offline":this.emit("online"),this.emit("reconnected"),$e.onlineStatus="online";break;case"online":break;case"unknown":this.emit("online"),$e.onlineStatus="online"}this.checkUnknownNetworkStatus()}static checkUnknownNetworkStatus(){0===$e.#L.size&&("unknown"!==$e.onlineStatus&&this.emit("unknownNetworkStatus"),$e.onlineStatus="unknown")}static haveNotHeardFromServer(){Date.now()-$e.#j>1100&&(console.warn("[Snackabra] 'ping' message seems to have timed out"),"online"===$e.onlineStatus&&($e.#L.size>0?($e.onlineStatus="offline",this.emit("offline")):($e.onlineStatus="unknown",$e.onlineStatus="offline",this.emit("unknownNetworkStatus")))),this.checkUnknownNetworkStatus()}static addChannelSocket(e){$e.#L.add(e)}static removeChannelSocket(e){$e.#L.has(e)&&$e.#L.delete(e),this.checkUnknownNetworkStatus()}async getPage(e){return ye(await O(this.#E+"/api/v2/page/"+e))}create(e){return _(null!==e,"[create channel] Invalid parameter (null)"),new Promise((async(t,n)=>{try{var r;if(e instanceof Le){const t=e;await t.ready,t.channelServer||(t.channelServer=this.#E),r=await t.getStorageToken(o)}else try{r=l(e)}catch(e){return void n("Invalid parameter to create() - need a token or a budget channel")}_(r,"[create channel] Failed to get storage token for the provided channel");const a=await(new Le).ready;a.channelServer=this.#E,a.create(r).then((e=>{t(e.handle)})).catch((e=>{n(e)}))}catch(e){const t=`Creating channel did not succeed: ${e}`;console.error(t),n(t)}}))}connect(e,t){let n;if("string"==typeof e)n={userPrivateKey:e};else if(n=e,!h(n))throw new A("[Snackabra.connect] Invalid parameter (not a channel handle)");if(_(void 0!==n&&n&&n.userPrivateKey,"[Snackabra.connect] Invalid parameter (at least need owner private key)"),n.channelServer&&n.channelServer!==this.#E)throw new A(`[Snackabra.connect] channel server in handle ('${n.channelServer}') does not match what SB was set up with ('${this.#E}')`);return n.channelServer||(n.channelServer=this.#E),t?new je(n,t):new Le(n)}static async closeAll(){console.log(xe,"==== Snackabra.closeAll() called ====",xe),$e.isShutdown?console.warn("closeAll() called, but it was already shutting down"):($e.isShutdown=!0,$e.activeFetches.forEach((e=>e.abort("Snackabra.closeAll() called"))),$e.activeFetches.clear(),await Promise.all(Array.from($e.#L).map(close)),console.log("... waiting for everything to close ..."),await new Promise((e=>setTimeout(e,2e3))))}get storage(){return this.#R}async getStorageServer(){return this.#R.getStorageServer()}get crypto(){return Me}get version(){return this.#D}}a([Se],$e.prototype,"storage",null),a([Se],$e.prototype,"getStorageServer",null);var Ne={Snackabra:$e,Channel:Le,SBCrypto:be,SB384:Ee,arrayBufferToBase64url:U,base64ToArrayBuffer:H,arrayBufferToBase62:X,base62ToArrayBuffer:ee,sbCrypto:Me,version:s,setDebugLevel:v};return globalThis.SB||(globalThis.SB=Ne),console.warn(`==== SNACKABRA jslib (re)loaded, version '${globalThis.SB.version}' ====`),t})()));