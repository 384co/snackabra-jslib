!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.SB=t():e.SB=t()}(self,(()=>(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{Channel:()=>Ue,ChannelSocket:()=>$e,KeyPrefix:()=>ue,Memoize:()=>Se,MessageBus:()=>K,NEW_CHANNEL_MINIMUM_BUDGET:()=>o,Protocol_AES_GCM_256:()=>Le,Protocol_ECDH:()=>Oe,Ready:()=>me,SB:()=>ze,SB384:()=>Te,SBApiFetch:()=>T,SBChannelKeys:()=>je,SBCrypto:()=>be,SBError:()=>A,SBMessage:()=>_e,SBStorageTokenPrefix:()=>i,Snackabra:()=>Ge,StorageApi:()=>Ne,arrayBufferToBase62:()=>X,arrayBufferToBase64url:()=>$,assemblePayload:()=>le,b32decode:()=>oe,b32encode:()=>ae,b32process:()=>se,b62regex:()=>z,base62:()=>H,base62ToArrayBuffer:()=>Q,base62ToBase64:()=>ee,base62regex:()=>V,base64ToArrayBuffer:()=>N,base64ToBase62:()=>te,base64url:()=>_,compareBuffers:()=>E,extractPayload:()=>ye,getRandomValues:()=>I,hydrateKey:()=>ve,isBase62Encoded:()=>W,jsonOrString:()=>R,jsonParseWrapper:()=>P,msgTtlToSeconds:()=>m,msgTtlToString:()=>k,sbCrypto:()=>Ee,setDebugLevel:()=>S,stringify_SBObjectHandle:()=>C,stripChannelMessage:()=>w,validate_ChannelApiBody:()=>f,validate_ChannelMessage:()=>p,validate_Message:()=>g,validate_SBChannelData:()=>u,validate_SBChannelHandle:()=>d,validate_SBObjectHandle:()=>B,validate_SBStorageToken:()=>l,version:()=>s});var n,r,a=function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o};const s="2.0.0-alpha.5 (build 085)",o=8388608,i="LM2r";function c(e){return e.hash&&"string"==typeof e.hash&&e.hash.length>0&&(!e.size||Number.isInteger(e.size)&&e.size>0)&&(!e.motherChannel||"string"==typeof e.motherChannel)&&(!e.created||Number.isInteger(e.created))&&(!e.used||"boolean"==typeof e.used)}function l(e){if(e){if(e[Re])return e;if("string"==typeof e&&e.slice(0,4)===i)return{[Re]:!0,hash:e};if(c(e))return{...e,[Re]:!0};throw v&&console.error("invalid SBStorageToken ... trying to ingest:\n",e),new A("invalid SBStorageToken")}throw new A("invalid SBStorageToken (null or undefined)")}function h(e){return e.userPrivateKey&&"string"==typeof e.userPrivateKey&&e.userPrivateKey.length>0&&(!e.channelId||"string"==typeof e.channelId&&43===e.channelId.length)&&(!e.channelServer||"string"==typeof e.channelServer)&&(!e.channelData||y(e.channelData))}function d(e){if(e){if(e[Ae])return e;if(h(e))return{...e,[Ae]:!0};throw b&&console.error("invalid SBChannelHandle ... trying to ingest:\n",e),new A("invalid SBChannelHandle")}throw new A("invalid SBChannelHandle (null or undefined)")}function y(e){return e.channelId&&43===e.channelId.length&&e.ownerPublicKey&&"string"==typeof e.ownerPublicKey&&e.ownerPublicKey.length>0&&(!e.storageToken||l(e.storageToken))}function u(e){if(e){if(y(e))return e;throw v&&console.error("invalid SBChannelData ... trying to ingest:\n",e),new A("invalid SBChannelData")}throw new A("invalid SBChannelData (null or undefined)")}function g(e){if(e){if(void 0!==e.body&&null!==e.body&&e.channelId&&"string"==typeof e.channelId&&43===e.channelId.length&&e.sender&&"string"==typeof e.sender&&43===e.sender.length&&e.senderPublicKey&&"string"==typeof e.senderPublicKey&&e.senderPublicKey.length>0&&e.senderTimestamp&&Number.isInteger(e.senderTimestamp)&&e.serverTimestamp&&Number.isInteger(e.serverTimestamp)&&e._id&&"string"==typeof e._id&&75===e._id.length)return e;throw v&&console.error("invalid Message ... trying to ingest:\n",e),new A("invalid Message")}throw new A("invalid Message (null or undefined)")}function f(e){if(e){if(e[Ke])return e;if(e.channelId&&43===e.channelId.length&&e.path&&"string"==typeof e.path&&e.path.length>0&&e.userId&&"string"==typeof e.userId&&43===e.userId.length&&e.userPublicKey&&e.userPublicKey.length>0&&(!e.isOwner||"boolean"==typeof e.isOwner)&&(!e.apiPayloadBuf||e.apiPayloadBuf instanceof ArrayBuffer)&&e.timestamp&&Number.isInteger(e.timestamp)&&e.sign&&e.sign instanceof ArrayBuffer)return{...e,[Ke]:!0};throw v&&console.error("invalid ChannelApiBody ... trying to ingest:\n",e),new A("invalid ChannelApiBody")}throw new A("invalid ChannelApiBody (null or undefined)")}function p(e){if(e){if(e[Ce])return e;if(!(e.f&&"string"==typeof e.f&&43===e.f.length&&e.c&&e.c instanceof ArrayBuffer&&e.ts&&Number.isInteger(e.ts)&&e.iv&&e.iv instanceof Uint8Array&&12===e.iv.length&&e.s&&e.s instanceof ArrayBuffer)||e.sts&&!Number.isInteger(e.sts)||e.salt&&!(e.salt instanceof ArrayBuffer&&16===e.salt.byteLength)||e._id&&("string"!=typeof e._id||86!==e._id.length)||e.ready&&"boolean"!=typeof e.ready||e.timestampPrefix&&("string"!=typeof e.timestampPrefix||26!==e.timestampPrefix.length)||e.channelId&&("string"!=typeof e.channelId||43!==e.channelId.length)||e.i2&&("string"!=typeof e.i2||!/^[a-zA-Z0-9_]{4}$/.test(e.i2))||e.ttl&&!(Number.isInteger(e.ttl)&&e.ttl>=0&&e.ttl<=15))throw b&&console.error("invalid ChannelMessage ... trying to ingest:\n",e),new A("invalid ChannelMessage");return{...e,[Ce]:!0}}throw new A("invalid ChannelMessage (null or undefined)")}function w(e){b&&console.log("stripping message:\n",e);const t={};if(void 0===e.f)throw new A("ERROR: missing 'f' ('from') in message");if(t.f=e.f,void 0===e.c)throw new A("ERROR: missing 'ec' ('encrypted contents') in message");if(t.c=e.c,void 0===e.iv)throw new A("ERROR: missing 'iv' ('nonce') in message");if(t.iv=e.iv,void 0===e.salt)throw new A("ERROR: missing 'salt' in message");if(t.salt=e.salt,void 0===e.s)throw new A("ERROR: missing 's' ('signature') in message");if(t.s=e.s,void 0===e.ts)throw new A("ERROR: missing 'ts' ('timestamp') in message");if(t.ts=e.ts,void 0===e.sts)throw new A("ERROR: missing 'sts' ('servertimestamp') in message");return t.sts=e.sts,void 0!==e.ttl&&15!==e.ttl&&(t.ttl=e.ttl),void 0!==e.t&&(t.t=e.t),void 0!==e.i2&&"____"!==e.i2&&(t.i2=e.i2),t}var v=!1,b=!1;function S(e,t){t&&(b=e&&t),(v=e)&&console.warn("++++ [setDebugLevel]: setting DBG to TRUE ++++"),b&&console.warn("++++ [setDebugLevel]: ALSO setting DBG2 to TRUE (verbose) ++++")}globalThis.configuration&&!0===globalThis.configuration.DEBUG&&((v=!0)&&console.warn("++++ Setting DBG to TRUE based on 'configuration.DEBUG' ++++"),!0===globalThis.configuration.DEBUG2&&(b=!0,v&&console.warn("++++ ALSO setting DBG2 (verbose) ++++")));const m=[0,-1,-1,60,300,1800,14400,129600,864e3,-1,-1,-1,-1,-1,1/0],k=["Ephemeral","<reserved>","<reserved>","One minute","Five minutes","Thirty minutes","Four hours","36 hours","10 days","<reserved>","<reserved>","<reserved>","<reserved>","<reserved>","Permastore (no TTL)"];function B(e){if(e){if(e[Me])return e;if(e.version&&"3"!==e.version||!e.id||"string"!=typeof e.id||43!==e.id.length||e.key&&("string"!=typeof e.key||43!==e.key.length)||e.verification&&"string"!=typeof e.verification&&"object"!=typeof e.verification||e.iv&&"string"!=typeof e.iv&&!(e.iv instanceof Uint8Array)||e.salt&&"string"!=typeof e.salt&&!(e.salt instanceof ArrayBuffer))throw v&&console.error("invalid SBObjectHandle ... trying to ingest:\n",e),new A("invalid SBObjectHandle");return{...e,[Me]:!0}}throw new A("invalid SBObjectHandle (null or undefined)")}async function C(e){return e.iv&&(e.iv="string"==typeof e.iv?e.iv:X(e.iv)),e.salt&&(e.salt="string"==typeof e.salt?e.salt:X(e.salt)),e.verification=await e.verification,B(e)}class K{bus={};#e(e){return this.bus[e]||(this.bus[e]=[])}subscribe(e,t){this.#e(e).push(t)}unsubscribe(e,t){let n=-1;this.bus[e]?-1!=(n=this.bus[e].findLastIndex((e=>e==t)))?this.bus[e].splice(n,1):console.info("fyi: asked to remove a handler but it's not there"):console.info("fyi: asked to remove a handler but the event is not there")}publish(e,...t){for(const n of this.#e("*"))n(e,...t);for(const n of this.#e(e))n(...t)}}class A extends Error{constructor(e){if(super(e),this.name=this.constructor.name,"function"==typeof Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error(e).stack,b){let t=null;if(this.stack){const e=this.stack.split("\n");for(let n=1;n<e.length;n++)if(e[n].trim().startsWith("at")){t=`${e[n].trim()}`;break}}null!==t?console.log("\n",Ie,"SBError():\n","'"+e+"'","\n",t,"\n",Ie):console.log("\n",Ie,"SBError():\n",e,"\n",Ie)}}}function P(e,t,n){for(;e&&"string"==typeof e;)try{e=JSON.parse(e,n)}catch(n){throw new A(`JSON.parse() error${t?` at ${t}`:""}: ${n}\nString (possibly nested) was: ${e}`)}return e}const M=/^\s*[\[\{].*[\]\}]\s*$/;function R(e){if(null===e)return null;if("string"!=typeof e)return null;if(!M.test(e))return e;try{return JSON.parse(e)}catch(e){return null}}const D=e=>e instanceof ArrayBuffer?new DataView(e):new DataView(e.buffer,e.byteOffset,e.byteLength);function E(e,t){if(typeof e!=typeof t)return!1;if(null==e||null==t)return!1;const n=D(e),r=D(t);if(n.byteLength!==r.byteLength)return!1;for(let e=0;e<n.byteLength;e++)if(n.getUint8(e)!==r.getUint8(e))return!1;return!0}function I(e){if(e.byteLength<4096)return crypto.getRandomValues(e);{j(!(e.byteLength%1024),"getRandomValues(): large requested blocks must be multiple of 1024 in size");let t=0;try{for(t=0;t<e.byteLength;t+=1024){let n=new Uint8Array(1024);crypto.getRandomValues(n),e.set(n,t)}}catch(e){console.log(`got an error on index i=${t}`),console.log(e),console.trace()}return e}}var x=function(e,t){return fetch(e,t??{method:"GET",headers:{"Content-Type":"application/json"}}).then((e=>e)).catch((e=>{const t=`[SBFetch] Error performing fetch() (this might be normal): ${e}`;throw console.warn(t),new A(t)}))};async function T(e,t){let n;try{if(n=await x(e,t),!n)throw new A("[SBApiFetch] Server did not respond (might be expected)");const a=n.headers.get("content-type");var r;if(!a)throw new A("[SBApiFetch] Server did not respond (might be expected) (no content header)");if(-1!==a.indexOf("application/json")){const e=await n.json();b&&console.log(`[SBApiFetch] json ('${e}'):\n`,e),r=P(e,"L489")}else{if(-1===a.indexOf("application/octet-stream"))throw-1!==a.indexOf("text/plain")?(r=await n.text(),new A(`[SBApiFetch] Server responded with text/plain (?) ('${r}')`)):new A(`[SBApiFetch] Server responded with unknown content-type header ('${a}')`);r=ye(await n.arrayBuffer()).payload}if(n.ok&&r&&!r.error&&!1!==r.success)return b&&console.log("[SBApiFetch] Success:\n",Ie,e,"\n",Ie,r,"\n",Ie),r;{let e="[SBApiFetch] Network or Server error or cannot parse response";throw n.status&&(e+=" ["+n.status+"]"),r?.error&&(e+=": "+r.error),b&&console.error("[SBApiFetch] error:\n",e),new A(e)}}catch(e){throw b&&console.error(`[SBApiFetch] caught error: ${e}`),n&&n.body&&!n.body.locked&&(b&&console.log("[SBApiFetch] cancelling response body"),await n.body.cancel()),e instanceof A?e:new A(`[SBApiFetch] caught error: ${e}`)}}function L(e){const t=" *ErrorStart* ",n=" *ErrorEnd* ";return e instanceof A?e:e instanceof Error?(v&&console.error("[WrapError] Error: \n",e),new A(t+e.message+n)):new A(t+String(e)+n)}function O(e,t){throw new A("[_sb_exception] << SB lib error ("+e+": "+t+") >>")}function j(e,t){if(!e){const e=` <<<<[_sb_assert] assertion failed: '${t}'>>>> `;throw v&&console.trace(e),new A(e)}}function F(e,t){const n=new Uint8Array(e.byteLength+t.byteLength);return n.set(new Uint8Array(e),0),n.set(new Uint8Array(t),e.byteLength),n.buffer}const _="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",U=/^([A-Za-z0-9\-_]*)(={0,2})$/;function $(e){const t=e instanceof ArrayBuffer?new Uint8Array(e):e;let n="";for(let e=0;e<t.length;e+=3){const r=t[e],a=t[e+1],s=t[e+2];n+=_[r>>2]+_[(3&r)<<4|a>>4]+(void 0!==a?_[(15&a)<<2|s>>6]:"")+(void 0!==s?_[63&s]:"")}return n}function N(e){if(e=e.replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,""),!U.test(e))throw new A(`invalid character in b64 string (after cleanup: '${e}')`);const t=e.length,n=new Uint8Array(3*t/4);for(let r=0,a=0;r<t;r+=4){const[t,s,o,i]=[e[r],e[r+1],e[r+2],e[r+3]].map((e=>_.indexOf(e)));n[a++]=t<<2|s>>4,-1!==o&&(n[a++]=(15&s)<<4|o>>2),-1!==i&&(n[a++]=(3&o)<<6|i)}return n}const H="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",G=H[0],z=/^[A-Za-z0-9]*$/,V=z;function W(e){return z.test(e)}const J=32,q=new Map,Z=new Map;for(let e=1;e<=J;e++){const t=Math.ceil(8*e/Math.log2(62));q.set(e,t),Z.set(t,e)}const Y=q.get(J);function X(e){function t(e,t){let n="",r=0n;for(const t of e)r=r<<8n|BigInt(t);for(;r>0n;r/=62n)n=H[Number(r%62n)]+n;return n.padStart(q.get(t),G)}if(null==e)throw new A("arrayBufferToBase62: buffer is null or undefined");const n=e instanceof ArrayBuffer?new Uint8Array(e):e;let r="";for(let e,a=n.byteLength,s=0;a>0;s+=e,a-=e)e=a>=J?J:a,r+=t(n.slice(s,s+e),e);return r}function Q(e){if(!z.test(e))throw new A("base62ToArrayBuffer32: must be alphanumeric (0-9A-Za-z).");function t(e,t){try{let n=0n,r=new Uint8Array(t);for(let t=0;t<e.length;t++)n=62n*n+BigInt(H.indexOf(e[t]));if(n>2n**BigInt(8*t)-1n)throw new A("base62ToArrayBuffer: Invalid Base62 string.");for(let e=t-1;e>=0;e--,n>>=8n)r[e]=Number(0xffn&n);return r}catch(e){throw new A("base62ToArrayBuffer: Invalid Base62 string.")}}try{let n=0,r=new Uint8Array(6*e.length/8);for(let a,s,o=0;o<e.length;o+=a,n+=s.byteLength)a=Math.min(e.length-o,Y),s=t(e.slice(o,o+a),Z.get(a)),r.set(s,n);return r.buffer.slice(0,n)}catch(e){throw e}}function ee(e){return $(Q(e))}function te(e){return X(N(e))}const ne="0123456789ADMRTxQjrEywcLBdHpNufk",re=new RegExp(`[${ne}.concat(' ')]`);function ae(e){const t=ne;if(e<0||e>524287)throw new Error("Input number is out of range. Expected a 19-bit integer.");let n=[e>>14&31,e>>9&31,e>>4&31,15&e];return n[3]|=16&(n[0]^n[1]^n[2]),n.map((e=>t[e])).join("")}function se(e){const t={o:"0",O:"0",i:"1",I:"1",l:"1",z:"2",Z:"2",s:"5",S:"5",b:"6",G:"6",a:"9",g:"9",q:"9",m:"M",t:"T",X:"x",J:"j",e:"E",Y:"y",W:"w",C:"c",P:"p",n:"N",h:"N",U:"u",v:"u",V:"u",F:"f",K:"k"};let n="";for(let r of e)n+=t[r]||r;return n}function oe(e){if(!re.test(e))throw new Error(`Input string contains invalid characters (${e}) - use 'process()'.`);let t=Array.from(e).map((e=>ne.indexOf(e)));return 16&t.reduce(((e,t)=>e^t))?null:16*(32*(32*t[0]+t[1])+t[2])+(15&t[3])}function ie(e){if(null===e)return"0";if(void 0===e)return"u";if(Array.isArray(e))return"a";if(e instanceof ArrayBuffer)return"x";if(e instanceof Uint8Array)return"8";if("boolean"==typeof e)return"b";if(e instanceof DataView)return"v";if(e instanceof Date)return"d";if(e instanceof Map)return"m";if("number"==typeof e)return"number"==typeof(t=e)&&t>=-2147483648&&t<=2147483647&&t%1==0?"i":"n";var t;if(null!==e&&"object"==typeof e&&e.constructor===Object)return"o";if(e instanceof Set)return"t";if("string"==typeof e)return"s";if(e instanceof WeakRef)return"w";if("object"==typeof e&&"function"==typeof e.then)console.error("[getType] Trying to serialize a Promise - did you forget an 'await'?");else{if("object"==typeof e&&"function"==typeof e.toJSON)return"j";console.error("[getType] Unsupported for object:",e)}throw new A("Unsupported type")}function ce(e){try{const t={};let n=0,r=0,a=[];for(const s in e)if(e.hasOwnProperty(s)){const o=e[s],i=ie(o);switch(i){case"o":const e=ce(o);if(!e)throw new A(`Failed to assemble payload for ${s}`);a.push(e);break;case"j":const t=(new TextEncoder).encode(JSON.stringify(o));a.push(t.buffer);break;case"n":const n=new Uint8Array(8);new DataView(n.buffer).setFloat64(0,o),a.push(n.buffer);break;case"i":const r=new Uint8Array(4);new DataView(r.buffer).setInt32(0,o),a.push(r.buffer);break;case"d":const c=new Uint8Array(8);new DataView(c.buffer).setFloat64(0,o.getTime()),a.push(c.buffer);break;case"b":const l=new Uint8Array(1);l[0]=o?1:0,a.push(l.buffer);break;case"s":const h=(new TextEncoder).encode(o);a.push(h);break;case"x":a.push(o);break;case"8":a.push(o.buffer);break;case"m":const d=new Array;o.forEach(((e,t)=>{d.push([t,e])}));const y=ce(d);if(!y)throw new A(`Failed to assemble payload for ${s}`);a.push(y);break;case"a":const u=new Array;o.forEach((e=>{u.push(e)}));const g=ce(u);if(!g)throw new A(`Failed to assemble payload for ${s}`);a.push(g);break;case"t":const f=new Array;o.forEach((e=>{f.push(e)}));const p=ce(f);if(!p)throw new A(`Failed to assemble payload for ${s}`);a.push(p);break;case"w":case"0":case"u":a.push(new ArrayBuffer(0));break;default:throw console.error(`[assemblePayload] Unsupported type: ${i}`),new A(`Unsupported type: ${i}`)}const c=a[a.length-1].byteLength;n++,t[n.toString()]={n:s,s:r,z:c,t:i},r+=c}const s=(new TextEncoder).encode(JSON.stringify(t)),o=new Uint32Array([s.byteLength]);let i=F(new Uint8Array(o.buffer),new Uint8Array(s));for(let e=0;e<a.length;e++)i=F(new Uint8Array(i),a[e]);return i}catch(e){return console.error(e),null}}function le(e){v&&e instanceof ArrayBuffer&&console.warn("[assemblePayload] Warning: data is already an ArrayBuffer, make sure you are not double-encoding");const t=ce({ver003:!0,payload:e});return t?F(new Uint8Array([170,187,187,170]),t):null}function he(e,t){switch(t){case"o":return de(e);case"j":return P((new TextDecoder).decode(e),"L1322");case"n":return new DataView(e).getFloat64(0);case"i":return new DataView(e).getInt32(0);case"d":return new Date(new DataView(e).getFloat64(0));case"b":return 1===new Uint8Array(e)[0];case"s":return(new TextDecoder).decode(e);case"a":const n=de(e);if(!n)throw new A(`Failed to assemble payload for ${t}`);return Object.values(n);case"m":const r=de(e);if(!r)throw new A(`Failed to assemble payload for ${t}`);const a=new Map;for(const e in r)a.set(r[e][0],r[e][1]);return a;case"t":const s=de(e);if(!s)throw new A(`Failed to assemble payload for ${t}`);const o=new Set;for(const e in s)o.add(s[e]);return o;case"x":return e;case"8":return new Uint8Array(e);case"0":return null;case"u":return;default:throw new A(`Unsupported type: ${t}`)}}function de(e){const t="Cannot parse metadata, this is not a well-formed payload";try{const n=new Uint32Array(e.slice(0,4))[0],r=(new TextDecoder).decode(e.slice(4,4+n));let a;try{a=P(r,"L1290")}catch(e){throw new A(t)}const s=4+n,o={};for(let t=1;t<=Object.keys(a).length;t++){const n=t.toString();if(a[n]){const t=a[n],r=t.s,i=t.z,c=t.t,l=e.slice(s+r,s+r+i);o[t.n]=he(l,c)}else console.log(`found nothing for index ${t}`)}return o}catch(e){if(e instanceof Error&&e.message===t)throw e;throw new A("[extractPayload] exception <<"+e+">> [/extractPayload]")}}function ye(e){const t="Invalid payload signature (this is not a payload)";if(2864429994!==new Uint32Array(e,0,1)[0])throw v&&console.error("\n",Ie,t,"\n",e,Ie),new A(t);return de(e.slice(4))}var ue,ge;function fe(e){"string"==typeof e&&(e=N(e));const t=new Uint8Array(e);return 1==(1&t[t.length-1])?1:0}function pe(e){try{if(e.length<=4)return;const t=e.slice(0,4),n=e.slice(4);switch(t.slice(0,3)){case ue.SBPublicKey:switch(t[3]){case ge.Uncompressed:{const e=Q(n);if(96!==e.byteLength)return;const t=e.slice(48,96);return{x:$(e.slice(0,48)),y:$(t),ySign:fe(t)}}case ge.CompressedEven:case ge.CompressedOdd:{const e=t[3]===ge.CompressedEven?0:1,r=Q(n);if(48!==r.byteLength)return;const{x:a,y:s}=xe($(r),e);return{x:a,y:s,ySign:e}}default:console.error("KeySubPrefix not recognized")}break;case ue.SBPrivateKey:switch(t[3]){case ge.Uncompressed:{const e=Q(n);if(144!==e.byteLength)return;const t=e.slice(48,96);return{x:$(e.slice(0,48)),y:$(t),ySign:fe(t),d:$(e.slice(96,144))}}case ge.CompressedEven:case ge.CompressedOdd:{const e=t[3]===ge.CompressedEven?0:1,r=Q(n);if(96!==r.byteLength)return;const a=r.slice(0,48),{x:s,y:o}=xe($(a),e);return{x:s,y:o,ySign:e,d:$(r.slice(48,96))}}case ge.Dehydrated:return void console.error("parseSB384string() - you need to rehydrate first ('hydrateKey()')");default:console.error("KeySubPrefix not recognized")}break;default:console.error("KeyPrefix not recognized")}return}catch(e){return void console.error("parseSB384string() - malformed input, exception: ",e)}}function we(e,t,n){if(!e||64!==e.length||!t||64!==t.length||void 0===n)return;const r=new Uint8Array(96);return r.set(N(e),0),r.set(N(t),48),ue.SBPrivateKey+(0===n?ge.CompressedEven:ge.CompressedOdd)+X(r)}function ve(e,t){if(e.length<=4)return;const n=e.slice(0,4);switch(n.slice(0,3)){case ue.SBPublicKey:return e;case ue.SBPrivateKey:switch(n[3]){case ge.Uncompressed:case ge.CompressedEven:case ge.CompressedOdd:return e;case ge.Dehydrated:{if(!t)return void console.error("hydrateKey() - you need to provide pubKey to hydrate");const n=$(Q(e.slice(4)).slice(0,48)),r=pe(t);return r&&r.x&&void 0!==r.ySign?we(r.x,n,r.ySign):void console.error("hydrateKey() - failed to parse public key")}default:console.error("KeySubPrefix not recognized")}break;default:console.error("KeyPrefix not recognized")}}!function(e){e.SBPublicKey="PNk",e.SBPrivateKey="Xj3",e.SBDehydratedKey="XjZ"}(ue||(ue={})),function(e){e.CompressedEven="2",e.CompressedOdd="3",e.Uncompressed="4",e.Dehydrated="x"}(ge||(ge={}));class be{generateIdKey(e){if(!(e instanceof ArrayBuffer))throw new TypeError("Input must be an ArrayBuffer");return new Promise(((t,n)=>{try{crypto.subtle.digest("SHA-512",e).then((e=>{const n=e.slice(0,32),r=e.slice(32);t({idBinary:n,keyMaterial:r})}))}catch(e){n(e)}}))}async generateKeys(){try{return await crypto.subtle.generateKey({name:"ECDH",namedCurve:"P-384"},!0,["deriveKey"])}catch(e){throw new A("generateKeys() exception ("+e+")")}}async importKey(e,t,n,r,a){try{let s;const o={ECDH:{name:"ECDH",namedCurve:"P-384"},AES:{name:"AES-GCM"},PBKDF2:"PBKDF2"};if("jwk"===e){const e=t;if(void 0===e.kty)throw new A("importKey() - invalid JsonWebKey");"ECDH"===e.alg&&(e.alg=void 0),s=await crypto.subtle.importKey("jwk",e,o[n],r,a)}else s=await crypto.subtle.importKey(e,t,o[n],r,a);return s}catch(s){const o=`... importKey() error: ${s}:`;throw v&&(console.log(Ie,Ie),console.error(o),console.log(e),console.log(t),console.log(n),console.log(r),console.log(a),console.log(Ie,Ie)),new A(o)}}async exportKey(e,t){return crypto.subtle.exportKey(e,t).catch((()=>{v&&console.warn("... exportKey() protested, this just means we treat this as undefined")}))}async encrypt(e,t,n){if(null===e)throw new A("no contents");if(!n.iv)throw new A("no nonce");return n.name?j("AES-GCM"===n.name,"Must be AES-GCM (L1951)"):n.name="AES-GCM",crypto.subtle.encrypt(n,t,e)}async wrap(e,t,n,r,a,s){j(e&&t&&n&&a,"wrapMessage(): missing required parameter(2)");const o=le(e);j(o,"wrapMessage(): failed to assemble payload"),j(o.byteLength<Fe,`wrapMessage(): body must be smaller than ${Fe/1024} KiB (we got ${o.byteLength/1024} KiB)})`),j(r,"wrapMessage(): missing salt"),b&&console.log("will wrap() body, payload:\n",Ie,"\n",e,"\n",Ie,o,"\n",Ie);const i=crypto.getRandomValues(new Uint8Array(12)),c=25*Math.round(Date.now()/25),l=new DataView(new ArrayBuffer(8));l.setFloat64(0,c);var h={f:t,c:await Ee.encrypt(o,n,{iv:i,additionalData:l}),iv:i,salt:r,s:await Ee.sign(a,o),ts:c};if(b&&console.log("wrap() message is\n",h),s&&(s.sendTo&&(h.t=s.sendTo),s.ttl&&(h.ttl=s.ttl),s.subChannel))throw new A("wrapMessage(): subChannel not yet supported");try{h=p(h)}catch(e){const t=`wrapMessage(): failed to validate message: ${e}`;throw console.error(t),new A(t)}return h}sign(e,t){return crypto.subtle.sign({name:"ECDSA",hash:{name:"SHA-384"}},e,t)}verify(e,t,n){return crypto.subtle.verify({name:"ECDSA",hash:{name:"SHA-384"}},e,t,n)}str2ab(e){return(new TextEncoder).encode(e)}ab2str(e){return new TextDecoder("utf-8").decode(e)}}function Se(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=`__${e.constructor.name}__${t}__`;if(this.hasOwnProperty(n))return this[n];{const e=r.call(this);return Object.defineProperty(this,n,{configurable:!1,enumerable:!1,writable:!1,value:e}),e}}}}function me(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=e.constructor.name,a=e.constructor.ReadyFlag;j(a in this,"'readyFlagSymbol' missing yet getter accessed with @Ready pattern (fatal)"),j(this[a],`'${n}.${t}' getter accessed but object not 'ready' (fatal)`);const s=r.call(this);return j(null!=s,`'${n}.${t}' getter accessed but return value will be NULL (fatal)`),s}}}function ke(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=e.constructor.name;return"owner"in this&&j(!0===this.owner,`${t} getter or method accessed for object ${n} but callee is not channel owner`),r.call(this)}}}const Be=["SBMessage","SBObjectHandle","SBChannelHandle","ChannelApiBody"],Ce=Symbol("SB_CHANNEL_MESSAGE_SYMBOL"),Ke=Symbol("SB_CHANNEL_API_BODY_SYMBOL"),Ae=Symbol("SBChannelHandle"),Pe=Symbol.for("SBMessage"),Me=Symbol.for("SBObjectHandle"),Re=Symbol.for("SBStorageToken");function De(e,t){switch(t){case"SBMessage":return Pe in e;case"SBObjectHandle":case"SBChannelHandle":return Me in e;default:return!1}}const Ee=new be,Ie="\n"+"=".repeat(76)+"\n";function xe(e,t){const n=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff"),r=BigInt("0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef"),a=(n+1n)/4n,s=new Uint8Array(N(e)),o="0x"+Array.from(s,(e=>e.toString(16).padStart(2,"0"))).join("");var i=BigInt(o),c=function(e,t,n){if(1n===n)return 0n;let r=1n;for(e%=n;t>0n;)t%2n===1n&&(r=r*e%n),t>>=1n,e=e*e%n;return r}(i*i*i-3n*i+r,a,n);c%2n!==BigInt(t)&&(c=n-c);const l=c.toString(16).padStart(96,"0");return{x:e,y:$(new Uint8Array(l.match(/.{1,2}/g).map((e=>parseInt(e,16)))))}}class Te{sb384Ready;static ReadyFlag=Symbol("SB384ReadyFlag");#t;#n;#r;#a;#s;#o;#i;#c;#l;#h;constructor(e,t){this[Te.ReadyFlag]=!1,this.sb384Ready=new Promise((async(n,r)=>{try{if(e)if(e instanceof CryptoKey){const n=await Ee.exportKey("jwk",e);j(n&&n.x&&n.y,"INTERNAL"),n.d?(this.#t=!0,this.#s=n.d):(this.#t=!1,j(!t,"ERROR creating SB384 object: key provided is not the requested private")),this.#n=n.x,this.#r=n.y}else if(e&&e instanceof Object&&"kty"in e){const n=e;j(n&&n.x&&n.y,"Cannot parse format of JWK key"),e.d?(this.#t=!0,this.#s=n.d):(this.#t=!1,j(!t,"ERROR creating SB384 object: key provided is not the requested private")),this.#n=n.x,this.#r=n.y}else{if("string"!=typeof e)throw new A("ERROR creating SB384 object: invalid key (must be a JsonWebKey, SBUserId, or omitted)");{const n=pe(e);if(!n)throw new A("ERROR creating SB384 object: invalid key (must be a JsonWebKey | SBUserPublicKey | SBUserPrivateKey, or omitted)");const{x:r,y:a,d:s}=n;s?(this.#t=!0,this.#s=s):(this.#t=!1,j(!t,"ERROR creating SB384 object: key provided is not the requested private")),j(r&&a,"INTERNAL"),this.#n=r,this.#r=a}}else{b&&console.log("SB384() - generating new key pair");const e=await Ee.generateKeys(),t=await Ee.exportKey("jwk",e.privateKey);j(t&&t.x&&t.y&&t.d,"INTERNAL"),this.#t=!0,this.#n=t.x,this.#r=t.y,this.#s=t.d,b&&console.log("#### FROM SCRATCH",this.#t)}if(b&&console.log("SB384() constructor; x/y/d:\n",this.#n,"\n",this.#r,"\n",this.#s),this.#t&&(this.#o=await Ee.importKey("jwk",this.jwkPrivate,"ECDH",!0,["deriveKey"])),this.#i=await Ee.importKey("jwk",this.jwkPublic,"ECDH",!0,[]),this.#t){const e={...this.jwkPrivate,key_ops:["sign"]};b&&console.log("starting jwk (private):\n",e),this.#c=await crypto.subtle.importKey("jwk",e,{name:"ECDSA",namedCurve:"P-384"},!0,["sign"])}else{const e={...this.jwkPublic,key_ops:["verify"]};b&&console.log("starting jwk (public):\n",e),this.#c=await crypto.subtle.importKey("jwk",e,{name:"ECDSA",namedCurve:"P-384"},!0,["verify"])}const r=F(N(this.#n),N(this.#r)),a=await crypto.subtle.digest("SHA-256",r);this.#l=X(a);const s=BigInt("0x"+Array.from(new Uint8Array(a)).map((e=>e.toString(16).padStart(2,"0"))).join(""))>>28n;this.#h=Array.from({length:12},((e,t)=>ae(Number(s>>BigInt(19*(11-t))&0x7ffffn)))).join(""),b&&console.log("SB384() constructor; hash:\n",this.#l),this.#a=fe(this.#r),b&&console.log("SB384() - constructor wrapping up",this),this[Te.ReadyFlag]=!0,n(this)}catch(e){r("ERROR creating SB384 object failed: "+L(e))}}))}get SB384ReadyFlag(){return this[Te.ReadyFlag]}get ready(){return this.sb384Ready}get private(){return this.#t}get hash(){return this.#l}get hashB32(){return this.#h}get userId(){return this.hash}get ownerChannelId(){return this.hash}get privateKey(){if(!this.private)throw new A("this is a public key, there is no 'privateKey' value");return this.#o}get signKey(){return this.#c}get publicKey(){return this.#i}get jwkPrivate(){return j(this.#t,"jwkPrivate() - not a private key"),j(this.#n&&this.#r&&this.#s,"JWK key info is not available (fatal)"),{crv:"P-384",ext:!0,key_ops:["deriveKey"],kty:"EC",x:this.#n,y:this.#r,d:this.#s}}get jwkPublic(){return j(this.#n&&this.#r,"JWK key info is not available (fatal)"),{crv:"P-384",ext:!0,key_ops:[],kty:"EC",x:this.#n,y:this.#r}}get ySign(){return j(null!==this.#a,"ySign() - ySign is not available (fatal)"),this.#a}get userPublicKey(){return j(this.#n&&void 0!==this.#a,"userPublicKey() - sufficient key info is not available (fatal)"),ue.SBPublicKey+(0===this.#a?ge.CompressedEven:ge.CompressedOdd)+te(this.#n)}get userPrivateKey(){j(this.#t,"userPrivateKey() - not a private key, there is no userPrivateKey");const e=we(this.#n,this.#s,this.#a);return j(void 0!==e,"userPrivateKey() - failed to construct key, probably missing info (fatal)"),e}get userPrivateKeyDehydrated(){return j(this.#t&&this.#s,"userPrivateKey() - not a private key, and/or 'd' is missing, there is no userPrivateKey"),ue.SBPrivateKey+ge.Dehydrated+te(this.#s)}}a([Se,me],Te.prototype,"private",null),a([Se,me],Te.prototype,"hash",null),a([Se,me],Te.prototype,"hashB32",null),a([Se,me],Te.prototype,"userId",null),a([Se,me],Te.prototype,"ownerChannelId",null),a([Se,me],Te.prototype,"privateKey",null),a([Se,me],Te.prototype,"signKey",null),a([Se,me],Te.prototype,"publicKey",null),a([Se],Te.prototype,"jwkPrivate",null),a([Se],Te.prototype,"jwkPublic",null),a([Se],Te.prototype,"ySign",null),a([Se],Te.prototype,"userPublicKey",null),a([Se],Te.prototype,"userPrivateKey",null),a([Se],Te.prototype,"userPrivateKeyDehydrated",null);class Le{#d;#y;constructor(e,t){this.#y=t,this.#d=this.initializeMasterKey(e)}async initializeMasterKey(e){const t=this.#y.salt1,n=this.#y.iterations1,r=this.#y.hash1;j(t&&n&&r,"Protocol_AES_GCM_256.initializeMasterKey() - insufficient key info (fatal)");const a=await crypto.subtle.importKey("raw",(new TextEncoder).encode(e),{name:"PBKDF2"},!1,["deriveBits","deriveKey"]),s=await crypto.subtle.deriveBits({name:"PBKDF2",salt:t,iterations:n,hash:r},a,256);return crypto.subtle.importKey("raw",s,{name:"PBKDF2"},!1,["deriveBits","deriveKey"])}static async genKey(){return{salt1:crypto.getRandomValues(new Uint8Array(16)).buffer,iterations1:1e5,iterations2:1e4,hash1:"SHA-256",summary:"PBKDF2 - SHA-256 - AES-GCM"}}async#u(e){return await crypto.subtle.deriveKey({name:"PBKDF2",salt:e,iterations:this.#y.iterations2,hash:this.#y.hash1},await this.#d,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"])}async encryptionKey(e){return j(e.salt,"Protocol called without salt (Internal Error)"),v&&console.log("CALLING Protocol_AES_GCM_384.encryptionKey(), salt:",e.salt),this.#u(e.salt)}async decryptionKey(e,t){if(t.salt)return v&&console.log("CALLING Protocol_AES_GCM_384.decryptionKey(), salt:",t.salt),this.#u(t.salt);console.warn("Salt should always be present in ChannelMessage")}}class Oe{#g=new Map;constructor(){}async encryptionKey(e){await e.channel.ready;const t=e.channel.channelId;j(t,"Internal Error (L2565)");const n=e.options.sendTo?e.options.sendTo:e.channel.channelData.ownerPublicKey;return this.#f(t,n,e.channel.privateKey)}async decryptionKey(e,t){await e.ready;const n=e.channelId;j(n,"Internal Error (L2594)");const r=e.visitors.get(t.f);if(r)return this.#f(n,r,e.privateKey);console.error("Protocol_ECDH.key() - sentFrom is unknown")}async#f(e,t,n){const r=e+"_"+t;if(!this.#g.has(r)){const e=await crypto.subtle.deriveKey({name:"ECDH",public:(await new Te(t).ready).publicKey},n,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]);this.#g.set(r,e),b&&console.log("++++ Protocol_ECDH.key() - newKey:",e)}const a=this.#g.get(r);return j(a,"Internal Error (L2584/2611)"),b&&console.log("++++ Protocol_ECDH.key() - res:",a),a}}class je extends Te{#p;sbChannelKeysReady;static ReadyFlag=Symbol("SBChannelKeysReadyFlag");#w;channelServer;constructor(e){let t;if(null===e)throw new A("SBChannelKeys constructor: you cannot pass 'null'");if(e)if("string"==typeof e)super(e,!0);else{if(!h(e))throw new A("SBChannelKeys() constructor: invalid parameter (must be SBChannelHandle or SBUserPrivateKey)");{const n=d(e);t=n.channelServer,super(n.userPrivateKey,!0),this.#p=n.channelId,this.#w=n.channelData}}else super();t||(t=Ge.defaultChannelServer),"/"===t[t.length-1]&&(this.channelServer=t.slice(0,-1)),this.channelServer=t,this[je.ReadyFlag]=!1,this.sbChannelKeysReady=new Promise((async(e,t)=>{try{if(v&&console.log("SBChannelKeys() constructor."),await this.sb384Ready,j(this.private,"Internal Error (L2476)"),this.#p){if(!this.#w){if(!this.channelServer)throw new A("SBChannelKeys() constructor: either key is owner key, or handle contains channelData, or channelServer is provided ...");v&&console.log("++++ SBChannelKeys being initialized from server");var n=await this.callApi("/getChannelKeys");j((n=u(n)).channelId===this.#p,"Internal Error (L2493)"),this.#w=n}}else this.#p=this.ownerChannelId,this.#w={channelId:this.#p,ownerPublicKey:this.userPublicKey};this[je.ReadyFlag]=!0,e(this)}catch(e){t("[SBChannelKeys] constructor failed. "+L(e))}}))}get ready(){return this.sbChannelKeysReady}get SBChannelKeysReadyFlag(){return this[je.ReadyFlag]}get channelData(){return this.#w}get owner(){return this.private&&this.ownerChannelId&&this.channelId&&this.ownerChannelId===this.channelId}get channelId(){return this.#p}get handle(){return{[Ae]:!0,channelId:this.channelId,userPrivateKey:this.userPrivateKey,channelServer:this.channelServer,channelData:this.channelData}}async buildApiBody(e,t){await this.sb384Ready;const n=25*Math.round(Date.now()/25),r=new ArrayBuffer(8);new DataView(r).setFloat64(0,n);const a=F(r,(new TextEncoder).encode(e).buffer),s=t?le(t):void 0,o=await Ee.sign(this.signKey,s?F(a,s):a),i={channelId:this.#p,path:e,userId:this.userId,userPublicKey:this.userPublicKey,timestamp:n,sign:o};return s&&(i.apiPayloadBuf=s),f(i)}callApi(e,t){return j(this.channelServer,"[ChannelApi.callApi] channelServer is unknown (you can just set it, eg 'channel.channelServer = ...')"),v&&console.log("ChannelApi.callApi: calling fetch with path:",e),b&&console.log("... and body:",t),j(this.#p&&e,"Internal Error (L2528)"),new Promise((async(n,r)=>{const a={method:"POST",headers:{"Content-Type":'application/octet-stream"'},body:le(await this.buildApiBody(e,t))};b&&console.log("==== ChannelApi.callApi: calling fetch with init:\n",a),T(this.channelServer+"/api/v2/channel/"+this.#p+e,a).then((e=>{n(e)})).catch((e=>{r(e instanceof A?e:"[Channel.callApi] Error: "+L(e))}))}))}}a([Se,me],je.prototype,"channelData",null),a([Se,me],je.prototype,"owner",null),a([Se,me],je.prototype,"channelId",null),a([Se,me],je.prototype,"handle",null);const Fe=65536;class _e{channel;contents;options;[Pe]=!0;sbMessageReady;static ReadyFlag=Symbol("SBMessageReadyFlag");#v;salt;constructor(e,t,n={}){this.channel=e,this.contents=t,this.options=n,n.sendString?(j("string"==typeof t,"SBMessage() - sendString is true, but contents is not a string"),this.#v=t,this.sbMessageReady=new Promise((async e=>{this[_e.ReadyFlag]=!0,e(this)}))):(this.salt=crypto.getRandomValues(new Uint8Array(16)).buffer,this.sbMessageReady=new Promise((async t=>{await e.channelReady,this.options.protocol||(this.options.protocol=e.protocol),this.options.protocol||(this.options.protocol=Ue.defaultProtocol),this.#v=await Ee.wrap(this.contents,this.channel.userId,await this.options.protocol.encryptionKey(this),this.salt,this.channel.signKey,n),this[_e.ReadyFlag]=!0,t(this)})))}get ready(){return this.sbMessageReady}get SBMessageReadyFlag(){return this[_e.ReadyFlag]}get message(){return this.#v}async send(){return await this.ready,v&&console.log("SBMessage.send() - sending message:",this.message),this.channel.callApi("/send",this.message)}}a([me],_e.prototype,"message",null);class Ue extends je{protocol;channelReady;static ReadyFlag=Symbol("ChannelReadyFlag");locked=!1;static defaultProtocol=new Oe;visitors=new Map;constructor(e,t=Ue.defaultProtocol){this.protocol=t,v&&console.log("Channel() constructor called with handleOrKey:\n",e),null===e?super():super(e),this.channelReady=this.sbChannelKeysReady.then((()=>(this.visitors.set(this.channelId,this.channelData.ownerPublicKey),this[Ue.ReadyFlag]=!0,this))).catch((e=>{throw e}))}get ready(){return this.channelReady}get ChannelReadyFlag(){return this[Ue.ReadyFlag]}get api(){return this}async extractMessage(e){b&&console.log("[extractMessage] Extracting message:",e);try{if(!(e=p(e)))return void(v&&console.error("++++ [extractMessage]: message is not valid (probably an error)",e));const t=e.f;if(!t)return void console.error("++++ [extractMessage]: no sender userId hash in message (probably an error)");if(!this.visitors.has(t)){v&&console.log("++++ [extractMessage]: need to update visitor table ...");const e=await this.callApi("/getPubKeys");if(!(e&&e instanceof Map))return void(v&&console.error("++++ [extractMessage]: visitorMap is not valid (probably an error)"));v&&console.log(Ie,"visitorMap:\n",e,"\n",Ie);for(const[t,n]of e)v&&console.log("++++ [extractMessage]: adding visitor:",t,n),this.visitors.set(t,n)}j(this.visitors.has(t),`Cannot find sender userId hash ${t} in public key map`),j(this.protocol,"Protocol not set (internal error)");const n=await(this.protocol?.decryptionKey(this,e));if(!n)return void(v&&console.error("++++ [extractMessage]: no decryption key provided by protocol (probably an error)"));if(!e.ts)throw new A("unwrap() - no timestamp in encrypted message");const{c:r,iv:a}=e;j(r,"[unwrap] No contents in encrypted message (probably an error)");const s=new DataView(new ArrayBuffer(8));let o;s.setFloat64(0,e.ts);try{o=await crypto.subtle.decrypt({name:"AES-GCM",iv:a,additionalData:s},n,r)}catch(e){return void(v&&console.error("[extractMessage] Could not decrypt message (exception) [L2898]:",e.message))}e._id||(e._id=Ue.composeMessageKey(this.channelId,e.sts,e.i2)),void 0!==e.ttl&&15!==e.ttl&&console.warn(`[extractMessage] TTL->EOL missing (TTL set to ${e.ttl}) [L2762]`);const i={body:ye(o).payload,channelId:this.channelId,sender:t,senderPublicKey:this.visitors.get(t),senderTimestamp:e.ts,serverTimestamp:e.sts,_id:e._id};return b&&console.log("[extractMessage] Extracted message (before validation):",i),g(i)}catch(e){return void(v&&console.error("[extractMessage] Could not process message (exception) [L2782]:",e.message))}}async extractMessageMap(e){const t=new Map;for(const[n,r]of e){const e=await this.extractMessage(r);e&&t.set(n,e)}return t}create(e,t=this.channelServer){return v&&console.log("==== Channel.create() called with storageToken:",e,"and channelServer:",t),j(null!==e,"[Channel.create] Missing storage token"),t&&(this.channelServer=t),j(this.channelServer,"[Channel.create] Missing channel server (neither provided nor in channelKeys)"),new Promise((async(n,r)=>{await this.channelReady,this.channelData.storageToken=l(e),v&&console.log("Will try to create channel with channelData:",this.channelData),this.callApi("/budd",this.channelData).then((()=>{this.channelServer=t,j(this.channelData&&this.channelData.channelId&&this.userPrivateKey,"Internal Error [L2546]"),n(this)})).catch((e=>{r("Channel.create() failed: "+L(e))}))}))}getLastMessageTimes(){throw new A("Channel.getLastMessageTimes(): not supported in 2.0 yet")}getMessageKeys(e="0"){return new Promise((async(t,n)=>{await this.channelReady,j(this.channelId,"Channel.getMessageKeys: no channel ID (?)");const{keys:r,historyShard:a}=await this.callApi("/getMessageKeys",{prefix:e});v&&console.log("getMessageKeys\n",r),r&&0!==r.size||console.warn("[Channel.getMessageKeys] Warning: no messages (empty/null response); not an error but perhaps unexpected?"),t({keys:r,historyShard:a})}))}getRawMessageMap(e){if(v&&console.log("[getRawMessageMap] called with messageKeys:",e),0===e.size)throw new A("[getRawMessageMap] no message keys provided");return new Promise((async(t,n)=>{await this.channelReady,j(this.channelId,"[getRawMessageMap] no channel ID (?)");const r=await this.callApi("/getMessages",e);j(r,"[getRawMessageMap] no messages (empty/null response)"),b&&console.log(Ie,Ie,"[getRawMessageMap] - here are the raw ones\n",r,Ie,Ie),t(r)}))}getMessageMap(e){if(v&&console.log("Channel.getDecryptedMessages() called with messageKeys:",e),0===e.size)throw new A("[getMessageMap] no message keys provided");return new Promise((async(t,n)=>{await this.channelReady;const r=await this.callApi("/getMessages",e),a=new Map;for(const[e,t]of r)try{a.set(e,p(ye(t).payload))}catch(e){v&&console.warn(Ie,"[getMessageMap] Failed extract and/or to validate message:",Ie,t,Ie,e,Ie)}t(await this.extractMessageMap(a))}))}getHistory(){return new Promise((async(e,t)=>{await this.channelReady,j(this.channelId,"Channel.getHistory: no channel ID (?)");const n=await this.callApi("/getHistory");console.log("getHistory result:\n",n),e(n.shardHandle)}))}async send(e,t){return j(!(e instanceof _e),"[Channel.send] msg is already an SBMessage"),new _e(this,e,t).send()}setPage(e){var{page:t,prefix:n,type:r}=e;return j(t,"Channel.setPage: no page (contents) provided"),n=n||12,(r=r||"sb384payloadV3")?this.callApi("/setPage",{page:t,type:r,prefix:n}):this.callApi("/setPage",t)}async getPage(){const e=this.hashB32;v&&console.log(`==== ChannelApi.getPage: calling fetch with: ${e}`);const t=await x(this.channelServer+"/api/v2/page/"+e);if("sb384payloadV3"!==t.headers.get("content-type"))throw new A("[Channel.getPage] Can only handle 'sb384payloadV3' content type, use 'fetch()'");return ye(await t.arrayBuffer()).payload}acceptVisitor(e){return this.callApi("/acceptVisitor",{userId:e})}getCapacity(){return this.callApi("/getCapacity")}getAdminData(){return this.callApi("/getAdminData")}getMother(){return this.getAdminData().then((e=>e.motherChannel))}isLocked(){return this.getAdminData().then((e=>e.locked))}lock(){return this.callApi("/lockChannel")}updateCapacity(e){return this.callApi("/setCapacity",{capacity:e})}getChannelKeys(){return this.callApi("/getChannelKeys")}getPubKeys(){return this.callApi("/getPubKeys")}getStorageLimit(){return this.callApi("/getStorageLimit")}async getStorageToken(e){return l(await this.callApi("/getStorageToken",{size:e}))}budd(e){return new Promise((async(t,n)=>{var{targetChannel:r,size:a}=e||{};if(r){if(this.channelId===r.channelId)return void n(new Error("[budd()]: source and target channels are the same, probably an error"))}else r=(await(new Ue).ready).handle,v&&console.log("\n",Ie,"[budd()]: no target channel provided, using new channel:\n",Ie,r,"\n",Ie);if(a||(a=o),a!==1/0&&Math.abs(a)>await this.getStorageLimit())return void n(new Error(`[budd()]: storage amount (${a}) is more than current storage limit`));const s=r.channelData;if(s)try{s.storageToken=await this.getStorageToken(a),v&&console.log(`[budd()]: requested ${a}, got storage token:`,s.storageToken);const e=await new Ue(r).ready;e.channelServer||(e.channelServer=this.channelServer);const o=u(await e.callApi("/budd",s));if(r.channelId!==o.channelId)return console.warn("[budd()]: target channel ID changed, should not happen, error somewhere\n",Ie),console.warn("targetChannel:",r,"\n",Ie),console.warn("newChannelData:",o,"\n",Ie),void n(new Error("[budd()]: target channel ID changed, should not happen, error somewhere"));o.storageToken||console.warn("[budd()]: target channel has no storage token, possibly an error, should be returned from server");const i={[Ae]:!0,channelId:o.channelId,userPrivateKey:r.userPrivateKey,channelServer:this.channelServer,channelData:o};v&&console.log("[budd()]: success, newHandle:",i),t(d(i))}catch(e){return void n("[budd] Could not get storage token from server, are you sure about the size?")}else n(new Error("[budd()]: target channel has no channel data, probably an error"))}))}static timestampToBase4String(e){return e.toString(4).padStart(22,"0")+"0000"}static timestampLongestPrefix=(e,t)=>{let n=0;for(;n<e.length&&n<t.length&&e[n]===t[n];)n++;return e.substring(0,n)};static base4StringToTimestamp(e){return e&&"string"==typeof e&&26===e.length&&/^[0-3]{26}$/.test(e)?parseInt(e.slice(0,-4),4):0}static base4StringToDate(e){const t=Ue.base4StringToTimestamp(e);return t?new Date(t).toISOString():""}static deComposeMessageKey(e){const t=e.match(/^([a-zA-Z0-9]{43})_([_a-zA-Z0-9]{4})_([0-3]{26})$/);return t&&t.length>=4?[t[1],t[2],t[3]]:["","",""]}static composeMessageKey(e,t,n="____"){return`${e}_${n??"____"}_${Ue.timestampToBase4String(t)}`}}a([Se,me],Ue.prototype,"api",null),a([me],Ue.prototype,"send",null),a([me,ke],Ue.prototype,"setPage",null),a([me],Ue.prototype,"getPage",null),a([me,ke],Ue.prototype,"acceptVisitor",null),a([me,ke],Ue.prototype,"getCapacity",null),a([me,ke],Ue.prototype,"getAdminData",null),a([me,ke],Ue.prototype,"getMother",null),a([me,ke],Ue.prototype,"isLocked",null),a([me,ke],Ue.prototype,"lock",null),a([me,ke],Ue.prototype,"updateCapacity",null),a([me,Se],Ue.prototype,"getChannelKeys",null),a([me],Ue.prototype,"getPubKeys",null),a([me],Ue.prototype,"getStorageLimit",null),a([me],Ue.prototype,"getStorageToken",null),a([me,ke],Ue.prototype,"budd",null);class $e extends Ue{channelSocketReady;static ReadyFlag=Symbol("ChannelSocketReadyFlag");#b;#S;onMessage=e=>{j(!1,"[ChannelSocket] NO MESSAGE HANDLER")};#m=new Map;#k=!1;constructor(e,t,r){if(j(t,"[ChannelSocket] constructor: no onMessage handler provided"),"string"==typeof e)super(e,r);else{const t=d(e);super(t,r),t.channelServer&&(this.channelServer=t.channelServer)}this.channelServer||(this.channelServer=Ge.defaultChannelServer),this[n.ReadyFlag]=!1,this.#S=this.channelServer.replace(/^http/,"ws"),this.onMessage=t,this.channelSocketReady=this.#B()}#B(){return new Promise((async(e,t)=>{v&&console.log("++++ STARTED ChannelSocket.readyPromise()"),await this.sbChannelKeysReady;const r=this.#S+"/api/v2/channel/"+this.channelId+"/websocket";if(this.#b={url:r,ready:!1,closed:!1,timeout:2e3},!this.#b.websocket||3===this.#b.websocket.readyState||2===this.#b.websocket.readyState){const e=le(await this.buildApiBody(r));j(e,"Internal Error [L3598]"),this.#b.websocket=new WebSocket(r+"?apiBody="+X(e))}v&&console.log(Ie,"++++ readyPromise() - setting up websocket message listener",Ie);const a=this.#b.websocket,s=r=>{r.data&&"string"==typeof r.data&&P(r.data,"L3253")?.hasOwnProperty("ready")?(a.removeEventListener("message",s),a.addEventListener("message",this.#C),v&&console.log(Ie,"Received ready",Ie),this[n.ReadyFlag]=!0,e(this)):(v&&console.log(Ie,"Received non-ready (?):\n",r.data,"\n",Ie),t("[ChannelSocket] received something other than 'ready' as first message"))};this.#b.websocket.addEventListener("message",s),this.#b.websocket.addEventListener("open",(async()=>{this.#b.closed=!1,await this.ready,v&&console.log("++++++++ readyPromise() sending init"),this.#b.websocket.send(le({ready:!0}))})),this.#b.websocket.addEventListener("close",(e=>{this.#b.closed=!0,e.wasClean?e.reason.includes("does not have an owner")?t(`No such channel on this server (${this.channelServer})`):console.log("ChannelSocket() was closed (cleanly): ",e.reason):console.log(`ChannelSocket() was closed (and NOT cleanly: ${e.reason} from ${this.channelServer}`),t("wbSocket() closed before it was opened (?)")})),this.#b.websocket.addEventListener("error",(e=>{this.#b.closed=!0,console.log("ChannelSocket() error: ",e),t("ChannelSocket creation error (see log)")})),setTimeout((()=>{if(this[n.ReadyFlag])b&&console.log("ChannelSocket() - this socket resolved",this);else{const e="[ChannelSocket] - this socket is not resolving (waited 10s) ...";console.warn(e),t(e)}}),1e4)}))}#C=async e=>{const t=e.data;v&&console.log("[ChannelSocket] Received socket message:",t);var n=null;if(j(t,"[ChannelSocket] received empty message"),"string"==typeof t){const e=R(t);if(e||O("L3287","[ChannelSocket] Cannot parse message: "+t),"string"==typeof e)return v&&console.log("[ChannelSocket] Received simple string message, will forward\n",e),void this.onMessage(e);n=e}else t instanceof ArrayBuffer?n=ye(t).payload:t instanceof Blob?n=ye(await t.arrayBuffer()).payload:O("L3594","[ChannelSocket] received unknown message type");if(j(n,"[ChannelSocket] cannot extract message"),n.ready)return void console.log("++++++++ #processMessage: received ready message\n",n);if(n.error)return void console.error("++++++++ #processMessage: received error message\n",n);n=p(n),b&&console.log(Ie,"[ChannelSocket] Received (extracted/validated) socket message:\n",n,"\n",Ie),n.channelId||(n.channelId=this.channelId),j(n.channelId===this.channelId,"[ChannelSocket] received message for wrong channel?"),this.#k&&console.log("[ChannelSocket] Received socket message:",n);const r=$(await crypto.subtle.digest("SHA-256",n.c));v&&console.log("[ChannelSocket] Received message with hash:",r);const a=this.#m.get(r);a&&((v||this.#k)&&console.log(`++++++++ #processMessage: found matching ack for id ${r}`),this.#m.delete(r),a("success"));const s=await this.extractMessage(n);s?(v&&console.log("[ChannelSocket] Repackaged and will deliver 'Message':",s),this.onMessage(s)):v&&console.log("[ChannelSocket] Message could not be parsed, will not deliver")};get ready(){return this.channelSocketReady}get ChannelSocketReadyFlag(){return this[n.ReadyFlag]}get status(){if(!this.#b||!this.#b.websocket)return"CLOSED";switch(this.#b.websocket.readyState){case 0:return"CONNECTING";case 1:return"OPEN";case 2:return"CLOSING";default:return"CLOSED"}}set enableTrace(e){this.#k=e,e&&console.log("==== jslib ChannelSocket: Tracing enabled ====")}async send(e,t){await this.ready;const r=e instanceof _e?e:new _e(this,e,t);return j(this.#b&&this.#b.websocket,"ChannelSocket.send() called before ready"),this.#b.closed&&(this.#k&&console.info("send() triggered reset of #readyPromise() (normal)"),this.channelSocketReady=this.#B(),this[n.ReadyFlag]=!1),new Promise((async(e,n)=>{await r.ready,await this.ready,this.ChannelSocketReadyFlag||n("ChannelSocket.send() is confused - ready or not?");const a=this.#b.websocket.readyState;switch(a){case 1:this.#k&&console.log("++++++++ ChannelSocket.send() will send message:",Object.assign({},r.message));let s=null;if(!0===t?.sendString)s=r.message;else{const t=r.message;s=le(t),j(s,"ChannelSocket.send(): failed to assemble message");const a=$(await crypto.subtle.digest("SHA-256",t.c));(v||this.#k)&&console.log("++++++++ ChannelSocket.send(): Which has hash:",a),this.#m.set(a,e),setTimeout((()=>{if(this.#m.has(a)){this.#m.delete(a);const e=`Websocket request timed out (no ack) after ${this.#b.timeout}ms (${a})`;console.error(e),n(e)}else this.#k&&console.log("++++++++ ChannelSocket.send() completed sending"),e("success")}),this.#b.timeout)}s?this.#b.websocket.send(s):n("ChannelSocket.send(): no message payload (Internal Error)");break;case 0:case 2:case 3:n("socket not OPEN - it is "+(0===a?"CONNECTING":2===a?"CLOSING":"CLOSED"));break;default:O("ChannelSocket",`socket in unknown state (${a})`)}}))}async close(){this.#b&&this.#b.websocket&&(this.#b.websocket.close(),this.#b.closed=!0),this[n.ReadyFlag]=!1}}n=$e,a([function(e,t,n){if(n&&n.value){const e=n.value;n.value=function(...t){for(let e of t){const t=e.constructor.name;"string"==typeof(n=t)&&Be.includes(n)&&j(De(e,t),`invalid parameter: ${e} (expecting ${t})`)}var n;return e.call(this,...t)}}}],$e.prototype,"send",null);class Ne{#K;constructor(e){this.#K=Promise.resolve(e).then((e=>{const t=e;return j("string"==typeof t,"StorageApi() constructor requires a string (for storageServer)"),t}))}async getStorageServer(){return this.#K}static padBuf(e){const t=e.byteLength;let n;n=t+4<4096?4096:t+4<1048576?2**Math.ceil(Math.log2(t+4)):1048576*Math.ceil((t+4)/1048576);let r=F(e,new Uint8Array(n-t).buffer);return new DataView(r).setUint32(n-4,t),b&&console.log("padBuf bytes:",r.slice(-4)),r}#A(e){const t=e.slice(-4);var n=new DataView(t).getUint32(0);const r=new DataView(t).getUint32(0,!0);return r<n&&(b&&console.warn("#unpadData - size of shard encoded as little endian (fixed upon read)"),n=r),b&&console.log(`#unpadData - size of object is ${n}`),e.slice(0,n)}static getObjectKey(e,t){return new Promise(((n,r)=>{try{Ee.importKey("raw",e,"PBKDF2",!1,["deriveBits","deriveKey"]).then((e=>{crypto.subtle.deriveKey({name:"PBKDF2",salt:t,iterations:1e5,hash:"SHA-256"},e,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]).then((e=>{n(e)}))}))}catch(e){r(e)}}))}async storeData(e,t){try{const n=le(e);if(!n)throw new A("[storeData] failed to assemble payload");const a=n.byteLength,s=r.padBuf(n),o=await Ee.generateIdKey(s),i=await this.getStorageServer(),d=i+"/api/v2/storeRequest?id="+X(o.idBinary),y=await T(d);if(!y.salt||!y.iv)throw new A("[storeData] Failed to get key info (salt, nonce) from storage server");const u=X(o.idBinary),g=await r.getObjectKey(o.keyMaterial,y.salt),f=await Ee.encrypt(s,g,{iv:y.iv});let p;if(t instanceof Ue)p=await t.getStorageToken(f.byteLength);else if(h(t))p=await(await new Ue(t).ready).getStorageToken(f.byteLength);else{if(!c(t))throw new A("[storeData] invalid budget source (needs to be a channel, channel handle, or storage token)");p=l(t)}const w=i+"/api/v2/storeData?id="+u,b={method:"POST",headers:{"Content-Type":'application/octet-stream"'},body:le({id:u,iv:y.iv,salt:y.salt,storageToken:p,data:f})},S=await T(w,b),m={[Me]:!0,version:"3",id:u,key:X(o.keyMaterial),iv:y.iv,salt:y.salt,actualSize:a,verification:S.verification,storageServer:i};return v&&console.log("storeData() - success, handle:",m,f),m}catch(e){if(console.error("[storeData] failed:",e),e instanceof A)throw e;throw new A(`[storeData] failed to store data: ${e}`)}}async#P(e,t,n){try{let a=await T(e+t,{method:"GET"});a=function(e){if(e){if("3"===e.version&&"string"==typeof e.id&&43===e.id.length&&z.test(e.id)&&e.iv instanceof Uint8Array&&12===e.iv.byteLength&&e.salt instanceof ArrayBuffer&&16===e.salt.byteLength&&e.data instanceof ArrayBuffer&&e.actualSize===e.data.byteLength)return e;throw new A("invalid Shard")}throw new A("invalid SBObjectHandle (null or undefined)")}(a),j(n.key,"object handle 'key' is missing, cannot decrypt"),n.iv=a.iv,n.salt=a.salt,n.data=new WeakRef(a.data),n.actualSize=a.actualSize,b&&console.log("fetchData(), handle (and data) at this point:",n,a.data);const s=Q(n.key),o=await r.getObjectKey(s,n.salt),i=await crypto.subtle.decrypt({name:"AES-GCM",iv:n.iv},o,a.data),c=this.#A(i);return b&&console.log("shard.data (decrypted and unpadded):",c),n.payload=ye(c).payload,n.data=new WeakRef(a.data),n}catch(t){return v&&console.log(`fetchData(): trying to get object on '${e}' failed: '${t}'`),null}}async fetchData(e){const t=B(e);if(v&&console.log("fetchData(), handle:",t),t.data&&t.data instanceof WeakRef&&t.data.deref())return t;const n=await t.verification,r=t.storageServer?t.storageServer:null,a=await this.getStorageServer();for(const e of[r,"http://localhost:3841",a]){if(!e)continue;v&&console.log("\n",Ie,"fetchData(), trying server: ",e,"\n",Ie);const r="/api/v2/fetchData?id="+t.id+"&verification="+n,a=await this.#P(e,r,t);if(null!==a)return v&&console.log(`[fetchData] success: fetched from '${e}'`,a),a.storageServer=e,a}throw new A("[fetchData] failed to fetch from any server")}static getData(e){const t=B(e);if(t.data){if(t.data instanceof WeakRef){return t.data.deref()||void 0}if(t.data instanceof ArrayBuffer)return t.data;throw new A("Invalid data type in handle")}}static getPayload(e){const t=B(e);if(t.payload)return t.payload;const n=r.getData(t);if(!n)throw new A("[getPayload] no data or payload in handle, use fetchData()");return ye(n).payload}}r=Ne,a([Se],Ne.prototype,"getStorageServer",null);const He={channelServer:""};class Ge{#M;#R;#D=s;#E;constructor(e,t){console.warn(`==== CREATING Snackabra object generation: ${this.#D} ====`),j("string"==typeof e,"[Snackabra] Takes channel server URL as parameter"),He.channelServer=e,"boolean"==typeof t&&(t={DEBUG:t}),t&&t.DEBUG&&!0===t.DEBUG&&(v=!0),t&&v&&t.DEBUG2&&!0===t.DEBUG2&&(b=!0),v&&console.warn("++++ Snackabra constructor: setting DBG to TRUE ++++"),b&&console.warn("++++ Snackabra constructor: ALSO setting DBG2 to TRUE (verbose) ++++"),t&&t.sbFetch&&(console.log("++++ Snackabra constructor: setting custom fetch function ++++",t.sbFetch),x=t.sbFetch),this.#M=e,this.#R=new Ne(new Promise(((e,t)=>{x(this.#M+"/api/v2/info").then((e=>(e.ok||t("response from channel server was not OK"),e.json()))).then((n=>{n.error?t(`fetching storage server name failed: ${n.error}`):(this.#E=n,v&&console.log("Channel server info:",this.#E)),j(n.storageServer,"Channel server did not provide storage server name, cannot initialize"),e(n.storageServer)})).catch((e=>{t(e)}))})))}static get defaultChannelServer(){const e=He.channelServer;if(e.length>0)return e;throw new A("No default channel server; you need to have 'new Snackabra(...)' somewhere.")}async getPage(e){return v&&console.log(`==== Snackabra.getPage: calling fetch with: ${e}`),ye(await T(this.#M+"/api/v2/page/"+e))}create(e){return j(null!==e,"[create channel] Invalid parameter (null)"),new Promise((async(t,n)=>{try{var r;if(e instanceof Ue){const t=e;await t.ready,t.channelServer||(t.channelServer=this.#M),r=await t.getStorageToken(o)}else try{r=l(e)}catch(e){return void n("Invalid parameter to create() - need a token or a budget channel")}j(r,"[create channel] Failed to get storage token for the provided channel");const a=await(new Ue).ready;a.channelServer=this.#M,a.create(r).then((e=>{t(e.handle)})).catch((e=>{n(e)}))}catch(e){const t=`Creating channel did not succeed: ${e}`;console.error(t),n(t)}}))}connect(e,t){let n;if(n="string"==typeof e?{userPrivateKey:e}:e,j(n&&n.userPrivateKey,"[Snackabra.connect] Invalid parameter (at least need owner private key)"),n.channelServer&&n.channelServer!==this.#M)throw new A(`[Snackabra.connect] channel server in handle ('${n.channelServer}') does not match what SB was set up with ('${this.#M}')`);return n.channelServer||(n.channelServer=this.#M),v&&console.log("++++ Snackabra.connect() ++++",n),t?new $e(n,t):new Ue(n)}get storage(){return this.#R}async getStorageServer(){return this.#R.getStorageServer()}get crypto(){return Ee}get version(){return this.#D}}a([Se],Ge.prototype,"storage",null),a([Se],Ge.prototype,"getStorageServer",null);var ze={Snackabra:Ge,SBMessage:_e,Channel:Ue,SBCrypto:be,SB384:Te,arrayBufferToBase64url:$,base64ToArrayBuffer:N,arrayBufferToBase62:X,base62ToArrayBuffer:Q,sbCrypto:Ee,version:s,setDebugLevel:S};return globalThis.SB||(globalThis.SB=ze),console.warn(`==== SNACKABRA jslib (re)loaded, version '${globalThis.SB.version}' ====`),t})()));