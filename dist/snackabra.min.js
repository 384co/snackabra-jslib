!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.SB=t():e.SB=t()}(self,(()=>(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{Channel:()=>le,ChannelEndpoint:()=>ye,ChannelSocket:()=>de,MessageBus:()=>a,SB:()=>we,SB384:()=>ie,SBCrypto:()=>Y,SBMessage:()=>ce,SBObjectHandle:()=>ue,Snackabra:()=>fe,_appendBuffer:()=>U,_assertBase64:()=>w,_sb_assert:()=>d,_sb_exception:()=>l,_sb_resolve:()=>h,arrayBuffer32ToBase62:()=>T,arrayBufferToBase64:()=>B,assemblePayload:()=>q,base62ToArrayBuffer32:()=>I,base62ToBase64:()=>D,base64ToArrayBuffer:()=>_,base64ToBase62:()=>N,cleanBase32mi:()=>J,compareBuffers:()=>M,decodeB64Url:()=>X,encodeB64Url:()=>Z,encryptedContentsMakeBinary:()=>g,extractPayload:()=>W,extractPayloadV1:()=>z,getRandomValues:()=>u,isBase62Encoded:()=>L,jsonParseWrapper:()=>V,partition:()=>G,sbCrypto:()=>oe,simpleRand256:()=>$,simpleRandomString:()=>F,version:()=>r});var n=function(e,t,n,r){var s,o=arguments.length,a=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(a=(o<3?s(a):o>3?s(t,n,a):s(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a};const r="1.1.22 build 015 (pre)";var s=!1,o=!1;class a{bus={};#e(e){return this.bus[e]||(this.bus[e]=[])}subscribe(e,t){this.#e(e).push(t)}unsubscribe(e,t){let n=-1;this.bus[e]?-1!=(n=this.bus[e].findLastIndex((e=>e==t)))?this.bus[e].splice(n,1):console.info("fyi: asked to remove a handler but it's not there"):console.info("fyi: asked to remove a handler but the event is not there")}publish(e,...t){for(const n of this.#e("*"))n(e,...t);for(const n of this.#e(e))n(...t)}}function i(e,t){return t?fetch(e,t):fetch(e,{method:"GET"})}function c(e){return e instanceof Error?e:new Error(String(e))}function l(e,t){throw new Error("<< SB lib error ("+e+": "+t+") >>")}function h(e){return e.then?e:new Promise((t=>t(e)))}function d(e,t){if(!e)throw new Error(`<< SB assertion error: ${t} >>`)}async function y(e){const t=new ie(e);await t.ready;const n=t.exportable_pubKey,r=t.exportable_privateKey,s=t.ownerChannelId,o=await crypto.subtle.generateKey({name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),a=await crypto.subtle.exportKey("jwk",o),i=await crypto.subtle.generateKey({name:"ECDH",namedCurve:"P-384"},!0,["deriveKey"]),c=await crypto.subtle.exportKey("jwk",i.privateKey);return{channelData:{roomId:s,ownerKey:JSON.stringify(n),encryptionKey:JSON.stringify(a),signKey:JSON.stringify(c)},exportable_privateKey:r}}function g(e){try{let t,n;if(o&&(console.log("=+=+=+=+ processing content"),console.log(e.content.constructor.name)),"string"==typeof e.content)try{t=_(decodeURIComponent(e.content))}catch(e){throw new Error("EncryptedContents is string format but not base64 (?)")}else{const n=e.content.constructor.name;d("ArrayBuffer"===n||"Uint8Array"===n,"undetermined content type in EncryptedContents object"),t=e.content}if(o&&console.log("=+=+=+=+ processing nonce"),"string"==typeof e.iv)o&&(console.log("got iv as string:"),console.log(structuredClone(e.iv))),n=_(decodeURIComponent(e.iv)),o&&(console.log("this was turned into array:"),console.log(structuredClone(n)));else if("Uint8Array"===e.iv.constructor.name||"ArrayBuffer"===e.iv.constructor.name)o&&console.log("it's an array already"),n=new Uint8Array(e.iv);else{o&&console.log("probably a dictionary");try{n=new Uint8Array(Object.values(e.iv))}catch(t){s&&(console.error("ERROR: cannot figure out format of iv (nonce), here's the input object:"),console.error(e.iv)),d(!1,"undetermined iv (nonce) type, see console")}}return o&&(console.log("decided on nonce as:"),console.log(n)),d(12==n.length,`unwrap(): nonce should be 12 bytes but is not (${n.length})`),{content:t,iv:n}}catch(e){throw console.error("encryptedContentsMakeBinary() failed:"),console.error(e),console.trace(),console.log(e.stack),e}}function u(e){if(e.byteLength<4096)return crypto.getRandomValues(e);{d(!(e.byteLength%1024),"getRandomValues(): large requested blocks must be multiple of 1024 in size");let t=0;try{for(t=0;t<e.byteLength;t+=1024){let n=new Uint8Array(1024);crypto.getRandomValues(n),e.set(n,t)}}catch(e){console.log(`got an error on index i=${t}`),console.log(e),console.trace()}return e}}const p=/([A-Za-z0-9+/_\-=]{64})([01]{42})/,f=/^([A-Za-z0-9+/_\-=]*)$/;function w(e){const t=f.exec(e);return!!t&&t[0]===e}function b(e){const t=f.exec(e);return d(t&&t[0]===e,"ensureSafe() tripped: something is not URI safe"),e}const m=[],v=[],k=[],S="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",K=S+"+/",C=S+"-_",A="=",E=16383;for(let e=0,t=K.length;e<t;++e)m[e]=K[e],v[e]=C[e],k[K.charCodeAt(e)]=e;function _(e){if(!w(e))throw new Error(`invalid character in string '${e}'`);let t;switch(e.length%4){case 2:e+="==";break;case 3:e+="="}const[n,r]=function(e){const t=e.length;let n=e.indexOf(A);return-1===n&&(n=t),[n,n===t?0:4-n%4]}(e),s=new Uint8Array(function(e,t){return 3*(e+t)/4-t}(n,r));let o=0;const a=r>0?n-4:n;let i;for(i=0;i<a;i+=4)t=k[e.charCodeAt(i)]<<18|k[e.charCodeAt(i+1)]<<12|k[e.charCodeAt(i+2)]<<6|k[e.charCodeAt(i+3)],s[o++]=t>>16&255,s[o++]=t>>8&255,s[o++]=255&t;return 2===r&&(t=k[e.charCodeAt(i)]<<2|k[e.charCodeAt(i+1)]>>4,s[o++]=255&t),1===r&&(t=k[e.charCodeAt(i)]<<10|k[e.charCodeAt(i+1)]<<4|k[e.charCodeAt(i+2)]>>2,s[o++]=t>>8&255,s[o++]=255&t),s}function O(e,t){return e[t>>18&63]+e[t>>12&63]+e[t>>6&63]+e[63&t]}function R(e,t,n,r){let s;const o=new Array((r-n)/3);for(let a=n,i=0;a<r;a+=3,i++)s=(t.getUint8(a)<<16&16711680)+(t.getUint8(a+1)<<8&65280)+(255&t.getUint8(a+2)),o[i]=O(e,s);return o.join("")}k["-".charCodeAt(0)]=62,k["_".charCodeAt(0)]=63;const j=e=>e instanceof ArrayBuffer?new DataView(e):new DataView(e.buffer,e.byteOffset,e.byteLength);function M(e,t){if(typeof e!=typeof t)return!1;if(null==e||null==t)return!1;const n=j(e),r=j(t);if(n.byteLength!==r.byteLength)return!1;for(let e=0;e<n.byteLength;e++)if(n.getUint8(e)!==r.getUint8(e))return!1;return!0}function B(e,t="url"){if(null==e)return l("L509","arrayBufferToBase64() -> null paramater"),"";{const n=j(e),r=n.byteLength,s=r%3,o=r-s,a=new Array(Math.floor(o/E)+Math.sign(s)),i="url"==t?v:m,c="";let l=0;for(let e=0;e<o;e+=E)a[l++]=R(i,n,e,e+E>o?o:e+E);if(1===s){const e=n.getUint8(r-1);a[l]=i[e>>2]+i[e<<4&63]+c+c}else if(2===s){const e=(n.getUint8(r-2)<<8)+n.getUint8(r-1);a[l]=i[e>>10]+i[e>>4&63]+i[e<<2&63]+c}return a.join("")}}const P="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",x=/^(a32\.)?[0-9A-Za-z]{43}$/;function I(e){if(!x.test(e))throw new Error(`base62ToArrayBuffer32: string must match: ${x}`);e=e.slice(4);let t=0n;for(let n=0;n<e.length;n++)t=62n*t+BigInt(P.indexOf(e[n]));if(t>2n**256n-1n)throw new Error("base62ToArrayBuffer32: value exceeds 256 bits.");const n=new ArrayBuffer(32),r=new DataView(n);for(let e=0;e<8;e++){const n=Number(BigInt.asUintN(32,t));r.setUint32(4*(8-e-1),n),t>>=32n}return n}function T(e){if(32!==e.byteLength)throw new Error("arrayBuffer32ToBase62: buffer must be exactly 32 bytes (256 bits).");let t="";for(let n=BigInt("0x"+Array.from(new Uint8Array(e)).map((e=>e.toString(16).padStart(2,"0"))).join(""));n>0n;n/=62n)t=P[Number(n%62n)]+t;return"a32."+t.padStart(43,"0")}function D(e){return B(I(e))}function N(e){return T(_(e))}function L(e){return x.test(e)}function U(e,t){const n=new Uint8Array(e.byteLength+t.byteLength);return n.set(new Uint8Array(e),0),n.set(new Uint8Array(t),e.byteLength),n.buffer}function $(){return crypto.getRandomValues(new Uint8Array(1))[0]}const H="0123456789abcdefyhEjkLmNHpFrRTUW";function F(e,t){if("base32mi"==t){const t=crypto.getRandomValues(new Uint8Array(e));let n="";for(let r=0;r<e;r++)n+=H[31&t[r]];return n}return l("simpleRandomString","code "+t+" not supported"),""}function J(e){return e.replace(/[OoQD]/g,"0").replace(/[lIiJ]/g,"1").replace(/[Zz]/g,"2").replace(/[A]/g,"4").replace(/[Ss]/g,"5").replace(/[G]/g,"6").replace(/[t]/g,"7").replace(/[B]/g,"8").replace(/[gq]/g,"9").replace(/[C]/g,"c").replace(/[Y]/g,"y").replace(/[KxX]/g,"k").replace(/[M]/g,"m").replace(/[n]/g,"N").replace(/[P]/g,"p").replace(/[uvV]/g,"U").replace(/[w]/g,"w")}function G(e,t){throw`partition() not tested on TS yet - (${e}, ${t})`}function V(e,t){if(null==e)return null;try{return JSON.parse(e)}catch(n){try{let t="",n="",r=e;for(;r!=(n=t,t=r,r=r?.match(/^(['"])(.*)\1$/m)?.[2]);)return JSON.parse(`'${n}'`)}catch{try{return JSON.parse(e.slice(1,-1))}catch{throw new Error(`JSON.parse() error at ${t} (tried eval and slice)\nString was: ${e}`)}}}}function z(e){try{const t=new Uint32Array(e.slice(0,4))[0],n=V((new TextDecoder).decode(e.slice(4,4+t)),"L476");let r=4+t;const s={};for(const t in n)s.key&&(s[t]=e.slice(r,r+n[t]),r+=n[t]);return s}catch(e){return console.error(e),{}}}function q(e){try{const t={version:"002"};let n=0,r=0;for(const s in e)n++,t[n.toString()]={name:s,start:r,size:e[s].byteLength},r+=e[s].byteLength;const s=(new TextEncoder).encode(JSON.stringify(t)),o=new Uint32Array([s.byteLength]);let a=U(new Uint8Array(o.buffer),new Uint8Array(s));for(const t in e)a=U(new Uint8Array(a),e[t]);return a}catch(e){return console.error(e),null}}function W(e){try{const t=new Uint32Array(e.slice(0,4))[0],n=V((new TextDecoder).decode(e.slice(4,4+t)),"L533"),r=4+t;switch(n.version||(n.version="001"),n.version){case"001":return z(e);case"002":{const t=[];for(let s=1;s<Object.keys(n).length;s++){const o=s.toString();if(n[o]){const s=n[o].start,a=n[o].size;t[n[o].name]=e.slice(r+s,r+s+a)}else console.log(`found nothing for index ${s}`)}return t}default:throw new Error("Unsupported payload version ("+n.version+") - fatal")}}catch(e){throw new Error("extractPayload() exception ("+e+")")}}function Z(e){return e.replaceAll("+","-").replaceAll("/","_")}function X(e){const t=(e=e.replaceAll("-","+").replaceAll("_","/")).length%4;if(t){if(1===t)throw new Error("InvalidLengthError: Input base64url string is the wrong length to determine padding");e+=new Array(5-t).join("=")}return e}class Y{generateIdKey(e){return new Promise(((t,n)=>{try{crypto.subtle.digest("SHA-512",e).then((e=>{const n=e.slice(0,32),r=e.slice(32);t({id:B(n),key:B(r)})}))}catch(e){n(e)}}))}extractPubKey(e){try{const t={...e};return delete t.d,delete t.dp,delete t.dq,delete t.q,delete t.qi,t.key_ops=[],t}catch(e){return console.error(e),null}}async#t(e){const t=/^[0-9A-Za-z]+$/;let n=0,r=B(e);for(;!t.test(r);){if(n++>160)throw new Error("generateChannelHash() - exceeded 160 iterations:");r=B(e=await crypto.subtle.digest("SHA-384",e))}return B(e)}async#n(e,t){let n=0,r=B(e);for(;r!==t;){if(n++>160)return!1;r=B(e=await crypto.subtle.digest("SHA-384",e))}return!0}async generateChannelId(e){if(e&&e.x&&e.y){const t=U(_(X(e.x)),_(X(e.y)));return await this.#t(t)}return"InvalidJsonWebKey"}async verifyChannelId(e,t){if(e){let n=e.x,r=e.y;if(!n||!r)try{const t=JSON.parse(e);t.x&&(n=t.x),t.y&&(r=t.y)}catch{return!1}const s=U(_(X(n)),_(X(r)));return await this.#n(s,t)}return!1}generateKeys(){return new Promise((async(e,t)=>{try{e(await crypto.subtle.generateKey({name:"ECDH",namedCurve:"P-384"},!0,["deriveKey"]))}catch(e){t(e)}}))}importKey(e,t,n,r,s){const o={ECDH:{name:"ECDH",namedCurve:"P-384"},AES:{name:"AES-GCM"},PBKDF2:"PBKDF2"};return"jwk"===e?crypto.subtle.importKey("jwk",t,o[n],r,s):crypto.subtle.importKey(e,t,o[n],r,s)}exportKey(e,t){return crypto.subtle.exportKey(e,t)}deriveKey(e,t,n,r,s){return new Promise((async(o,a)=>{const i={AES:{name:"AES-GCM",length:256},HMAC:{name:"HMAC",hash:"SHA-256",length:256}};try{o(await crypto.subtle.deriveKey({name:"ECDH",public:t},e,i[n],r,s))}catch(o){console.error(o,e,t,n,r,s),a(o)}}))}encrypt(e,t,n,r="encryptedContents"){return new Promise((async(s,o)=>{try{null===e&&o(new Error("no contents"));const a=n&&null!==n?n:crypto.getRandomValues(new Uint8Array(12));"string"==typeof e&&(e=(new TextEncoder).encode(e));const i=await crypto.subtle.encrypt({name:"AES-GCM",iv:a},t,e);s("encryptedContents"===r?{content:b(B(i)),iv:b(B(a))}:i)}catch(e){o(e)}}))}wrap(e,t,n){return new Promise((r=>{let s;s="string"===n?oe.str2ab(t):t,oe.encrypt(s,e).then((e=>{r(e)}))}))}unwrap(e,t,n){return new Promise((async(r,s)=>{try{const{content:s,iv:o}=g(t),a=await crypto.subtle.decrypt({name:"AES-GCM",iv:o},e,s);"string"===n?r((new TextDecoder).decode(a)):"arrayBuffer"===n&&r(a)}catch(e){console.error(`unwrap(): unknown issue - rejecting: ${e}`),console.trace(),s(e)}}))}sign(e,t){return new Promise((async(n,r)=>{try{const s=(new TextEncoder).encode(t);let o;try{o=await crypto.subtle.sign("HMAC",e,s),n(b(B(o)))}catch(e){r(e)}}catch(e){r(e)}}))}verify(e,t,n){return new Promise(((r,s)=>{try{crypto.subtle.verify("HMAC",e,_(t),oe.str2ab(n)).then((e=>{r(e)}))}catch(e){s(c(e))}}))}str2ab(e){return(new TextEncoder).encode(e)}ab2str(e){return new TextDecoder("utf-8").decode(e)}compareKeys(e,t){return null!=e&&null!=t&&"object"==typeof e&&"object"==typeof t&&e.x===t.x&&e.y===t.y}lookupKey(e,t){for(let n=0;n<t.length;n++)if(oe.compareKeys(e,t[n]))return n;return-1}async channelKeyStringsToCryptoKeys(e){return new Promise((async(t,n)=>{let r=V(e.ownerKey,"L1513");Promise.all([oe.importKey("jwk",r,"ECDH",!1,[]),oe.importKey("jwk",V(e.encryptionKey,"L2250"),"AES",!1,["encrypt","decrypt"]),oe.importKey("jwk",V(e.signKey,"L2251"),"ECDH",!0,["deriveKey"]),oe.importKey("jwk",oe.extractPubKey(V(e.signKey,"L2252")),"ECDH",!0,[])]).then((async e=>{s&&console.log("++++++++ readyPromise() processed first batch of keys");const n=e[0],o=e[1],a=e[2],i=e[3];t({ownerKey:n,ownerPubKeyX:r.x,encryptionKey:o,signKey:a,publicSignKey:i})})).catch((e=>{console.error(`readyPromise(): failed to import keys: ${e}`),n(e)}))}))}}function Q(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=`__${e.constructor.name}__${t}__`;if(this.hasOwnProperty(n))return this[n];{const e=r.call(this);return Object.defineProperty(this,n,{configurable:!1,enumerable:!1,writable:!1,value:e}),e}}}}function ee(e,t,n){if(n&&n.get){let r=n.get;n.get=function(){const n=e.constructor.name;`${n}ReadyFlag`in this&&d(this.readyFlag,`${t} getter accessed but object ${n} not ready (fatal)`);const s=r.call(this);return d(null!=s,`${t} getter accessed in object type ${n} but returns NULL (fatal)`),s}}}const te=["SBMessage","SBObjectHandle"],ne=Symbol.for("SBMessage"),re=Symbol.for("SBObjectHandle");function se(e,t){switch(t){case"SBMessage":return ne in e;case"SBObjectHandle":return re in e}}const oe=new Y,ae=[{channel_server:"https://channel.384co.workers.dev",channel_ws:"wss://channel.384co.workers.dev",storage_server:"https://storage.384co.workers.dev",shard_server:"https://shard.3.8.4.land"},{channel_server:"https://r.384co.workers.dev",channel_ws:"wss://r.384co.workers.dev",storage_server:"https://s.384co.workers.dev"}];class ie{ready;sb384Ready;#r=!1;#s;#o;#a;#i;constructor(e){this.ready=new Promise((async(t,n)=>{try{if(e){this.#o=e;const t=oe.extractPubKey(e);d(t,"unable to extract public key"),this.#s=t,this.#a=await oe.importKey("jwk",e,"ECDH",!0,["deriveKey"])}else{const e=await oe.generateKeys();this.#a=e.privateKey;const t=await Promise.all([oe.exportKey("jwk",e.publicKey),oe.exportKey("jwk",e.privateKey)]);this.#s=t[0],this.#o=t[1]}this.#i=await oe.generateChannelId(this.#s),this.#r=!0,t(this)}catch(e){n("ERROR creating SB384 object: "+c(e))}})),this.sb384Ready=this.ready}get readyFlag(){return this.#r}get exportable_pubKey(){return this.#s}get exportable_privateKey(){return this.#o}get privateKey(){return this.#a}get _id(){return JSON.stringify(this.exportable_pubKey)}get ownerChannelId(){return this.#i}}n([Q],ie.prototype,"readyFlag",null),n([Q,ee],ie.prototype,"exportable_pubKey",null),n([Q,ee],ie.prototype,"exportable_privateKey",null),n([Q,ee],ie.prototype,"privateKey",null),n([Q,ee],ie.prototype,"_id",null),n([Q,ee],ie.prototype,"ownerChannelId",null);class ce{ready;channel;contents;[ne]=!0;MAX_SB_BODY_SIZE=98304;constructor(e,t=""){this.contents="string"==typeof t?{encrypted:!1,isVerfied:!1,contents:t,sign:"",image:"",imageMetaData:{}}:{encrypted:!1,isVerfied:!1,contents:"",sign:"",image:t.image,imageMetaData:t.imageMetaData};let n=this.contents,r=JSON.stringify(n);d(r.length<this.MAX_SB_BODY_SIZE,`SBMessage(): body must be smaller than ${this.MAX_SB_BODY_SIZE/1024} KiB (we got ${r.length/1024})})`),this.channel=e,this.ready=new Promise((t=>{e.channelReady.then((async()=>{this.contents.sender_pubKey=this.channel.exportable_pubKey,e.userName&&(this.contents.sender_username=e.userName);const r=this.channel.channelSignKey,s=oe.sign(r,n.contents),o=oe.sign(r,this.contents.image),a=oe.sign(r,JSON.stringify(this.contents.imageMetaData));Promise.all([s,o,a]).then((e=>{this.contents.sign=e[0],this.contents.image_sign=e[1],this.contents.imageMetadata_sign=e[2],t(this)}))}))}))}send(){return new Promise(((e,t)=>{this.ready.then((()=>{this.channel.send(this).then((n=>{"success"===n?e(n):t(n)}))}))}))}}class le extends ie{channelReady;#c=!1;#l;motd="";locked=!1;owner=!1;admin=!1;adminData;verifiedGuest=!1;userName="";#h;#d;#y;#g="";#u="";#p="";constructor(e,t,n){d(n,"Channel(): as of jslib 1.1.x the channelId must be provided"),super(t),this.#l=e,this.#y=n,this.#u=e.channel_server+"/api/",this.#p=e.channel_server+"/api/room/",this.channelReady=new Promise((async(e,t)=>{await this.sb384Ready,i(this.#l.channel_server+"/api/room/"+this.#y+"/getChannelKeys",{method:"GET",headers:{"Content-Type":"application/json"}}).then((e=>(e.ok||t("ChannelEndpoint(): failed to get channel keys (network response not ok)"),e.json()))).then((async n=>{n.error&&t("ChannelEndpoint(): failed to get channel keys (error in response)"),await this.#f(n),this.#c=!0,e(this)})).catch((e=>{t("ChannelApi Error [1]: "+c(e))}))}))}async#w(e){this.#h=e,console.log("set channelkeys to 'k':"),console.log(e),d(this.#h,"Channel.importKeys: no channel keys (?)"),d(this.#h.publicSignKey,"Channel.importKeys: no public sign key (?)"),d(this.privateKey,"Channel.importKeys: no private key (?)"),this.#d=await oe.deriveKey(this.privateKey,this.#h.publicSignKey,"HMAC",!1,["sign","verify"])}async#f(e){console.log("loading keys:"),console.log(e),await this.#w(await oe.channelKeyStringsToCryptoKeys(e))}get keys(){return this.#h}get sbServer(){return this.#l}get readyFlag(){return this.#c}get api(){return this}get channelId(){return this.#y}get channelSignKey(){return this.#d}getLastMessageTimes(){return new Promise(((e,t)=>{i(this.#u+"/getLastMessageTimes",{method:"POST",body:JSON.stringify([this.channelId])}).then((e=>(e.ok||t(new Error("Network response was not OK")),e.json()))).then((t=>{e(t[this.channelId])})).catch((e=>{t(e)}))}))}getOldMessages(e=100,t=!1){return new Promise((async(n,r)=>{this.#c||(console.log("Channel.getOldMessages: channel not ready (we will wait)"),await this.channelReady,this.#h||r("Channel.getOldMessages: no channel keys (?) despite waiting"));let s="";t&&(s="&cursor="+this.#g),i(this.#p+this.channelId+"/oldMessages?currentMessagesLength="+e+s,{method:"GET"}).then((async e=>(e.ok||r(new Error("Network response was not OK")),e.json()))).then((e=>{console.log("getOldMessages"),console.log(e),Promise.all(Object.keys(e).filter((t=>e[t].hasOwnProperty("encrypted_contents"))).map((t=>ge(t,e[t].encrypted_contents,this.#h)))).then((e=>{let t=e[e.length-1];t&&(this.#g=t._id||t.id||""),console.log(e),n(e)}))})).catch((e=>{r(e)}))}))}async#b(e,t){s&&console.log("#callApi:",e),this.#c||(console.log("ChannelApi.#callApi: channel not ready (we will wait)"),await this.channelReady);const n=t?"POST":"GET";return new Promise((async(r,s)=>{await this.ready;let o="";const a=(new Date).getTime().toString();o=a+"."+await oe.sign(this.channelSignKey,a);let l={method:n,headers:{"Content-Type":"application/json",authorization:o}};t&&(l.body=JSON.stringify(t)),await this.ready,i(this.#p+this.channelId+e,l).then((async e=>{const t=await e.json();if(!e.ok||t.error){let n="Network or Server error on Channel API call";e.status&&(n+=" ["+e.status+"]"),t.error&&(n+=": "+t.error),s(new Error(n))}else r(t)})).catch((e=>{s("ChannelApi (SBFetch) Error [2]: "+c(e))}))}))}updateCapacity(e){return this.#b("/updateRoomCapacity?capacity="+e)}getCapacity(){return this.#b("/getRoomCapacity")}getStorageLimit(){return this.#b("/getStorageLimit")}getMother(){return this.#b("/getMother")}getJoinRequests(){return this.#b("/getJoinRequests")}isLocked(){return new Promise((e=>this.#b("/roomLocked").then((t=>e(!0===t.locked)))))}setMOTD(e){return this.#b("/motd",{motd:e})}getAdminData(){return this.#b("/getAdminData")}downloadData(){return new Promise(((e,t)=>{this.#b("/downloadData").then((e=>e.json())).then((t=>{Promise.all(Object.keys(t).filter((e=>{const n=new RegExp(this.channelId);if(e.match(n)){const n=V(t[e],"L3318");if(n.hasOwnProperty("encrypted_contents"))return s&&console.log("Received message: ",n),n}})).map((e=>{const n=V(t[e],"L3327");return o&&console.log(e,n.encrypted_contents,this.keys),ge(e,n.encrypted_contents,this.keys)}))).then((n=>{let r={};n.forEach((e=>{if(!e.control&&e.imageMetaData.imageId){const t=n.find((t=>t.id&&t.id==e.imageMetaData.imageId)),s=n.find((t=>t.id&&t.id==e.imageMetaData.previewId));r[`${e.imageMetaData.imageId}.f`]=t?.verificationToken,r[`${e.imageMetaData.previewId}.p`]=s?.verificationToken}})),e({storage:r,channel:t})}))})).catch((e=>{t(e)}))}))}uploadChannel(e){return this.#b("/uploadRoom",e)}authorize(e,t){return this.#b("/authorizeRoom",{roomId:this.channelId,SERVER_SECRET:t,ownerKey:e})}postPubKey(e){throw new Error("postPubKey() deprecated")}storageRequest(e){return this.#b("/storageRequest?size="+e)}lock(){return console.trace("WARNING: lock() on channel api has not been tested/debugged fully .."),new Promise((async(e,t)=>{if(null==this.keys.lockedKey&&this.admin){const n=await crypto.subtle.generateKey({name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),r=await crypto.subtle.exportKey("jwk",n);this.#b("lockRoom").then((t=>{t.locked&&this.acceptVisitor(JSON.stringify(this.exportable_pubKey)).then((()=>{e({locked:t.locked,lockedKey:r})}))})).catch((e=>{t(e)}))}else t(new Error("no lock key or not admin"))}))}acceptVisitor(e){return console.warn("WARNING: acceptVisitor() on channel api has not been tested/debugged fully .."),new Promise((async(t,n)=>{this.keys.privateKey||n(new Error("acceptVisitor(): no private key"));const r=await oe.deriveKey(this.keys.privateKey,await oe.importKey("jwk",V(e,"L2276"),"ECDH",!1,[]),"AES",!1,["encrypt","decrypt"]),s=await oe.encrypt(oe.str2ab(JSON.stringify(this.keys.lockedKey)),r);t(this.#b("/acceptVisitor",{pubKey:e,lockedKey:JSON.stringify(s)}))}))}ownerKeyRotation(){throw new Error("ownerKeyRotation() replaced by new budd() approach")}budd(e){let{keys:t,storage:n,targetChannel:r}=e??{};return new Promise((async(e,s)=>{try{if(n||(n=1/0),r){if(this.#y==r)throw new Error("[budd()]: You can't specify the same channel as targetChannel");if(t)throw new Error("[budd()]: You can't specify both a target channel and keys");e(this.#b(`/budd?targetChannel=${r}&transferBudget=${n}`))}else{const{channelData:r,exportable_privateKey:o}=await y(t);let a=await this.#b(`/budd?targetChannel=${r.roomId}&transferBudget=${n}`,r);a.success?e({channelId:r.roomId,key:o}):s(JSON.stringify(a))}}catch(e){s(e)}}))}}function he(e){d(!1,"NO MESSAGE HANDLER")}n([Q,ee],le.prototype,"keys",null),n([Q,ee],le.prototype,"sbServer",null),n([Q,ee],le.prototype,"readyFlag",null),n([Q,ee],le.prototype,"api",null),n([Q,ee],le.prototype,"channelId",null),n([Q,ee],le.prototype,"channelSignKey",null),n([ee],le.prototype,"updateCapacity",null),n([ee],le.prototype,"getCapacity",null),n([ee],le.prototype,"getStorageLimit",null),n([ee],le.prototype,"getMother",null),n([ee],le.prototype,"getJoinRequests",null),n([function(e,t,n){if(n&&n.value){const r=n.value;n.value=function(...s){try{return r.call(this,...s)}catch(r){return console.log(`ExceptionReject: ${c(r)}`),console.log(e),console.log(t),console.log(n),new Promise(((e,t)=>t(`Reject: ${c(r)}`)))}}}}],le.prototype,"isLocked",null),n([ee],le.prototype,"setMOTD",null),n([ee],le.prototype,"getAdminData",null),n([ee],le.prototype,"downloadData",null),n([ee],le.prototype,"uploadChannel",null),n([ee],le.prototype,"authorize",null),n([ee],le.prototype,"postPubKey",null),n([ee],le.prototype,"storageRequest",null),n([ee],le.prototype,"lock",null),n([ee],le.prototype,"acceptVisitor",null),n([ee],le.prototype,"ownerKeyRotation",null),n([ee],le.prototype,"budd",null);class de extends le{ready;channelSocketReady;#m=!1;#v;#l;#k=he;#S=new Map;#K=!1;#C=()=>{l("L2461","this should never be called")};#A=e=>{l("L2462","this should never be called")};constructor(e,t,n,r){super(e,n,r),d(e.channel_ws,"ChannelSocket(): no websocket server name provided"),d(t,"ChannelSocket(): no onMessage handler provided");const s=e.channel_ws+"/api/room/"+r+"/websocket";this.#k=t,this.#l=e,this.#v={url:s,ready:!1,closed:!1,timeout:2e3},this.ready=this.channelSocketReady=this.#E()}#E(){return console.log("++++ CREATING ChannelSocket.readyPromise()"),new Promise(((e,t)=>{console.log("++++ STARTED ChannelSocket.readyPromise()"),this.#C=e;const n=this.#v.url;s&&(console.log("++++++++ readyPromise() has url:"),console.log(n)),this.#v.websocket||(this.#v.websocket=new WebSocket(this.#v.url)),3===this.#v.websocket.readyState?this.#v.websocket=new WebSocket(n):2===this.#v.websocket.readyState&&(console.warn("STRANGE - trying to use a ChannelSocket that is in the process of closing ..."),this.#v.websocket=new WebSocket(n)),this.#v.websocket.addEventListener("open",(()=>{this.#v.closed=!1,this.channelReady.then((()=>{d(this.exportable_pubKey,"ChannelSocket.readyPromise(): no exportable pub key?"),this.#v.init={name:JSON.stringify(this.exportable_pubKey)},s&&(console.log("++++++++ readyPromise() constructed init:"),console.log(this.#v.init)),this.#v.websocket.send(JSON.stringify(this.#v.init))}))})),this.#A=this.#_.bind(this),this.#v.websocket.addEventListener("message",this.#A),this.#v.websocket.addEventListener("close",(e=>{this.#v.closed=!0,e.wasClean?e.reason.includes("does not have an owner")?t(`No such channel on this server (${this.#l.channel_server})`):console.log("ChannelSocket() was closed (cleanly): ",e.reason):console.log(`ChannelSocket() was closed (and NOT cleanly: ${e.reason} from ${this.#l.channel_server}`),t("wbSocket() closed before it was opened (?)")})),this.#v.websocket.addEventListener("error",(e=>{this.#v.closed=!0,console.log("ChannelSocket() error: ",e),t("ChannelSocket creation error (see log)")})),setTimeout((()=>{this.#m?(console.log("ChannelSocket() - this socket resoled"),console.log(this)):(console.warn("ChannelSocket() - this socket is not resolving ..."),console.log(this),t("ChannelSocket() - this socket is not resolving ..."))}),2e3)}))}async#O(e){let t=e.data;this.#K&&(console.log("... raw unwrapped message:"),console.log(structuredClone(t)));const n=V(t,"L1489");this.#K&&(console.log("... json unwrapped version of raw message:"),console.log(Object.assign({},n))),"function"!=typeof this.#k&&l("ChannelSocket","received message but there is no handler");const r=n;try{const e=Object.entries(r)[0][1];if("encrypted_contents"===Object.keys(e)[0]){console.log("++++++++ #processMessage: received message:"),console.log(e.encrypted_contents.content);const t=B(await crypto.subtle.digest("SHA-256",(new TextEncoder).encode(e.encrypted_contents.content)));o&&console.log("Received message with hash:",t);const r=this.#S.get(t);r&&(this.#K&&console.log(`++++++++ #processMessage: found matching ack for id ${t}`),this.#S.delete(t),r("success"));const s=Object.entries(n)[0][0],a=e.encrypted_contents.iv;a&&w(a)&&16==a.length?(e.encrypted_contents.iv=_(a),ge(s,e.encrypted_contents,this.keys).then((e=>{this.#K&&(console.log("++++++++ #processMessage: passing to message handler:"),console.log(Object.assign({},e))),this.#k(e)})).catch((()=>{console.warn("Error decrypting message, dropping (ignoring) message")}))):console.error("#processMessage: - iv is malformed, should be 16-char b64 string (ignoring)")}else console.warn("++++++++ #processMessage: can't decipher message, passing along unchanged:"),console.log(Object.assign({},r)),this.onMessage(r)}catch(e){console.log(`++++++++ #processMessage: caught exception while decyphering (${e}), passing it along unchanged`),this.onMessage(r)}}#R(e){console.warn("WARNING: firstMessageEventHandler() called recursively (?)"),console.warn(e)}#_(e){const t=this.#R.bind(this);this.#v.websocket.addEventListener("message",t),this.#v.websocket.removeEventListener("message",this.#A),console.log("++++++++ readyPromise() received ChannelKeysMessage:"),console.log(e);const n=V(e.data,"L2239");console.log(n),d(n.ready,"got roomKeys but channel reports it is not ready (?)"),this.motd=n.motd,this.locked=n.roomLocked;const r=V(n.keys.ownerKey,"L2246");d(this.keys.ownerPubKeyX===r.x,"ChannelSocket.readyPromise(): owner key mismatch??"),d(this.readyFlag,"#ChannelReadyFlag is false, parent not ready (?)"),this.owner=oe.compareKeys(r,this.exportable_pubKey),this.admin=this.owner,this.#v.websocket.addEventListener("message",this.#O.bind(this)),this.#v.websocket.removeEventListener("message",t),s&&console.log("++++++++ readyPromise() all done - resolving!"),this.#m=!0,this.#C(this)}get status(){if(!this.#v.websocket)return"CLOSED";switch(this.#v.websocket.readyState){case 0:return"CONNECTING";case 1:return"OPEN";case 2:return"CLOSING";default:return"CLOSED"}}set onMessage(e){this.#k=e}get onMessage(){return this.#k}set enableTrace(e){this.#K=e,console.log(`Tracing ${e?"en":"dis"}abled`)}send(e){let t="string"==typeof e?new ce(this,e):e;return d(this.#v.websocket,"ChannelSocket.send() called before ready"),this.#v.closed&&(this.#K&&console.info("send() triggered reset of #readyPromise() (normal)"),this.ready=this.channelSocketReady=this.#E(),this.#m=!0),new Promise(((e,n)=>{t.ready.then((t=>{this.ready.then((()=>{switch(this.#m||n("ChannelSocket.send() is confused - ready or not?"),this.#v.websocket.readyState){case 1:this.#K&&(console.log("Wrapping message contents:"),console.log(Object.assign({},t.contents))),oe.wrap(this.keys.encryptionKey,JSON.stringify(t.contents),"string").then((t=>{const r=JSON.stringify({encrypted_contents:t});console.log("++++++++ ChannelSocket.send(): sending message:"),console.log(t.content),crypto.subtle.digest("SHA-256",(new TextEncoder).encode(t.content)).then((t=>{const s=B(t);console.log("Which has hash:"),console.log(s),this.#S.set(s,e),this.#v.websocket.send(r),setTimeout((()=>{if(this.#S.has(s)){this.#S.delete(s);const e=`Websocket request timed out (no ack) after ${this.#v.timeout}ms (${s})`;console.error(e),n(e)}else this.#K&&console.log("++++++++ ChannelSocket.send() completed sending"),e("success")}),this.#v.timeout)}))}));break;case 3:case 0:case 2:n("socket not OPEN - either CLOSED or in the state of CONNECTING/CLOSING")}}))}))}))}get exportable_owner_pubKey(){return this.keys.ownerKey}}n([ee],de.prototype,"onMessage",null),n([function(e,t,n){if(n&&n.value){const e=n.value;n.value=function(...t){for(let e of t){const t=e.constructor.name;"string"==typeof(n=t)&&te.includes(n)&&d(se(e,t),`invalid parameter: ${e} (expecting ${t})`)}var n;return e.call(this,...t)}}}],de.prototype,"send",null),n([Q,ee],de.prototype,"exportable_owner_pubKey",null);class ye extends le{constructor(e,t,n){super(e,t,n)}send(e,t){return new Promise(((e,t)=>{t("ChannelEndpoint.send(): send outside ChannelSocket not yet implemented")}))}set onMessage(e){d(!1,"ChannelEndpoint.onMessage: send/receive outside ChannelSocket not yet implemented")}}function ge(e,t,n){return new Promise(((r,s)=>{const o=p.exec(e),a=n.encryptionKey;if(o){let e={type:"encrypted",channelID:o[1],timestampPrefix:o[2],_id:o[1]+o[2],encrypted_contents:g(t)};oe.unwrap(a,e.encrypted_contents,"string").then((t=>{let o={...e,...V(t,"L1977")};o.contents&&(o.text=o.contents),o.user={name:o.sender_username?o.sender_username:"Unknown",_id:o.sender_pubKey},o.verificationToken&&!o.sender_pubKey?console.info("WARNING: message with verification token is lacking sender identity.\n         This may not be allowed in the future."):oe.importKey("jwk",o.sender_pubKey,"ECDH",!0,[]).then((e=>{oe.deriveKey(n.signKey,e,"HMAC",!1,["sign","verify"]).then((e=>{oe.verify(e,o.sign,o.contents).then((t=>{t||(console.log("***** signature is NOT correct for message (rejecting)"),console.log("verifyKey:"),console.log(Object.assign({},e)),console.log("m2.sign"),console.log(Object.assign({},o.sign)),console.log("m2.contents"),console.log(structuredClone(o.contents)),console.log("Message:"),console.log(Object.assign({},o)),console.trace(),s(null)),r(o)}))}))}))}))}else console.log("++++++++ #processMessage: ERROR - cannot parse channel ID / timestamp, invalid message"),console.log(Object.assign({},e)),console.log(Object.assign({},t)),s(null)}))}class ue{version="1";#j="b";#M;#B;#P;#x;#I;iv;salt;fileName;dateAndTime;shardServer;fileType;lastModified;actualSize;savedSize;constructor(e){const{version:t,type:n,id:r,key:s,id32:o,key32:a,verification:i,iv:c,salt:l,fileName:h,dateAndTime:d,shardServer:y,fileType:g,lastModified:u,actualSize:p,savedSize:f}=e;t&&(this.version=t),n&&(this.#j=n),this.id=r,this.key=s,o&&(this.id32=o),a&&(this.key32=a),i&&(this.#I=i),this.iv=c,this.salt=l,this.fileName=h,this.dateAndTime=d,this.shardServer=y,this.fileType=g,this.lastModified=u,this.actualSize=p,this.savedSize=f}#T(){this.#M&&this.#M}set id(e){w(e),this.#M=e,this.#P=N(e)}get id(){return d(this.#M,"object handle identifier is undefined"),this.#M}set key(e){w(e),this.#B=e,this.#x=N(e)}get key(){return d(this.#B,"object handle identifier is undefined"),this.#B}set id32(e){if(!L(e))throw new Error("Invalid base62 encoded ID");this.#P=e,this.#M=D(e)}set key32(e){if(!L(e))throw new Error("Invalid base62 encoded Key");this.#x=e,this.#B=D(e)}get id32(){return d(this.#P,"object handle id (32) is undefined"),this.#P}get key32(){return d(this.#x,"object handle key (32) is undefined"),this.#x}set verification(e){this.#I=e,this.#T()}get verification(){return d(this.#I,"object handle verification is undefined"),this.#I}get type(){return this.#j}}class pe{server;shardServer;channelServer;constructor(e,t,n){this.server=e+"/api/v1",this.channelServer=t+"/api/room/",n&&(this.shardServer=n+"/api/v1")}#D(e){const t=e.byteLength;let n;n=t+4<4096?4096:t+4<1048576?2**Math.ceil(Math.log2(t+4)):1048576*Math.ceil((t+4)/1048576);let r=U(e,new Uint8Array(n-t).buffer);return new DataView(r).setUint32(n-4,t),o&&(console.log("#padBuf bytes:"),console.log(r.slice(-4))),r}#N(e){const t=e.slice(-4);var n=new DataView(t).getUint32(0);const r=new DataView(t).getUint32(0,!0);return r<n&&(o&&console.warn("#unpadData - size of shard encoded as little endian (fixed upon read)"),n=r),o&&console.log(`#unpadData - size of object is ${n}`),e.slice(0,n)}#L(e,t){return new Promise(((n,r)=>{try{oe.importKey("raw",_(decodeURIComponent(e)),"PBKDF2",!1,["deriveBits","deriveKey"]).then((e=>{crypto.subtle.deriveKey({name:"PBKDF2",salt:t,iterations:1e5,hash:"SHA-256"},e,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]).then((e=>{n(e)}))}))}catch(e){r(e)}}))}#U(e,t){return new Promise(((n,r)=>{i(this.server+"/storeRequest?name="+e+"&type="+t).then((e=>e.arrayBuffer())).then((e=>{const t=W(e);n({salt:new Uint8Array(t.salt),iv:new Uint8Array(t.iv)})})).catch((e=>{console.warn(`**** ERROR: ${e}`),r(e)}))}))}#$(e,t,n,r,s,o,a){return new Promise(((c,l)=>{this.#L(n,a).then((n=>{oe.encrypt(e,n,o,"arrayBuffer").then((e=>{i(this.channelServer+s+"/storageRequest?size="+e.byteLength).then((e=>e.json())).then((n=>{n.hasOwnProperty("error")&&l("storage token request error");let s=JSON.stringify(n);this.storeData(r,t,o,a,s,e).then((e=>{e.error&&l(`storeObject() failed: ${e.error}`),e.image_id!=t&&l(`received imageId ${e.image_id} but expected ${t}`),c(e.verification_token)})).catch((e=>{console.log("ERROR in _storeObject(): ${e}"),l(e)}))}))}))}))}))}getObjectMetadata(e,t){return new Promise(((n,r)=>{const s=this.#D(e);oe.generateIdKey(s).then((e=>{this.#U(e.id,t).then((r=>{const o={[re]:!0,version:"1",type:t,id:e.id,key:e.key,iv:r.iv,salt:r.salt,paddedBuffer:s};n(o)})).catch((e=>r(e)))}))}))}storeObject(e,t,n,r){return new Promise(((s,a)=>{e instanceof Uint8Array&&(o&&console.log("converting Uint8Array to ArrayBuffer"),e=new Uint8Array(e).buffer),e instanceof ArrayBuffer||"ArrayBuffer"==e.constructor.name||(o&&console.log("buf must be an ArrayBuffer:"),console.log(e),a("buf must be an ArrayBuffer"));const i=e.byteLength;if(r){const e={[re]:!0,version:"1",type:t,id:r.id,key:r.key,iv:r.iv,salt:r.salt,actualSize:i,verification:this.#$(r.paddedBuffer,r.id,r.key,t,n,r.iv,r.salt)};s(e)}else{const r=this.#D(e);oe.generateIdKey(r).then((e=>{this.#U(e.id,t).then((o=>{const a={[re]:!0,version:"1",type:t,id:e.id,key:e.key,iv:o.iv,salt:o.salt,actualSize:i,verification:this.#$(r,e.id,e.key,t,n,o.iv,o.salt)};s(a)})).catch((e=>a(e)))}))}}))}storeRequest(e){return new Promise(((t,n)=>{i(this.server+"/storeRequest?name="+e).then((e=>(e.ok||n(new Error("Network response was not OK")),e.arrayBuffer()))).then((e=>{t(e)})).catch((e=>{n(e)}))}))}storeData(e,t,n,r,s,o){return new Promise(((a,c)=>{i(this.server+"/storeData?type="+e+"&key="+b(t),{method:"POST",body:q({iv:n,salt:r,image:o,storageToken:(new TextEncoder).encode(s),vid:crypto.getRandomValues(new Uint8Array(48))})}).then((e=>(e.ok||c("response from storage server was not OK"),e.json()))).then((e=>{a(e)})).catch((e=>{c(e)}))}))}#H(e,t){return new Promise(((n,r)=>{try{let t=V(oe.ab2str(new Uint8Array(e)),"L3062");t.error&&r(`#processData() error: ${t.error}`)}catch(e){}finally{const r=W(e);s&&(console.log("Payload (#processData) is:"),console.log(r));const a=new Uint8Array(r.iv),i=new Uint8Array(r.salt),c=t.iv?"string"==typeof t.iv?_(t.iv):t.iv:void 0,l=t.salt?"string"==typeof t.salt?_(t.salt):t.salt:void 0;c&&!M(a,c)&&(console.error("WARNING: nonce from server differs from local copy"),console.log(`object ID: ${t.id}`),console.log(` local iv: ${B(c)}`),console.log(`server iv: ${B(r.iv)}`)),l&&!M(i,l)&&(console.error("WARNING: salt from server differs from local copy (will use server)"),t.salt?"string"==typeof t.salt?(console.log("h.salt is in string form (unprocessed):"),console.log(t.salt)):(console.log("h.salt is in arrayBuffer or Uint8Array"),console.log("h.salt as b64:"),console.log(B(t.salt)),console.log("h.salt unprocessed:"),console.log(t.salt)):console.log("h.salt is undefined"),console.log("handleSalt as b64:"),console.log(B(l)),console.log("handleSalt unprocessed:"),console.log(l)),o&&(console.log("will use nonce and salt of:"),console.log(`iv: ${B(a)}`),console.log(`salt : ${B(i)}`)),this.#L(t.key,i).then((e=>{const t=r.image;o&&(console.log("data.image:      "),console.log(r.image),console.log("encrypted_image: "),console.log(t)),oe.unwrap(e,{content:t,iv:a},"arrayBuffer").then((e=>{const t=this.#N(e);s&&(console.log("#processData(), unwrapped img: "),console.log(t)),n(t)}))}))}}))}fetchData(e,t="arrayBuffer"){return new Promise((async(n,r)=>{e||r("SBObjectHandle is null or undefined");const o=await e.verification,a=e.shardServer?e.shardServer+"/api/v1":this.shardServer?this.shardServer:this.server;s&&console.log("fetchData(), fetching from server: "+a),i(a+"/fetchData?id="+b(e.id)+"&type="+e.type+"&verification_token="+o,{method:"GET"}).then((e=>(e.ok||r(new Error("Network response was not OK")),e.arrayBuffer()))).then((t=>this.#H(t,e))).then((e=>{n("string"===t?oe.ab2str(new Uint8Array(e)):e)})).catch((e=>{r(e)}))}))}async retrieveImage(e,t,n,r,s){console.trace("retrieveImage()"),console.log(e);const o=n||e.previewId,a=r||e.previewKey,i=s||"p",c=t.find((e=>e.id&&e.id==o));if(console.log(c),c){d(c.verificationToken,"retrieveImage(): verificationToken missing (?)"),d(c.id,"retrieveImage(): id missing (?)");const e={type:i,id:c.id,key:a,verification:new Promise(((e,t)=>{c.verificationToken?e(c.verificationToken):t("retrieveImage(): verificationToken missing (?)")}))},t=await this.fetchData(e);return console.log(t),{url:"data:image/jpeg;base64,"+B(t,"b64")}}return{error:"Failed to fetch data - missing control message for that image"}}}class fe{#F;#J;#G;#V=r;constructor(e,t=!1){console.log(`************ CREATING Snackabra object generation: ${this.version} **************`),e&&(this.#G=Object.assign({},e),this.#F=new pe(e.storage_server,e.channel_server,e.shard_server?e.shard_server:void 0),t&&(s=!0),s&&console.log("++++ Snackabra constructor ++++ setting DBG to TRUE ++++"))}connect(e,t,n){return s&&(console.log("++++ Snackabra.connect() ++++"),t&&console.log(t),n&&console.log(n)),new Promise((async r=>{this.#G?r(new de(this.#G,e,t,n)):r(Promise.any(ae.map((r=>new de(r,e,t,n).ready))))}))}create(e,t,n){return new Promise((async(r,s)=>{try{const{channelData:o,exportable_privateKey:a}=await y(n);o.SERVER_SECRET=t;const c=(new TextEncoder).encode(JSON.stringify(o));let l=await i(e.channel_server+"/api/room/"+o.roomId+"/uploadRoom",{method:"POST",body:c});l=await l.json(),l.success?r({channelId:o.roomId,key:a}):s(JSON.stringify(l))}catch(e){s(e)}}))}get channel(){return this.#J}get storage(){return this.#F}get crypto(){return oe}get version(){return this.#V}}var we={Snackabra:fe,SBMessage:ce,Channel:le,SBCrypto:Y,SB384:ie,arrayBufferToBase64:B,sbCrypto:oe,version:r};return globalThis.SB||(globalThis.SB=we),console.log(`************ SNACKABRA jslib loaded ${globalThis.SB.version} **************`),t})()));